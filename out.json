[
    {
        "comment": "",
        "meta": {
            "range": [
                19,
                64
            ],
            "filename": "bot.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000005",
                "name": "EventEmitter",
                "type": "MemberExpression",
                "value": ".EventEmitter"
            }
        },
        "undocumented": true,
        "name": "EventEmitter",
        "longname": "EventEmitter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70,
                109
            ],
            "filename": "bot.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000013",
                "name": "validator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "validator",
        "longname": "validator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                115,
                150
            ],
            "filename": "bot.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000019",
                "name": "sequence",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sequence",
        "longname": "sequence",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                156,
                182
            ],
            "filename": "bot.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000025",
                "name": "moment",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "moment",
        "longname": "moment",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                188,
                220
            ],
            "filename": "bot.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000031",
                "name": "_debug",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_debug",
        "longname": "_debug",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                226,
                248
            ],
            "filename": "bot.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000039",
                "name": "util",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "util",
        "longname": "util",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                254,
                276
            ],
            "filename": "bot.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000045",
                "name": "when",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "when",
        "longname": "when",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                282,
                309
            ],
            "filename": "bot.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000051",
                "name": "poll",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "poll",
        "longname": "poll",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                315,
                333
            ],
            "filename": "bot.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000057",
                "name": "fs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fs",
        "longname": "fs",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                339,
                360
            ],
            "filename": "bot.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000063",
                "name": "_",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_",
        "longname": "_",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                366,
                388
            ],
            "filename": "bot.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000069",
                "name": "u",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "u",
        "longname": "u",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                415,
                844
            ],
            "filename": "bot.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000074",
                "name": "markdownFormat",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            },
            "vars": {
                "str": "markdownFormat~str"
            }
        },
        "undocumented": true,
        "name": "markdownFormat",
        "longname": "markdownFormat",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                574,
                637
            ],
            "filename": "bot.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000087",
                "name": "str",
                "type": "CallExpression",
                "funcscope": "markdownFormat",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "str",
        "longname": "markdownFormat~str",
        "kind": "member",
        "memberof": "markdownFormat",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                643,
                768
            ],
            "filename": "bot.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000096",
                "name": "str",
                "type": "CallExpression",
                "funcscope": "markdownFormat",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "str",
        "longname": "markdownFormat~str",
        "kind": "member",
        "memberof": "markdownFormat",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                903,
                945
            ],
            "filename": "bot.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000131",
                "name": "htmlFormat",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "undocumented": true,
        "name": "htmlFormat",
        "longname": "htmlFormat",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a Bot instance that is then attached to a Webex Team Room.\n *\n * @constructor\n * @param {Object} framework - The framework object this Bot spawns under.\n * @param {ConfigObject} options - The options of the framework object this Bot spawns under.\n * @param {Object} webex - The webex sdk of the framework object this Bot spawns under.\n * @property {string} id - Bot UUID\n * @property {boolean} active - Bot active state\n * @property {object} person - Bot's Webex  Person Object\n * @property {string} email - Bot email\n * @property {object} room - Bot's Webex Room object\n * @property {object} membership - Bot's Webex Membership object\n * @property {boolean} isLocked - If bot is locked\n * @property {boolean} isModerator - If bot is a moderator\n * @property {boolean} isGroup - If bot is in Group Room\n * @property {boolean} isDirect - If bot is in 1:1/Direct Room\n * @property {boolean} isTeam - If bot is in a Room associated to a Team\n * @property {string} isDirectTo - Recipient Email if bot is in 1:1/Direct Room\n * @property {date} lastActivity - Last bot activity\n */",
        "meta": {
            "range": [
                2038,
                3336
            ],
            "filename": "bot.js",
            "lineno": 59,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000137",
                "name": "Bot",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework"
                ]
            },
            "vars": {
                "this.id": "Bot#id",
                "this.framework": "Bot#framework",
                "this.options": "Bot#options",
                "this.webex": "Bot#webex",
                "this.debug": "Bot#debug",
                "": null,
                "this.batchDelay": "Bot#batchDelay",
                "this.active": "Bot#active",
                "this.room": "Bot#room",
                "this.person": "Bot#person",
                "this.membership": "Bot#membership",
                "this.memberships": "Bot#memberships",
                "this.email": "Bot#email",
                "this.isLocked": "Bot#isLocked",
                "this.isModerator": "Bot#isModerator",
                "this.isGroup": "Bot#isGroup",
                "this.isDirect": "Bot#isDirect",
                "this.isTeam": "Bot#isTeam",
                "this.lastActivity": "Bot#lastActivity",
                "this.apiUrl": "Bot#apiUrl"
            }
        },
        "description": "<p>Creates a Bot instance that is then attached to a Webex Team Room.</p>",
        "kind": "class",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The framework object this Bot spawns under.</p>",
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "ConfigObject"
                    ]
                },
                "description": "<p>The options of the framework object this Bot spawns under.</p>",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The webex sdk of the framework object this Bot spawns under.</p>",
                "name": "webex"
            }
        ],
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Bot UUID</p>",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>Bot active state</p>",
                "name": "active"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot's Webex  Person Object</p>",
                "name": "person"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Bot email</p>",
                "name": "email"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot's Webex Room object</p>",
                "name": "room"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot's Webex Membership object</p>",
                "name": "membership"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If bot is locked</p>",
                "name": "isLocked"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If bot is a moderator</p>",
                "name": "isModerator"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If bot is in Group Room</p>",
                "name": "isGroup"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If bot is in 1:1/Direct Room</p>",
                "name": "isDirect"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If bot is in a Room associated to a Team</p>",
                "name": "isTeam"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Recipient Email if bot is in 1:1/Direct Room</p>",
                "name": "isDirectTo"
            },
            {
                "type": {
                    "names": [
                        "date"
                    ]
                },
                "description": "<p>Last bot activity</p>",
                "name": "lastActivity"
            }
        ],
        "name": "Bot",
        "longname": "Bot",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2094,
                2117
            ],
            "filename": "bot.js",
            "lineno": 62,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000148",
                "name": "this.id",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "Bot#id",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2122,
                2148
            ],
            "filename": "bot.js",
            "lineno": 64,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000157",
                "name": "this.framework",
                "type": "Identifier",
                "value": "framework",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "framework",
        "longname": "Bot#framework",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2152,
                2184
            ],
            "filename": "bot.js",
            "lineno": 65,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000163",
                "name": "this.options",
                "type": "MemberExpression",
                "value": "framework.options",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "options",
        "longname": "Bot#options",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2188,
                2216
            ],
            "filename": "bot.js",
            "lineno": 66,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000171",
                "name": "this.webex",
                "type": "MemberExpression",
                "value": "framework.webex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webex",
        "longname": "Bot#webex",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2221,
                2475
            ],
            "filename": "bot.js",
            "lineno": 68,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000179",
                "name": "this.debug",
                "type": "FunctionExpression",
                "paramnames": [
                    "message"
                ]
            },
            "vars": {
                "message": "Bot#debug~message"
            }
        },
        "undocumented": true,
        "name": "debug",
        "longname": "Bot#debug",
        "kind": "function",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2259,
                2331
            ],
            "filename": "bot.js",
            "lineno": 69,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000187",
                "name": "message",
                "type": "CallExpression",
                "funcscope": "Bot#debug",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Bot#debug~message",
        "kind": "member",
        "memberof": "Bot#debug",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2705,
                2748
            ],
            "filename": "bot.js",
            "lineno": 82,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000228",
                "name": "this.batchDelay",
                "type": "MemberExpression",
                "value": "this.framework.batchDelay",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "batchDelay",
        "longname": "Bot#batchDelay",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2752,
                2771
            ],
            "filename": "bot.js",
            "lineno": 83,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000238",
                "name": "this.active",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "active",
        "longname": "Bot#active",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2775,
                2789
            ],
            "filename": "bot.js",
            "lineno": 84,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000244",
                "name": "this.room",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "room",
        "longname": "Bot#room",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2793,
                2828
            ],
            "filename": "bot.js",
            "lineno": 85,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000250",
                "name": "this.person",
                "type": "MemberExpression",
                "value": "this.framework.person",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "person",
        "longname": "Bot#person",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2832,
                2852
            ],
            "filename": "bot.js",
            "lineno": 86,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000260",
                "name": "this.membership",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "Bot#membership",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2856,
                2877
            ],
            "filename": "bot.js",
            "lineno": 87,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000266",
                "name": "this.memberships",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "memberships",
        "longname": "Bot#memberships",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2881,
                2914
            ],
            "filename": "bot.js",
            "lineno": 88,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000272",
                "name": "this.email",
                "type": "MemberExpression",
                "value": "this.framework.email",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "email",
        "longname": "Bot#email",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2918,
                2939
            ],
            "filename": "bot.js",
            "lineno": 89,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000282",
                "name": "this.isLocked",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isLocked",
        "longname": "Bot#isLocked",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2943,
                2967
            ],
            "filename": "bot.js",
            "lineno": 90,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000288",
                "name": "this.isModerator",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isModerator",
        "longname": "Bot#isModerator",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2971,
                2991
            ],
            "filename": "bot.js",
            "lineno": 91,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000294",
                "name": "this.isGroup",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isGroup",
        "longname": "Bot#isGroup",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2995,
                3016
            ],
            "filename": "bot.js",
            "lineno": 92,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000300",
                "name": "this.isDirect",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isDirect",
        "longname": "Bot#isDirect",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3020,
                3039
            ],
            "filename": "bot.js",
            "lineno": 93,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000306",
                "name": "this.isTeam",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isTeam",
        "longname": "Bot#isTeam",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3043,
                3086
            ],
            "filename": "bot.js",
            "lineno": 94,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000312",
                "name": "this.lastActivity",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastActivity",
        "longname": "Bot#lastActivity",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3161,
                3248
            ],
            "filename": "bot.js",
            "lineno": 97,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000325",
                "name": "this.apiUrl",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "apiUrl",
        "longname": "Bot#apiUrl",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Stop Bot.\n *\n * @function\n * @private\n * @returns {Boolean}\n *\n * @example\n * bot.stop();\n */",
        "meta": {
            "range": [
                3473,
                3659
            ],
            "filename": "bot.js",
            "lineno": 117,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000370",
                "name": "Bot.prototype.stop",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.active": "Bot#active"
            }
        },
        "description": "<p>Stop Bot.</p>",
        "kind": "function",
        "access": "private",
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "examples": [
            "bot.stop();"
        ],
        "name": "stop",
        "longname": "Bot#stop",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3587,
                3606
            ],
            "filename": "bot.js",
            "lineno": 123,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000391",
                "name": "this.active",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "active",
        "longname": "Bot#active",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Start Bot.\n *\n * @function\n * @private\n * @returns {Boolean}\n *\n * @example\n * bot.start();\n */",
        "meta": {
            "range": [
                3765,
                3953
            ],
            "filename": "bot.js",
            "lineno": 140,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000402",
                "name": "Bot.prototype.start",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.active": "Bot#active"
            }
        },
        "description": "<p>Start Bot.</p>",
        "kind": "function",
        "access": "private",
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "examples": [
            "bot.start();"
        ],
        "name": "start",
        "longname": "Bot#start",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3882,
                3900
            ],
            "filename": "bot.js",
            "lineno": 146,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000424",
                "name": "this.active",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "active",
        "longname": "Bot#active",
        "kind": "member",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Instructs Bot to exit from room.\n *\n * @function\n * @returns {Promise.<Boolean>}\n *\n * @example\n * bot.exit();\n */",
        "meta": {
            "range": [
                4078,
                4360
            ],
            "filename": "bot.js",
            "lineno": 162,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000435",
                "name": "Bot.prototype.exit",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Instructs Bot to exit from room.</p>",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "examples": [
            "bot.exit();"
        ],
        "name": "exit",
        "longname": "Bot#exit",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Accessor for Webex SDK instance\n * \n * This is a convenience and returns the same shared Webex SDK instance \n * that is returned by a call to framework.getWebexSDK()\n *\n * Access SDK functionality described in [SDK Reference](https://developer.webex.com/docs/sdks/browser#sdk-api-reference)\n * \n * @function\n * @returns {object} - Bot's Webex SDK instance\n *\n * @example\n * let webex = bot.getWebexSDK();\n * webex.people.get(me)\n *   .then(person => {\n *     console.log('SDK instantiated by: ' + person.displayName);\n *   }).catch(e => {\n *     console.error('SDK failed to lookup framework user: ' + e.message);\n *   });\n */",
        "meta": {
            "range": [
                4997,
                5061
            ],
            "filename": "bot.js",
            "lineno": 197,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000487",
                "name": "Bot.prototype.getWebexSDK",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "<p>Accessor for Webex SDK instance</p>\n<p>This is a convenience and returns the same shared Webex SDK instance\nthat is returned by a call to framework.getWebexSDK()</p>\n<p>Access SDK functionality described in <a href=\"https://developer.webex.com/docs/sdks/browser#sdk-api-reference\">SDK Reference</a></p>",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<ul>\n<li>Bot's Webex SDK instance</li>\n</ul>"
            }
        ],
        "examples": [
            "let webex = bot.getWebexSDK();\nwebex.people.get(me)\n  .then(person => {\n    console.log('SDK instantiated by: ' + person.displayName);\n  }).catch(e => {\n    console.error('SDK failed to lookup framework user: ' + e.message);\n  });"
        ],
        "name": "getWebexSDK",
        "longname": "Bot#getWebexSDK",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Instructs Bot to add person(s) to room.\n *\n * @function\n * @param {(String|Array)} email(s) - Email Address (or Array of Email Addresses) of Person(s) to add to room.\n * @param {Boolean} [moderator]\n * Add as moderator.\n * @returns {Promise.<Array>} Array of emails added\n * @example\n * // add one person to room by email\n * bot.add('john@test.com');\n * @example\n * // add one person as moderator to room by email\n * bot.add('john@test.com', true)\n *   .catch(function(err) {\n *     // log error if unsuccessful\n *     console.log(err.message);\n *   });\n * @example\n * // add 3 people to room by email\n * bot.add(['john@test.com', 'jane@test.com', 'bill@test.com']);\n */",
        "meta": {
            "range": [
                5743,
                8289
            ],
            "filename": "bot.js",
            "lineno": 224,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000500",
                "name": "Bot.prototype.add",
                "type": "FunctionExpression",
                "paramnames": [
                    "email",
                    "asModerator"
                ]
            },
            "vars": {
                "asModerator": "Bot#add~asModerator",
                "add": "Bot#add~add",
                "": null,
                "batch": "Bot#add~batch",
                "email": "Bot#add~email"
            }
        },
        "description": "<p>Instructs Bot to add person(s) to room.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "description": "<p>Email Address (or Array of Email Addresses) of Person(s) to add to room.</p>",
                "name": "email(s)"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "optional": true,
                "description": "<p>Add as moderator.</p>",
                "name": "moderator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Array>"
                    ]
                },
                "description": "<p>Array of emails added</p>"
            }
        ],
        "examples": [
            "// add one person to room by email\nbot.add('john@test.com');",
            "// add one person as moderator to room by email\nbot.add('john@test.com', true)\n  .catch(function(err) {\n    // log error if unsuccessful\n    console.log(err.message);\n  });",
            "// add 3 people to room by email\nbot.add(['john@test.com', 'jane@test.com', 'bill@test.com']);"
        ],
        "name": "add",
        "longname": "Bot#add",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5823,
                5886
            ],
            "filename": "bot.js",
            "lineno": 227,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000511",
                "name": "asModerator",
                "type": "LogicalExpression",
                "funcscope": "Bot#add",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "asModerator",
        "longname": "Bot#add~asModerator",
        "kind": "member",
        "memberof": "Bot#add",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5957,
                6668
            ],
            "filename": "bot.js",
            "lineno": 230,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000520",
                "name": "add",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "add",
        "longname": "Bot#add~add",
        "kind": "function",
        "memberof": "Bot#add",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6070,
                6090
            ],
            "filename": "bot.js",
            "lineno": 233,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000549",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "this.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6100,
                6114
            ],
            "filename": "bot.js",
            "lineno": 234,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000555",
                "name": "personEmail",
                "type": "Identifier",
                "value": "e"
            }
        },
        "undocumented": true,
        "name": "personEmail",
        "longname": "personEmail",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6124,
                6138
            ],
            "filename": "bot.js",
            "lineno": 235,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000557",
                "name": "isModerator",
                "type": "Identifier",
                "value": "m"
            }
        },
        "undocumented": true,
        "name": "isModerator",
        "longname": "isModerator",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7173,
                7313
            ],
            "filename": "bot.js",
            "lineno": 269,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000677",
                "name": "batch",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "batch",
        "longname": "Bot#add~batch",
        "kind": "member",
        "memberof": "Bot#add",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7209,
                7225
            ],
            "filename": "bot.js",
            "lineno": 270,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000688",
                "name": "e",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7394,
                7430
            ],
            "filename": "bot.js",
            "lineno": 276,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000724",
                "name": "batchResult",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "batchResult",
        "longname": "<anonymous>~batchResult",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7871,
                7898
            ],
            "filename": "bot.js",
            "lineno": 290,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000773",
                "name": "email",
                "type": "CallExpression",
                "funcscope": "Bot#add",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "email",
        "longname": "Bot#add~email",
        "kind": "member",
        "memberof": "Bot#add",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Instructs Bot to remove person from room.\n *\n * @function\n * @param {(String|Array)} email(s) - Email Address (or Array of Email Addresses) of Person(s) to remove from room.\n * @returns {Promise.<Array>} Array of emails removed\n *\n * @example\n * // remove one person to room by email\n * bot.remove('john@test.com');\n *\n * @example\n * // remove 3 people from room by email\n * bot.remove(['john@test.com', 'jane@test.com', 'bill@test.com']);\n */",
        "meta": {
            "range": [
                8828,
                11383
            ],
            "filename": "bot.js",
            "lineno": 326,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000820",
                "name": "Bot.prototype.remove",
                "type": "FunctionExpression",
                "paramnames": [
                    "email"
                ]
            },
            "vars": {
                "remove": "Bot#remove~remove",
                "": null,
                "batch": "Bot#remove~batch",
                "email": "Bot#remove~email"
            }
        },
        "description": "<p>Instructs Bot to remove person from room.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "description": "<p>Email Address (or Array of Email Addresses) of Person(s) to remove from room.</p>",
                "name": "email(s)"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Array>"
                    ]
                },
                "description": "<p>Array of emails removed</p>"
            }
        ],
        "examples": [
            "// remove one person to room by email\nbot.remove('john@test.com');",
            "// remove 3 people from room by email\nbot.remove(['john@test.com', 'jane@test.com', 'bill@test.com']);"
        ],
        "name": "remove",
        "longname": "Bot#remove",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8932,
                9926
            ],
            "filename": "bot.js",
            "lineno": 329,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000830",
                "name": "remove",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "remove",
        "longname": "Bot#remove~remove",
        "kind": "function",
        "memberof": "Bot#remove",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9189,
                9209
            ],
            "filename": "bot.js",
            "lineno": 332,
            "columnno": 51,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000853",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "this.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9211,
                9229
            ],
            "filename": "bot.js",
            "lineno": 332,
            "columnno": 73,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000859",
                "name": "personEmail",
                "type": "Identifier",
                "value": "email"
            }
        },
        "undocumented": true,
        "name": "personEmail",
        "longname": "personEmail",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9446,
                9479
            ],
            "filename": "bot.js",
            "lineno": 338,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000893",
                "name": "membership",
                "type": "MemberExpression",
                "value": "memberships.items[0]"
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "<anonymous>~membership",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10307,
                10411
            ],
            "filename": "bot.js",
            "lineno": 367,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100000997",
                "name": "batch",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "batch",
        "longname": "Bot#remove~batch",
        "kind": "member",
        "memberof": "Bot#remove",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10492,
                10528
            ],
            "filename": "bot.js",
            "lineno": 373,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001035",
                "name": "batchResult",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "batchResult",
        "longname": "<anonymous>~batchResult",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10983,
                10999
            ],
            "filename": "bot.js",
            "lineno": 387,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001086",
                "name": "email",
                "type": "MemberExpression",
                "funcscope": "Bot#remove",
                "value": "email[0]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "email",
        "longname": "Bot#remove~email",
        "kind": "member",
        "memberof": "Bot#remove",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Get membership object from room using email.\n *\n * @function\n * @private\n * @param {String} email - Email of person to retrieve membership object of.\n * @returns {Promise.<Membership>}\n *\n * @example\n * bot.getMembership('john@test.com')\n *   .then(function(membership) {\n *     console.log('john@test.com is moderator: %s', membership.isModerator);\n *   });\n */",
        "meta": {
            "range": [
                11756,
                12352
            ],
            "filename": "bot.js",
            "lineno": 420,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001128",
                "name": "Bot.prototype.getMembership",
                "type": "FunctionExpression",
                "paramnames": [
                    "email"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Get membership object from room using email.</p>",
        "kind": "function",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Email of person to retrieve membership object of.</p>",
                "name": "email"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Membership>"
                    ]
                }
            }
        ],
        "examples": [
            "bot.getMembership('john@test.com')\n  .then(function(membership) {\n    console.log('john@test.com is moderator: %s', membership.isModerator);\n  });"
        ],
        "name": "getMembership",
        "longname": "Bot#getMembership",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11973,
                11993
            ],
            "filename": "bot.js",
            "lineno": 427,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001156",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "this.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12001,
                12019
            ],
            "filename": "bot.js",
            "lineno": 428,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001162",
                "name": "personEmail",
                "type": "Identifier",
                "value": "email"
            }
        },
        "undocumented": true,
        "name": "personEmail",
        "longname": "personEmail",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Get room moderators.\n *\n * @function\n * @returns {Promise.<Array>}\n *\n * @example\n * bot.getModerators()\n *   .then(function(moderators) {\n *     console.log(moderators);\n *   });\n */",
        "meta": {
            "range": [
                12546,
                12692
            ],
            "filename": "bot.js",
            "lineno": 454,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001211",
                "name": "Bot.prototype.getModerators",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Get room moderators.</p>",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Array>"
                    ]
                }
            }
        ],
        "examples": [
            "bot.getModerators()\n  .then(function(moderators) {\n    console.log(moderators);\n  });"
        ],
        "name": "getModerators",
        "longname": "Bot#getModerators",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Create new room with people by email\n *\n * @function\n * @param {String} name - Name of room.\n * @param {Array} emails - Emails of people to add to room.\n * @param {Boolean} isTeam -- Create a team room (if bot is already in a team space)\n * @returns {Promise.<Bot>}\n */",
        "meta": {
            "range": [
                12972,
                14999
            ],
            "filename": "bot.js",
            "lineno": 469,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001237",
                "name": "Bot.prototype.newRoom",
                "type": "FunctionExpression",
                "paramnames": [
                    "name",
                    "emails",
                    "isTeam"
                ]
            },
            "vars": {
                "newRoomBot": "Bot#newRoom~newRoomBot",
                "teamId": "Bot#newRoom~teamId",
                "newRoom": "Bot#newRoom~newRoom",
                "newRoom.teamId": "Bot#newRoom~newRoom.teamId",
                "": null
            }
        },
        "description": "<p>Create new room with people by email</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Name of room.</p>",
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Emails of people to add to room.</p>",
                "name": "emails"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<ul>\n<li>Create a team room (if bot is already in a team space)</li>\n</ul>",
                "name": "isTeam"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Bot>"
                    ]
                }
            }
        ],
        "name": "newRoom",
        "longname": "Bot#newRoom",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13036,
                13051
            ],
            "filename": "bot.js",
            "lineno": 470,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001249",
                "name": "newRoomBot",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "newRoomBot",
        "longname": "Bot#newRoom~newRoomBot",
        "kind": "member",
        "memberof": "Bot#newRoom",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13059,
                13070
            ],
            "filename": "bot.js",
            "lineno": 471,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001253",
                "name": "teamId",
                "type": "Literal",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "teamId",
        "longname": "Bot#newRoom~teamId",
        "kind": "member",
        "memberof": "Bot#newRoom",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13137,
                13162
            ],
            "filename": "bot.js",
            "lineno": 476,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001265",
                "name": "teamId",
                "type": "MemberExpression",
                "funcscope": "Bot#newRoom",
                "value": "this.room.teamId",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "teamId",
        "longname": "Bot#newRoom~teamId",
        "kind": "member",
        "memberof": "Bot#newRoom",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13292,
                13317
            ],
            "filename": "bot.js",
            "lineno": 483,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001282",
                "name": "newRoom",
                "type": "ObjectExpression",
                "value": "{\"title\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "newRoom",
        "longname": "Bot#newRoom~newRoom",
        "kind": "member",
        "memberof": "Bot#newRoom",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13304,
                13315
            ],
            "filename": "bot.js",
            "lineno": 483,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001285",
                "name": "title",
                "type": "Identifier",
                "value": "name"
            }
        },
        "undocumented": true,
        "name": "title",
        "longname": "Bot#newRoom~newRoom.title",
        "kind": "member",
        "memberof": "Bot#newRoom~newRoom",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13335,
                13358
            ],
            "filename": "bot.js",
            "lineno": 484,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001291",
                "name": "newRoom.teamId",
                "type": "Identifier",
                "funcscope": "Bot#newRoom",
                "value": "teamId",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "teamId",
        "longname": "Bot#newRoom~newRoom.teamId",
        "kind": "member",
        "memberof": "Bot#newRoom~newRoom",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13465,
                13474
            ],
            "filename": "bot.js",
            "lineno": 490,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001321",
                "name": "count",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "count",
        "longname": "<anonymous>~count",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13514,
                13642
            ],
            "filename": "bot.js",
            "lineno": 493,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001325",
                "name": "bot",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "<anonymous>~bot",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13702,
                13918
            ],
            "filename": "bot.js",
            "lineno": 499,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001340",
                "name": "isReady",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "isReady",
        "longname": "<anonymous>~isReady",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14315,
                14331
            ],
            "filename": "bot.js",
            "lineno": 517,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001387",
                "name": "newRoomBot",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "bot",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "newRoomBot",
        "longname": "<anonymous>~newRoomBot",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14345,
                14359
            ],
            "filename": "bot.js",
            "lineno": 518,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001391",
                "name": "newRoom",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "room",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "newRoom",
        "longname": "<anonymous>~newRoom",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Create new Team Room\n * \n * This can also be done by passing an optional boolean \n * isTeam param to the newRoom() function, but this function\n * is also kept for compatibility with node-flint\n *\n * @function\n * @param {String} name - Name of room.\n * @param {Array} emails - Emails of people to add to room.\n * @returns {Promise.<Bot>}\n */",
        "meta": {
            "range": [
                15350,
                15557
            ],
            "filename": "bot.js",
            "lineno": 563,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001471",
                "name": "Bot.prototype.newTeamRoom",
                "type": "FunctionExpression",
                "paramnames": [
                    "name",
                    "emails"
                ]
            }
        },
        "description": "<p>Create new Team Room</p>\n<p>This can also be done by passing an optional boolean\nisTeam param to the newRoom() function, but this function\nis also kept for compatibility with node-flint</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Name of room.</p>",
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Emails of people to add to room.</p>",
                "name": "emails"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Bot>"
                    ]
                }
            }
        ],
        "name": "newTeamRoom",
        "longname": "Bot#newTeamRoom",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Enable Room Moderation.\n * \n * This function will not work when framework was created\n * using a bot token, it requires an authorized user token\n *\n * @function\n * @returns {Promise.<Bot>}\n *\n * @example\n * bot.moderateRoom()\n *   .then(function(err) {\n *     console.log(err.message)\n *   });\n */",
        "meta": {
            "range": [
                15865,
                16573
            ],
            "filename": "bot.js",
            "lineno": 586,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001504",
                "name": "Bot.prototype.moderateRoom",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "membership": "Bot#moderateRoom~membership",
                "membership.isModerator": "Bot#moderateRoom~membership.isModerator"
            }
        },
        "description": "<p>Enable Room Moderation.</p>\n<p>This function will not work when framework was created\nusing a bot token, it requires an authorized user token</p>",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Bot>"
                    ]
                }
            }
        ],
        "examples": [
            "bot.moderateRoom()\n  .then(function(err) {\n    console.log(err.message)\n  });"
        ],
        "name": "moderateRoom",
        "longname": "Bot#moderateRoom",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16355,
                16383
            ],
            "filename": "bot.js",
            "lineno": 602,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001560",
                "name": "membership",
                "type": "MemberExpression",
                "value": "this.membership"
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "Bot#moderateRoom~membership",
        "kind": "member",
        "memberof": "Bot#moderateRoom",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16426,
                16455
            ],
            "filename": "bot.js",
            "lineno": 604,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001572",
                "name": "membership.isModerator",
                "type": "Literal",
                "funcscope": "Bot#moderateRoom",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isModerator",
        "longname": "Bot#moderateRoom~membership.isModerator",
        "kind": "member",
        "memberof": "Bot#moderateRoom~membership",
        "scope": "static"
    },
    {
        "comment": "/**\n * Disable Room Moderation.\n *\n * This function will not work when framework was created\n * using a bot token, it requires an authorized user token\n *\n * @function\n * @returns {Promise.<Bot>}\n *\n * @example\n * bot.unmoderateRoom()\n *   .then(function(err) {\n *     console.log(err.message)\n *   });\n */",
        "meta": {
            "range": [
                16883,
                17875
            ],
            "filename": "bot.js",
            "lineno": 628,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001595",
                "name": "Bot.prototype.unmoderateRoom",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Disable Room Moderation.</p>\n<p>This function will not work when framework was created\nusing a bot token, it requires an authorized user token</p>",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Bot>"
                    ]
                }
            }
        ],
        "examples": [
            "bot.unmoderateRoom()\n  .then(function(err) {\n    console.log(err.message)\n  });"
        ],
        "name": "unmoderateRoom",
        "longname": "Bot#unmoderateRoom",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17570,
                17683
            ],
            "filename": "bot.js",
            "lineno": 652,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001685",
                "name": "batch",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "batch",
        "longname": "<anonymous>~batch",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Assign Moderator in Room\n *\n * This function will not work when framework was created\n * using a bot token, it requires an authorized user token\n *\n * @function\n * @param {(String|Array)} email(s) - Email Address (or Array of Email Addresses) of Person(s) to assign as moderator.\n * @returns {Promise.<Bot>}\n *\n * @example\n * bot.moderatorSet('john@test.com')\n *   .then(function(err) {\n *     console.log(err.message)\n *   });\n */",
        "meta": {
            "range": [
                18317,
                19703
            ],
            "filename": "bot.js",
            "lineno": 683,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001727",
                "name": "Bot.prototype.moderatorSet",
                "type": "FunctionExpression",
                "paramnames": [
                    "email"
                ]
            },
            "vars": {
                "set": "Bot#moderatorSet~set",
                "": null,
                "batch": "Bot#moderatorSet~batch"
            }
        },
        "description": "<p>Assign Moderator in Room</p>\n<p>This function will not work when framework was created\nusing a bot token, it requires an authorized user token</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "description": "<p>Email Address (or Array of Email Addresses) of Person(s) to assign as moderator.</p>",
                "name": "email(s)"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Bot>"
                    ]
                }
            }
        ],
        "examples": [
            "bot.moderatorSet('john@test.com')\n  .then(function(err) {\n    console.log(err.message)\n  });"
        ],
        "name": "moderatorSet",
        "longname": "Bot#moderatorSet",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18433,
                18726
            ],
            "filename": "bot.js",
            "lineno": 686,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001737",
                "name": "set",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "set",
        "longname": "Bot#moderatorSet~set",
        "kind": "function",
        "memberof": "Bot#moderatorSet",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18556,
                18585
            ],
            "filename": "bot.js",
            "lineno": 690,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001761",
                "name": "membership.isModerator",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isModerator",
        "longname": "membership.isModerator",
        "kind": "member",
        "memberof": "membership",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19332,
                19420
            ],
            "filename": "bot.js",
            "lineno": 719,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001855",
                "name": "batch",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "batch",
        "longname": "Bot#moderatorSet~batch",
        "kind": "member",
        "memberof": "Bot#moderatorSet",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Unassign Moderator in Room\n *\n * This function will not work when framework was created\n * using a bot token, it requires an authorized user token\n *\n * @function\n * @param {(String|Array)} email(s) - Email Address (or Array of Email Addresses) of Person(s) to unassign as moderator.\n * @returns {Promise.<Bot>}\n *\n * @example\n * bot.moderatorClear('john@test.com')\n *   .then(function(err) {\n *     console.log(err.message)\n *   });\n */",
        "meta": {
            "range": [
                20151,
                21585
            ],
            "filename": "bot.js",
            "lineno": 754,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001914",
                "name": "Bot.prototype.moderatorClear",
                "type": "FunctionExpression",
                "paramnames": [
                    "email"
                ]
            },
            "vars": {
                "clear": "Bot#moderatorClear~clear",
                "": null,
                "batch": "Bot#moderatorClear~batch"
            }
        },
        "description": "<p>Unassign Moderator in Room</p>\n<p>This function will not work when framework was created\nusing a bot token, it requires an authorized user token</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "description": "<p>Email Address (or Array of Email Addresses) of Person(s) to unassign as moderator.</p>",
                "name": "email(s)"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Bot>"
                    ]
                }
            }
        ],
        "examples": [
            "bot.moderatorClear('john@test.com')\n  .then(function(err) {\n    console.log(err.message)\n  });"
        ],
        "name": "moderatorClear",
        "longname": "Bot#moderatorClear",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20269,
                20600
            ],
            "filename": "bot.js",
            "lineno": 757,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001924",
                "name": "clear",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "clear",
        "longname": "Bot#moderatorClear~clear",
        "kind": "function",
        "memberof": "Bot#moderatorClear",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20393,
                20423
            ],
            "filename": "bot.js",
            "lineno": 761,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100001947",
                "name": "membership.isModerator",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isModerator",
        "longname": "membership.isModerator",
        "kind": "member",
        "memberof": "membership",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21208,
                21298
            ],
            "filename": "bot.js",
            "lineno": 791,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002048",
                "name": "batch",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "batch",
        "longname": "Bot#moderatorClear~batch",
        "kind": "member",
        "memberof": "Bot#moderatorClear",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Remove a room and all memberships.\n *\n * @function\n * @returns {Promise.<Boolean>}\n *\n * @example\n * framework.hears('/implode', function(bot, trigger) {\n *   bot.implode();\n * });\n */",
        "meta": {
            "range": [
                21780,
                22247
            ],
            "filename": "bot.js",
            "lineno": 821,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002107",
                "name": "Bot.prototype.implode",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Remove a room and all memberships.</p>",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "examples": [
            "framework.hears('/implode', function(bot, trigger) {\n  bot.implode();\n});"
        ],
        "name": "implode",
        "longname": "Bot#implode",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Send text with optional file to room.\n *\n * @function\n * @param {String} [format=text] - Set message format. Valid options are 'text' or 'markdown'.\n * @param {String|Object} message - Message to send to room. This can be a simple string, or a object for advanced use.\n * @returns {Promise.<Message>}\n *\n * @example\n * // Simple example\n * framework.hears('/hello', function(bot, trigger) {\n *   bot.say('hello');\n * });\n *\n * @example\n * // Simple example to send message and file\n * framework.hears('/file', function(bot, trigger) {\n *   bot.say({text: 'Here is your file!', file: 'http://myurl/file.doc'});\n * });\n *\n * @example\n * // Markdown Method 1 - Define markdown as default\n * framework.messageFormat = 'markdown';\n * framework.hears('/hello', function(bot, trigger) {\n *   bot.say('**hello**, How are you today?');\n * });\n *\n * @example\n * // Markdown Method 2 - Define message format as part of argument string\n * framework.hears('/hello', function(bot, trigger) {\n *   bot.say('markdown', '**hello**, How are you today?');\n * });\n *\n * @example\n * // Mardown Method 3 - Use an object (use this method of bot.say() when needing to send a file in the same message as markdown text.\n * framework.hears('/hello', function(bot, trigger) {\n *   bot.say({markdown: '*Hello <@personEmail:' + trigger.personEmail + '|' + trigger.personDisplayName + '>*'});\n * });\n * \n * @example\n * // Send an Webex card by providing a fully formed message object.\n * framework.hears('/card please', function(bot, trigger) {\n *   bot.say({       \n *      // Fallback text for clients that don't render cards is required\n *      markdown: \"If you see this message your client cannot render buttons and cards.\",\n *      attachments: [{\n *        \"contentType\": \"application/vnd.microsoft.card.adaptive\",\n *        \"content\": myCardsJson\n *     }]\n*    });\n */",
        "meta": {
            "range": [
                24104,
                26179
            ],
            "filename": "bot.js",
            "lineno": 889,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002180",
                "name": "Bot.prototype.say",
                "type": "FunctionExpression",
                "paramnames": [
                    "format",
                    "message"
                ]
            },
            "vars": {
                "msg": "Bot#say~msg",
                "format": "Bot#say~format",
                "args": "Bot#say~args",
                "formatDefined": "Bot#say~formatDefined",
                "message": "Bot#say~message",
                "message.roomId": "Bot#say~message.roomId",
                "messageObj": "Bot#say~messageObj",
                "messageObj[undefined]": "Bot#say~messageObj.undefined]",
                "messageObj.roomId": "Bot#say~messageObj.roomId"
            }
        },
        "description": "<p>Send text with optional file to room.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "defaultvalue": "text",
                "description": "<p>Set message format. Valid options are 'text' or 'markdown'.</p>",
                "name": "format"
            },
            {
                "type": {
                    "names": [
                        "String",
                        "Object"
                    ]
                },
                "description": "<p>Message to send to room. This can be a simple string, or a object for advanced use.</p>",
                "name": "message"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "examples": [
            "// Simple example\nframework.hears('/hello', function(bot, trigger) {\n  bot.say('hello');\n});",
            "// Simple example to send message and file\nframework.hears('/file', function(bot, trigger) {\n  bot.say({text: 'Here is your file!', file: 'http://myurl/file.doc'});\n});",
            "// Markdown Method 1 - Define markdown as default\nframework.messageFormat = 'markdown';\nframework.hears('/hello', function(bot, trigger) {\n  bot.say('**hello**, How are you today?');\n});",
            "// Markdown Method 2 - Define message format as part of argument string\nframework.hears('/hello', function(bot, trigger) {\n  bot.say('markdown', '**hello**, How are you today?');\n});",
            "// Mardown Method 3 - Use an object (use this method of bot.say() when needing to send a file in the same message as markdown text.\nframework.hears('/hello', function(bot, trigger) {\n  bot.say({markdown: '*Hello <@personEmail:' + trigger.personEmail + '|' + trigger.personDisplayName + '>*'});\n});",
            "// Send an Webex card by providing a fully formed message object.\nframework.hears('/card please', function(bot, trigger) {\n  bot.say({       \n     // Fallback text for clients that don't render cards is required\n     markdown: \"If you see this message your client cannot render buttons and cards.\",\n     attachments: [{\n       \"contentType\": \"application/vnd.microsoft.card.adaptive\",\n       \"content\": myCardsJson\n    }]\n   });"
        ],
        "name": "say",
        "longname": "Bot#say",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24183,
                24235
            ],
            "filename": "bot.js",
            "lineno": 891,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002197",
                "name": "msg",
                "type": "Literal",
                "value": "bot.say() failed, bot is not in active state"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#say~msg",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24312,
                24390
            ],
            "filename": "bot.js",
            "lineno": 893,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002212",
                "name": "msg",
                "type": "Literal",
                "funcscope": "Bot#say",
                "value": " due to membership rules.  Use bot.webex.message.create() to override",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#say~msg",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24474,
                24511
            ],
            "filename": "bot.js",
            "lineno": 899,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002224",
                "name": "format",
                "type": "MemberExpression",
                "funcscope": "Bot#say",
                "value": "this.framework.messageFormat",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "format",
        "longname": "Bot#say~format",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24638,
                24682
            ],
            "filename": "bot.js",
            "lineno": 903,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002232",
                "name": "args",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "Bot#say~args",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24925,
                25084
            ],
            "filename": "bot.js",
            "lineno": 911,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002262",
                "name": "formatDefined",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "formatDefined",
        "longname": "Bot#say~formatDefined",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25176,
                25208
            ],
            "filename": "bot.js",
            "lineno": 915,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002303",
                "name": "format",
                "type": "CallExpression",
                "funcscope": "Bot#say",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "format",
        "longname": "Bot#say~format",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25292,
                25309
            ],
            "filename": "bot.js",
            "lineno": 920,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002322",
                "name": "message",
                "type": "MemberExpression",
                "value": "args[0]"
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Bot#say~message",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25315,
                25344
            ],
            "filename": "bot.js",
            "lineno": 921,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002328",
                "name": "message.roomId",
                "type": "MemberExpression",
                "funcscope": "Bot#say",
                "value": "this.room.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "Bot#say~message.roomId",
        "kind": "member",
        "memberof": "Bot#say~message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25535,
                25574
            ],
            "filename": "bot.js",
            "lineno": 928,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002358",
                "name": "message",
                "type": "CallExpression",
                "funcscope": "Bot#say",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Bot#say~message",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25655,
                25722
            ],
            "filename": "bot.js",
            "lineno": 931,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002369",
                "name": "message",
                "type": "ConditionalExpression",
                "funcscope": "Bot#say",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Bot#say~message",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25795,
                25854
            ],
            "filename": "bot.js",
            "lineno": 934,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002380",
                "name": "message",
                "type": "ConditionalExpression",
                "funcscope": "Bot#say",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Bot#say~message",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25897,
                25912
            ],
            "filename": "bot.js",
            "lineno": 937,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002391",
                "name": "messageObj",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "messageObj",
        "longname": "Bot#say~messageObj",
        "kind": "member",
        "memberof": "Bot#say",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25918,
                25946
            ],
            "filename": "bot.js",
            "lineno": 938,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002395",
                "name": "messageObj[undefined]",
                "type": "Identifier",
                "funcscope": "Bot#say",
                "value": "message",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Bot#say~messageObj.undefined]",
        "kind": "member",
        "memberof": "Bot#say~messageObj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26000,
                26032
            ],
            "filename": "bot.js",
            "lineno": 941,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002401",
                "name": "messageObj.roomId",
                "type": "MemberExpression",
                "funcscope": "Bot#say",
                "value": "this.room.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "Bot#say~messageObj.roomId",
        "kind": "member",
        "memberof": "Bot#say~messageObj",
        "scope": "static"
    },
    {
        "comment": "/**\n * Send optional text message with a local file to room.\n *\n * @function\n * @param {String|Object} message - Message to send to room. If null or empty string is ignored.  If set the default messageFormat is used\n * @param {String} filename - name of local file to send to space\n * @returns {Promise.<Message>}\n *\n * @example\n * // Simple example\n * framework.hears('/file', function(bot, trigger) {\n *   bot.sayWithLocalFile('here is a file', './image.jpg);\n * });\n *\n */",
        "meta": {
            "range": [
                26658,
                28247
            ],
            "filename": "bot.js",
            "lineno": 965,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002432",
                "name": "Bot.prototype.sayWithLocalFile",
                "type": "FunctionExpression",
                "paramnames": [
                    "message",
                    "filename"
                ]
            },
            "vars": {
                "msg": "Bot#sayWithLocalFile~msg",
                "": null
            }
        },
        "description": "<p>Send optional text message with a local file to room.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Object"
                    ]
                },
                "description": "<p>Message to send to room. If null or empty string is ignored.  If set the default messageFormat is used</p>",
                "name": "message"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>name of local file to send to space</p>",
                "name": "filename"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "examples": [
            "// Simple example\nframework.hears('/file', function(bot, trigger) {\n  bot.sayWithLocalFile('here is a file', './image.jpg);\n});"
        ],
        "name": "sayWithLocalFile",
        "longname": "Bot#sayWithLocalFile",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26752,
                26817
            ],
            "filename": "bot.js",
            "lineno": 967,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002449",
                "name": "msg",
                "type": "Literal",
                "value": "bot.sayWithLocalFile() failed, bot is not in active state"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#sayWithLocalFile~msg",
        "kind": "member",
        "memberof": "Bot#sayWithLocalFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26894,
                26972
            ],
            "filename": "bot.js",
            "lineno": 969,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002464",
                "name": "msg",
                "type": "Literal",
                "funcscope": "Bot#sayWithLocalFile",
                "value": " due to membership rules.  Use bot.webex.message.create() to override",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#sayWithLocalFile~msg",
        "kind": "member",
        "memberof": "Bot#sayWithLocalFile",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27126,
                27163
            ],
            "filename": "bot.js",
            "lineno": 977,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002487",
                "name": "format",
                "type": "MemberExpression",
                "value": "this.framework.messageFormat"
            }
        },
        "undocumented": true,
        "name": "format",
        "longname": "<anonymous>~format",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27209,
                27224
            ],
            "filename": "bot.js",
            "lineno": 979,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002495",
                "name": "messageObj",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "messageObj",
        "longname": "<anonymous>~messageObj",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27570,
                27637
            ],
            "filename": "bot.js",
            "lineno": 987,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002523",
                "name": "message",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "<anonymous>~message",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27647,
                27706
            ],
            "filename": "bot.js",
            "lineno": 988,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002534",
                "name": "message",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "<anonymous>~message",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27716,
                27744
            ],
            "filename": "bot.js",
            "lineno": 989,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002545",
                "name": "messageObj[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "message",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~messageObj.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~messageObj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28000,
                28038
            ],
            "filename": "bot.js",
            "lineno": 997,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002566",
                "name": "stream",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stream",
        "longname": "<anonymous>~stream",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28048,
                28075
            ],
            "filename": "bot.js",
            "lineno": 998,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002574",
                "name": "messageObj.files",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[\"stream\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "files",
        "longname": "<anonymous>~messageObj.files",
        "kind": "member",
        "memberof": "<anonymous>~messageObj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28141,
                28173
            ],
            "filename": "bot.js",
            "lineno": 1002,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002581",
                "name": "messageObj.roomId",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "this.room.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "<anonymous>~messageObj.roomId",
        "kind": "member",
        "memberof": "<anonymous>~messageObj",
        "scope": "static"
    },
    {
        "comment": "/**\n * Send a threaded message reply\n * \n * @function\n * @param {String|Object} replyTo - MessageId or message object or attachmentAction object to send to reply to.\n * @param {String|Object} message - Message to send to room. This can be a simple string, or a message object for advanced use.\n * @param {String} [format=text] - Set message format. Valid options are 'text' or 'markdown'. Ignored if message is an object\n * @returns {Promise.<Message>}\n *\n * @example\n * // Simple example\n * framework.hears('/hello', function(bot, trigger) {\n *   bot.reply(trigger.message, 'hello back at you');\n * });\n *\n * @example\n * // Markdown Method 1 - Define markdown as default\n * framework.messageFormat = 'markdown';\n * framework.hears('/hello', function(bot, trigger) {\n *   bot.reply(trigger.message, '**hello**, How are you today?');\n * });\n *\n * @example\n * // Markdown Method 2 - Define message format as part of argument string\n * framework.hears('/hello', function(bot, trigger) {\n *   bot.reply(trigger.message, '**hello**, How are you today?', 'markdown');\n * });\n *\n * @example\n * // Mardown Method 3 - Use an object (use this method of bot.reply() when needing to send a file in the same message as markdown text.\n * framework.hears('/hello', function(bot, trigger) {\n *   bot.reply(trigger.message, {markdown: '*Hello <@personEmail:' + trigger.personEmail + '|' + trigger.personDisplayName + '>*'});\n * });\n * \n * @example\n * // Reply to a card when a user hits an action.submit button\n * framework.on('attachmentAction', function(bot, trigger) {\n *   bot.reply(trigger.attachmentAction, 'Thanks for hitting the button');\n * });\n * \n */",
        "meta": {
            "range": [
                29895,
                32088
            ],
            "filename": "bot.js",
            "lineno": 1048,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002603",
                "name": "Bot.prototype.reply",
                "type": "FunctionExpression",
                "paramnames": [
                    "replyTo",
                    "message",
                    "format"
                ]
            },
            "vars": {
                "parentId": "Bot#reply~parentId",
                "message.roomId": "message.roomId",
                "format": "Bot#reply~format",
                "messageObj": "Bot#reply~messageObj",
                "messageObj[undefined]": "Bot#reply~messageObj.undefined]",
                "messageObj.roomId": "Bot#reply~messageObj.roomId",
                "messageObj.parentId": "Bot#reply~messageObj.parentId"
            }
        },
        "description": "<p>Send a threaded message reply</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Object"
                    ]
                },
                "description": "<p>MessageId or message object or attachmentAction object to send to reply to.</p>",
                "name": "replyTo"
            },
            {
                "type": {
                    "names": [
                        "String",
                        "Object"
                    ]
                },
                "description": "<p>Message to send to room. This can be a simple string, or a message object for advanced use.</p>",
                "name": "message"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "defaultvalue": "text",
                "description": "<p>Set message format. Valid options are 'text' or 'markdown'. Ignored if message is an object</p>",
                "name": "format"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "examples": [
            "// Simple example\nframework.hears('/hello', function(bot, trigger) {\n  bot.reply(trigger.message, 'hello back at you');\n});",
            "// Markdown Method 1 - Define markdown as default\nframework.messageFormat = 'markdown';\nframework.hears('/hello', function(bot, trigger) {\n  bot.reply(trigger.message, '**hello**, How are you today?');\n});",
            "// Markdown Method 2 - Define message format as part of argument string\nframework.hears('/hello', function(bot, trigger) {\n  bot.reply(trigger.message, '**hello**, How are you today?', 'markdown');\n});",
            "// Mardown Method 3 - Use an object (use this method of bot.reply() when needing to send a file in the same message as markdown text.\nframework.hears('/hello', function(bot, trigger) {\n  bot.reply(trigger.message, {markdown: '*Hello <@personEmail:' + trigger.personEmail + '|' + trigger.personDisplayName + '>*'});\n});",
            "// Reply to a card when a user hits an action.submit button\nframework.on('attachmentAction', function(bot, trigger) {\n  bot.reply(trigger.attachmentAction, 'Thanks for hitting the button');\n});"
        ],
        "name": "reply",
        "longname": "Bot#reply",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29962,
                29970
            ],
            "filename": "bot.js",
            "lineno": 1050,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002615",
                "name": "parentId"
            }
        },
        "undocumented": true,
        "name": "parentId",
        "longname": "Bot#reply~parentId",
        "kind": "member",
        "memberof": "Bot#reply",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30013,
                30031
            ],
            "filename": "bot.js",
            "lineno": 1052,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002624",
                "name": "parentId",
                "type": "Identifier",
                "funcscope": "Bot#reply",
                "value": "replyTo",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parentId",
        "longname": "Bot#reply~parentId",
        "kind": "member",
        "memberof": "Bot#reply",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30468,
                30536
            ],
            "filename": "bot.js",
            "lineno": 1060,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002654",
                "name": "parentId",
                "type": "ConditionalExpression",
                "funcscope": "Bot#reply",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parentId",
        "longname": "Bot#reply~parentId",
        "kind": "member",
        "memberof": "Bot#reply",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30742,
                30803
            ],
            "filename": "bot.js",
            "lineno": 1065,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002668",
                "name": "parentId",
                "type": "ConditionalExpression",
                "funcscope": "Bot#reply",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parentId",
        "longname": "Bot#reply~parentId",
        "kind": "member",
        "memberof": "Bot#reply",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31225,
                31254
            ],
            "filename": "bot.js",
            "lineno": 1077,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002709",
                "name": "message.roomId",
                "type": "MemberExpression",
                "value": "this.room.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "message.roomId",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31513,
                31550
            ],
            "filename": "bot.js",
            "lineno": 1085,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002739",
                "name": "format",
                "type": "MemberExpression",
                "value": "this.framework.messageFormat"
            }
        },
        "undocumented": true,
        "name": "format",
        "longname": "Bot#reply~format",
        "kind": "member",
        "memberof": "Bot#reply",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31781,
                31796
            ],
            "filename": "bot.js",
            "lineno": 1091,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002764",
                "name": "messageObj",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "messageObj",
        "longname": "Bot#reply~messageObj",
        "kind": "member",
        "memberof": "Bot#reply",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31839,
                31867
            ],
            "filename": "bot.js",
            "lineno": 1093,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002774",
                "name": "messageObj[undefined]",
                "type": "Identifier",
                "funcscope": "Bot#reply",
                "value": "message",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Bot#reply~messageObj.undefined]",
        "kind": "member",
        "memberof": "Bot#reply~messageObj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31873,
                31905
            ],
            "filename": "bot.js",
            "lineno": 1094,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002780",
                "name": "messageObj.roomId",
                "type": "MemberExpression",
                "funcscope": "Bot#reply",
                "value": "this.room.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "Bot#reply~messageObj.roomId",
        "kind": "member",
        "memberof": "Bot#reply~messageObj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31922,
                31942
            ],
            "filename": "bot.js",
            "lineno": 1096,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002791",
                "name": "messageObj",
                "type": "Identifier",
                "funcscope": "Bot#reply",
                "value": "message",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "messageObj",
        "longname": "Bot#reply~messageObj",
        "kind": "member",
        "memberof": "Bot#reply",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31950,
                31980
            ],
            "filename": "bot.js",
            "lineno": 1098,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002795",
                "name": "messageObj.parentId",
                "type": "Identifier",
                "funcscope": "Bot#reply",
                "value": "parentId",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parentId",
        "longname": "Bot#reply~messageObj.parentId",
        "kind": "member",
        "memberof": "Bot#reply~messageObj",
        "scope": "static"
    },
    {
        "comment": "/**\n * Send text with optional file in a direct message. \n * This sends a message to a 1:1 room with the user (creates 1:1, if one does not already exist)\n *\n * @function\n * @param {String} person - Email or personId of person to send Direct Message.\n * @param {String} [format=text] - Set message format. Valid options are 'text' or 'markdown'.\n * @param {String|Object} message - Message to send to room. This can be a simple string, or a object for advanced use.\n * @returns {Promise.<Message>}\n *\n * @example\n * // Simple example\n * framework.hears('dm me', function(bot, trigger) {\n *   bot.dm(trigger.person.id, 'hello');\n * });\n *\n * @example\n * // Simple example to send message and file\n * framework.hears('dm me a file', function(bot, trigger) {\n *   bot.dm(trigger.person.id, {text: 'Here is your file!', file: 'http://myurl/file.doc'});\n * });\n *\n * @example\n * // Markdown Method 1 - Define markdown as default\n * framework.messageFormat = 'markdown';\n * framework.hears('dm me some rich text', function(bot, trigger) {\n *   bot.dm(trigger.person.id, '**hello**, How are you today?');\n * });\n *\n * @example\n * // Markdown Method 2 - Define message format as part of argument string\n * framework.hears('dm someone', function(bot, trigger) {\n *   bot.dm('john@doe.com', 'markdown', '**hello**, How are you today?');\n * });\n *\n * @example\n * // Mardown Method 3 - Use an object (use this method of bot.dm() when needing to send a file in the same message as markdown text.\n * framework.hears('dm someone', function(bot, trigger) {\n *   bot.dm('someone@domain.com', {markdown: '*Hello <@personId:' + trigger.person.id + '|' + trigger.person.displayName + '>*'});\n * });\n */",
        "meta": {
            "range": [
                33774,
                35591
            ],
            "filename": "bot.js",
            "lineno": 1145,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002813",
                "name": "Bot.prototype.dm",
                "type": "FunctionExpression",
                "paramnames": [
                    "person",
                    "format",
                    "message"
                ]
            },
            "vars": {
                "msg": "Bot#dm~msg",
                "args": "Bot#dm~args",
                "message": "Bot#dm~message",
                "person": "Bot#dm~person",
                "format": "Bot#dm~format",
                "toType": "Bot#dm~toType",
                "message[undefined]": "Bot#dm~message.undefined]",
                "msgObj": "Bot#dm~msgObj",
                "msgObj[undefined]": "Bot#dm~msgObj.undefined]"
            }
        },
        "description": "<p>Send text with optional file in a direct message.\nThis sends a message to a 1:1 room with the user (creates 1:1, if one does not already exist)</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Email or personId of person to send Direct Message.</p>",
                "name": "person"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "defaultvalue": "text",
                "description": "<p>Set message format. Valid options are 'text' or 'markdown'.</p>",
                "name": "format"
            },
            {
                "type": {
                    "names": [
                        "String",
                        "Object"
                    ]
                },
                "description": "<p>Message to send to room. This can be a simple string, or a object for advanced use.</p>",
                "name": "message"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "examples": [
            "// Simple example\nframework.hears('dm me', function(bot, trigger) {\n  bot.dm(trigger.person.id, 'hello');\n});",
            "// Simple example to send message and file\nframework.hears('dm me a file', function(bot, trigger) {\n  bot.dm(trigger.person.id, {text: 'Here is your file!', file: 'http://myurl/file.doc'});\n});",
            "// Markdown Method 1 - Define markdown as default\nframework.messageFormat = 'markdown';\nframework.hears('dm me some rich text', function(bot, trigger) {\n  bot.dm(trigger.person.id, '**hello**, How are you today?');\n});",
            "// Markdown Method 2 - Define message format as part of argument string\nframework.hears('dm someone', function(bot, trigger) {\n  bot.dm('john@doe.com', 'markdown', '**hello**, How are you today?');\n});",
            "// Mardown Method 3 - Use an object (use this method of bot.dm() when needing to send a file in the same message as markdown text.\nframework.hears('dm someone', function(bot, trigger) {\n  bot.dm('someone@domain.com', {markdown: '*Hello <@personId:' + trigger.person.id + '|' + trigger.person.displayName + '>*'});\n});"
        ],
        "name": "dm",
        "longname": "Bot#dm",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34015,
                34137
            ],
            "filename": "bot.js",
            "lineno": 1149,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002843",
                "name": "msg",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#dm~msg",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34314,
                34358
            ],
            "filename": "bot.js",
            "lineno": 1156,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002857",
                "name": "args",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "Bot#dm~args",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34437,
                34483
            ],
            "filename": "bot.js",
            "lineno": 1161,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002887",
                "name": "message",
                "type": "ConditionalExpression",
                "funcscope": "Bot#dm",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Bot#dm~message",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34487,
                34534
            ],
            "filename": "bot.js",
            "lineno": 1162,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002901",
                "name": "person",
                "type": "ConditionalExpression",
                "funcscope": "Bot#dm",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "person",
        "longname": "Bot#dm~person",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34538,
                34670
            ],
            "filename": "bot.js",
            "lineno": 1163,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002915",
                "name": "format",
                "type": "ConditionalExpression",
                "funcscope": "Bot#dm",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "format",
        "longname": "Bot#dm~format",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34764,
                34770
            ],
            "filename": "bot.js",
            "lineno": 1167,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002958",
                "name": "toType"
            }
        },
        "undocumented": true,
        "name": "toType",
        "longname": "Bot#dm~toType",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34815,
                34839
            ],
            "filename": "bot.js",
            "lineno": 1169,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002968",
                "name": "toType",
                "type": "Literal",
                "funcscope": "Bot#dm",
                "value": "toPersonEmail",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toType",
        "longname": "Bot#dm~toType",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34860,
                34881
            ],
            "filename": "bot.js",
            "lineno": 1171,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002973",
                "name": "toType",
                "type": "Literal",
                "funcscope": "Bot#dm",
                "value": "toPersonId",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toType",
        "longname": "Bot#dm~toType",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34935,
                34959
            ],
            "filename": "bot.js",
            "lineno": 1175,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100002983",
                "name": "message[undefined]",
                "type": "Identifier",
                "funcscope": "Bot#dm",
                "value": "person",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Bot#dm~message.undefined]",
        "kind": "member",
        "memberof": "Bot#dm~message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35077,
                35088
            ],
            "filename": "bot.js",
            "lineno": 1180,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003007",
                "name": "msgObj",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "msgObj",
        "longname": "Bot#dm~msgObj",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35173,
                35240
            ],
            "filename": "bot.js",
            "lineno": 1183,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003011",
                "name": "message",
                "type": "ConditionalExpression",
                "funcscope": "Bot#dm",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Bot#dm~message",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35317,
                35376
            ],
            "filename": "bot.js",
            "lineno": 1186,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003022",
                "name": "message",
                "type": "ConditionalExpression",
                "funcscope": "Bot#dm",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Bot#dm~message",
        "kind": "member",
        "memberof": "Bot#dm",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35385,
                35409
            ],
            "filename": "bot.js",
            "lineno": 1188,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003033",
                "name": "msgObj[undefined]",
                "type": "Identifier",
                "funcscope": "Bot#dm",
                "value": "message",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Bot#dm~msgObj.undefined]",
        "kind": "member",
        "memberof": "Bot#dm~msgObj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35417,
                35440
            ],
            "filename": "bot.js",
            "lineno": 1189,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003039",
                "name": "msgObj[undefined]",
                "type": "Identifier",
                "funcscope": "Bot#dm",
                "value": "person",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Bot#dm~msgObj.undefined]",
        "kind": "member",
        "memberof": "Bot#dm~msgObj",
        "scope": "static"
    },
    {
        "comment": "/**\n * Send a Webex Teams Card to room.\n *\n * @function\n * @param {Object} cardJson - The card JSON to render.  This can come from the Webex Buttons and Cards Designer.\n * @param {String} fallbackText - Message to be displayed on client's that can't render cards.\n * @returns {Promise.<Message>}\n * \n * @see {@link https://developer.webex.com/docs/api/guides/cards#working-with-cards|Buttons and Cards Guide} for further information.\n * @see {@link ./docs/buttons-and-cards-example.md|Buttons and Cards Framework Example}\n *\n * @example\n * // Simple example\n * framework.hears('card please', function(bot, trigger) {\n *   bot.SendCard(\n *    {\n *       \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n *       \"type\": \"AdaptiveCard\",\n *       \"version\": \"1.0\",\n *       \"body\": [\n *           {\n *               \"type\": \"ColumnSet\",\n *               \"columns\": [\n *                   {\n *                       \"type\": \"Column\",\n *                       \"width\": 2,\n *                       \"items\": [\n *                           {\n *                               \"type\": \"TextBlock\",\n *                               \"text\": \"Card Sample\",\n *                               \"weight\": \"Bolder\",\n *                               \"size\": \"Medium\"\n *                           },\n *                           {\n *                               \"type\": \"TextBlock\",\n *                               \"text\": \"What is your name?\",\n *                               \"wrap\": true\n *                           },\n *                           {\n *                               \"type\": \"Input.Text\",\n *                               \"id\": \"myName\",\n *                               \"placeholder\": \"John Doe\"\n *                           }\n *                       ]\n *                   }\n *               ]\n *           }\n *       ],\n *       \"actions\": [\n *           {\n *               \"type\": \"Action.Submit\",\n *               \"title\": \"Submit\"\n *           }\n *       ]\n *    },\n *    \"This is the fallback text if the client can't render this card\");\n *  });\n *\n */",
        "meta": {
            "range": [
                37673,
                38265
            ],
            "filename": "bot.js",
            "lineno": 1258,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003066",
                "name": "Bot.prototype.sendCard",
                "type": "FunctionExpression",
                "paramnames": [
                    "cardJson",
                    "fallbackText"
                ]
            },
            "vars": {
                "msg": "Bot#sendCard~msg",
                "messageObj": "Bot#sendCard~messageObj",
                "messageObj.roomId": "Bot#sendCard~messageObj.roomId"
            }
        },
        "description": "<p>Send a Webex Teams Card to room.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The card JSON to render.  This can come from the Webex Buttons and Cards Designer.</p>",
                "name": "cardJson"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Message to be displayed on client's that can't render cards.</p>",
                "name": "fallbackText"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "see": [
            "{@link https://developer.webex.com/docs/api/guides/cards#working-with-cards|Buttons and Cards Guide} for further information.",
            "{@link ./docs/buttons-and-cards-example.md|Buttons and Cards Framework Example}"
        ],
        "examples": [
            "// Simple example\nframework.hears('card please', function(bot, trigger) {\n  bot.SendCard(\n   {\n      \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n      \"type\": \"AdaptiveCard\",\n      \"version\": \"1.0\",\n      \"body\": [\n          {\n              \"type\": \"ColumnSet\",\n              \"columns\": [\n                  {\n                      \"type\": \"Column\",\n                      \"width\": 2,\n                      \"items\": [\n                          {\n                              \"type\": \"TextBlock\",\n                              \"text\": \"Card Sample\",\n                              \"weight\": \"Bolder\",\n                              \"size\": \"Medium\"\n                          },\n                          {\n                              \"type\": \"TextBlock\",\n                              \"text\": \"What is your name?\",\n                              \"wrap\": true\n                          },\n                          {\n                              \"type\": \"Input.Text\",\n                              \"id\": \"myName\",\n                              \"placeholder\": \"John Doe\"\n                          }\n                      ]\n                  }\n              ]\n          }\n      ],\n      \"actions\": [\n          {\n              \"type\": \"Action.Submit\",\n              \"title\": \"Submit\"\n          }\n      ]\n   },\n   \"This is the fallback text if the client can't render this card\");\n });"
        ],
        "name": "sendCard",
        "longname": "Bot#sendCard",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37764,
                37821
            ],
            "filename": "bot.js",
            "lineno": 1260,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003083",
                "name": "msg",
                "type": "Literal",
                "value": "bot.sendCard() failed, bot is not in active state"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#sendCard~msg",
        "kind": "member",
        "memberof": "Bot#sendCard",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37898,
                37976
            ],
            "filename": "bot.js",
            "lineno": 1262,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003098",
                "name": "msg",
                "type": "Literal",
                "funcscope": "Bot#sendCard",
                "value": " due to membership rules.  Use bot.webex.message.create() to override",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#sendCard~msg",
        "kind": "member",
        "memberof": "Bot#sendCard",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38035,
                38122
            ],
            "filename": "bot.js",
            "lineno": 1267,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003110",
                "name": "messageObj",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "messageObj",
        "longname": "Bot#sendCard~messageObj",
        "kind": "member",
        "memberof": "Bot#sendCard",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38171,
                38203
            ],
            "filename": "bot.js",
            "lineno": 1270,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003122",
                "name": "messageObj.roomId",
                "type": "MemberExpression",
                "funcscope": "Bot#sendCard",
                "value": "this.room.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "Bot#sendCard~messageObj.roomId",
        "kind": "member",
        "memberof": "Bot#sendCard~messageObj",
        "scope": "static"
    },
    {
        "comment": "/**\n * Send a Card to a 1-1 space.\n *\n * @function\n * @param {String} person - Email or ID of the user to 1-1 message.\n * @param {Object} cardJson - The card JSON to render.  This can come from the Webex Buttons and Cards Designer.\n * @param {String} fallbackText - Message to be displayed on client's that can't render cards.\n * @returns {Promise.<Message>}\n * \n * @example\n * // Simple example\n * framework.hears('card for joe please', function(bot, trigger) {\n *   bot.dmCard(\n *    'joe@email.com',\n *    {\n *       \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n *       \"type\": \"AdaptiveCard\",\n *       \"version\": \"1.0\",\n *       \"body\": [\n *           {\n *             \"type\": \"TextBlock\",\n *             \"text\": \"Joe, here is your card!\",\n *             \"weight\": \"Bolder\",\n *             \"size\": \"Medium\"\n *           }\n *       ]\n *    },\n *    \"This is the fallback text if the client can't render this card\");\n *  });\n *\n */",
        "meta": {
            "range": [
                39223,
                39717
            ],
            "filename": "bot.js",
            "lineno": 1305,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003144",
                "name": "Bot.prototype.dmCard",
                "type": "FunctionExpression",
                "paramnames": [
                    "person",
                    "cardJson",
                    "fallbackText"
                ]
            },
            "vars": {
                "msg": "Bot#dmCard~msg",
                "messageObj": "Bot#dmCard~messageObj"
            }
        },
        "description": "<p>Send a Card to a 1-1 space.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Email or ID of the user to 1-1 message.</p>",
                "name": "person"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The card JSON to render.  This can come from the Webex Buttons and Cards Designer.</p>",
                "name": "cardJson"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Message to be displayed on client's that can't render cards.</p>",
                "name": "fallbackText"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "examples": [
            "// Simple example\nframework.hears('card for joe please', function(bot, trigger) {\n  bot.dmCard(\n   'joe@email.com',\n   {\n      \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n      \"type\": \"AdaptiveCard\",\n      \"version\": \"1.0\",\n      \"body\": [\n          {\n            \"type\": \"TextBlock\",\n            \"text\": \"Joe, here is your card!\",\n            \"weight\": \"Bolder\",\n            \"size\": \"Medium\"\n          }\n      ]\n   },\n   \"This is the fallback text if the client can't render this card\");\n });"
        ],
        "name": "dmCard",
        "longname": "Bot#dmCard",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39320,
                39375
            ],
            "filename": "bot.js",
            "lineno": 1307,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003162",
                "name": "msg",
                "type": "Literal",
                "value": "bot.dmCard() failed, bot is not in active state"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#dmCard~msg",
        "kind": "member",
        "memberof": "Bot#dmCard",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39452,
                39530
            ],
            "filename": "bot.js",
            "lineno": 1309,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003177",
                "name": "msg",
                "type": "Literal",
                "funcscope": "Bot#dmCard",
                "value": " due to membership rules.  Use bot.webex.message.create() to override",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#dmCard~msg",
        "kind": "member",
        "memberof": "Bot#dmCard",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39589,
                39676
            ],
            "filename": "bot.js",
            "lineno": 1314,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003189",
                "name": "messageObj",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "messageObj",
        "longname": "Bot#dmCard~messageObj",
        "kind": "member",
        "memberof": "Bot#dmCard",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Upload a file to a room using a Readable Stream\n *\n * @function\n * @param {String} filename - File name used when uploading to room\n * @param {Stream.Readable} stream - Stream Readable\n * @returns {Promise.<Message>}\n *\n * @example\n * framework.hears('/file', function(bot, trigger) {\n *\n *   // define filename used when uploading to room\n *   var filename = 'test.png';\n *\n *   // create readable stream\n *   var stream = fs.createReadStream('/my/file/test.png');\n *\n *   bot.uploadStream(stream);\n * });\n */",
        "meta": {
            "range": [
                40238,
                40678
            ],
            "filename": "bot.js",
            "lineno": 1339,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003208",
                "name": "Bot.prototype.uploadStream",
                "type": "FunctionExpression",
                "paramnames": [
                    "stream"
                ]
            },
            "vars": {
                "msg": "Bot#uploadStream~msg"
            }
        },
        "description": "<p>Upload a file to a room using a Readable Stream</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>File name used when uploading to room</p>",
                "name": "filename"
            },
            {
                "type": {
                    "names": [
                        "Stream.Readable"
                    ]
                },
                "description": "<p>Stream Readable</p>",
                "name": "stream"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "examples": [
            "framework.hears('/file', function(bot, trigger) {\n\n  // define filename used when uploading to room\n  var filename = 'test.png';\n\n  // create readable stream\n  var stream = fs.createReadStream('/my/file/test.png');\n\n  bot.uploadStream(stream);\n});"
        ],
        "name": "uploadStream",
        "longname": "Bot#uploadStream",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                40317,
                40378
            ],
            "filename": "bot.js",
            "lineno": 1341,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003224",
                "name": "msg",
                "type": "Literal",
                "value": "bot.uploadStream() failed, bot is not in active state"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#uploadStream~msg",
        "kind": "member",
        "memberof": "Bot#uploadStream",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                40455,
                40533
            ],
            "filename": "bot.js",
            "lineno": 1343,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003239",
                "name": "msg",
                "type": "Literal",
                "funcscope": "Bot#uploadStream",
                "value": " due to membership rules.  Use bot.webex.message.create() to override",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Bot#uploadStream~msg",
        "kind": "member",
        "memberof": "Bot#uploadStream",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                40628,
                40648
            ],
            "filename": "bot.js",
            "lineno": 1349,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003260",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "this.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                40654,
                40669
            ],
            "filename": "bot.js",
            "lineno": 1350,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003266",
                "name": "files",
                "type": "ArrayExpression",
                "value": "[\"stream\"]"
            }
        },
        "undocumented": true,
        "name": "files",
        "longname": "files",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Remove Message By Id.\n *\n * @function\n * @param {String} messageId\n * @returns {Promise.<Message>}\n */",
        "meta": {
            "range": [
                40791,
                41247
            ],
            "filename": "bot.js",
            "lineno": 1361,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003270",
                "name": "Bot.prototype.censor",
                "type": "FunctionExpression",
                "paramnames": [
                    "messageId"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Remove Message By Id.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "messageId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "name": "censor",
        "longname": "Bot#censor",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Set Title of Room.\n *\n * @function\n * @param {String} title\n * @returns {Promise.<Room>}\n *\n * @example\n * bot.roomRename('My Renamed Room')\n *   .then(function(err) {\n *     console.log(err.message)\n *   });\n */",
        "meta": {
            "range": [
                41470,
                42172
            ],
            "filename": "bot.js",
            "lineno": 1388,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003345",
                "name": "Bot.prototype.roomRename",
                "type": "FunctionExpression",
                "paramnames": [
                    "title"
                ]
            },
            "vars": {
                "room": "Bot#roomRename~room",
                "room.title": "Bot#roomRename~room.title"
            }
        },
        "description": "<p>Set Title of Room.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "title"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Room>"
                    ]
                }
            }
        ],
        "examples": [
            "bot.roomRename('My Renamed Room')\n  .then(function(err) {\n    console.log(err.message)\n  });"
        ],
        "name": "roomRename",
        "longname": "Bot#roomRename",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                41997,
                42041
            ],
            "filename": "bot.js",
            "lineno": 1400,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003397",
                "name": "room",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "room",
        "longname": "Bot#roomRename~room",
        "kind": "member",
        "memberof": "Bot#roomRename",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42049,
                42067
            ],
            "filename": "bot.js",
            "lineno": 1401,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003411",
                "name": "room.title",
                "type": "Identifier",
                "funcscope": "Bot#roomRename",
                "value": "title",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "title",
        "longname": "Bot#roomRename~room.title",
        "kind": "member",
        "memberof": "Bot#roomRename~room",
        "scope": "static"
    },
    {
        "comment": "/**\n * Store key/value data.\n *\n * @function\n * @param {String} key - Key under id object\n * @param {(String|Number|Boolean|Array|Object)} value - Value of key\n * @returns {(Promise.<String>|Promise.<Number>|Promise.<Boolean>|Promise.<Array>|Promise.<Object>)}\n */",
        "meta": {
            "range": [
                42440,
                42466
            ],
            "filename": "bot.js",
            "lineno": 1417,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003434",
                "name": "Bot.prototype.store",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "<p>Store key/value data.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Key under id object</p>",
                "name": "key"
            },
            {
                "type": {
                    "names": [
                        "String",
                        "Number",
                        "Boolean",
                        "Array",
                        "Object"
                    ]
                },
                "description": "<p>Value of key</p>",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<String>",
                        "Promise.<Number>",
                        "Promise.<Boolean>",
                        "Promise.<Array>",
                        "Promise.<Object>"
                    ]
                }
            }
        ],
        "name": "store",
        "longname": "Bot#store",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Recall value of data stored by 'key'.\n *\n * @function\n * @param {String} [key] - Key under id object (optional). If key is not passed, all keys for id are returned as an object.\n * @returns {(Promise.<String>|Promise.<Number>|Promise.<Boolean>|Promise.<Array>|Promise.<Object>)}\n */",
        "meta": {
            "range": [
                42759,
                42786
            ],
            "filename": "bot.js",
            "lineno": 1426,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003442",
                "name": "Bot.prototype.recall",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "<p>Recall value of data stored by 'key'.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "description": "<p>Key under id object (optional). If key is not passed, all keys for id are returned as an object.</p>",
                "name": "key"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<String>",
                        "Promise.<Number>",
                        "Promise.<Boolean>",
                        "Promise.<Array>",
                        "Promise.<Object>"
                    ]
                }
            }
        ],
        "name": "recall",
        "longname": "Bot#recall",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Forget a key or entire store.\n *\n * @function\n * @param {String} [key] - Key under id object (optional). If key is not passed, id and all children are removed.\n * @returns {(Promise.<String>|Promise.<Number>|Promise.<Boolean>|Promise.<Array>|Promise.<Object>)}\n */",
        "meta": {
            "range": [
                43061,
                43088
            ],
            "filename": "bot.js",
            "lineno": 1435,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003450",
                "name": "Bot.prototype.forget",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "<p>Forget a key or entire store.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "description": "<p>Key under id object (optional). If key is not passed, id and all children are removed.</p>",
                "name": "key"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<String>",
                        "Promise.<Number>",
                        "Promise.<Boolean>",
                        "Promise.<Array>",
                        "Promise.<Object>"
                    ]
                }
            }
        ],
        "name": "forget",
        "longname": "Bot#forget",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                43091,
                43111
            ],
            "filename": "bot.js",
            "lineno": 1437,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003458",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Bot",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Build a Webex message request object from a card JSON design object and fallback text.\n *\n * @function\n * @private\n * @param {Object} cardJson - The card JSON to render.  This can come from the Webex Buttons and Cards Designer.\n * @param {string} fallbackFormat - The message format for the fallback text.\n * @param {String} fallbackText - Message to be displayed on client's that can't render cards.\n * @returns {Object}\n */",
        "meta": {
            "range": [
                43547,
                43968
            ],
            "filename": "bot.js",
            "lineno": 1449,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003463",
                "name": "buildCardMsgObj",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "cardJson",
                    "fallbackFormat",
                    "fallbackText"
                ]
            },
            "vars": {
                "fallbackText": "buildCardMsgObj~fallbackText",
                "messageObj": "buildCardMsgObj~messageObj",
                "messageObj[undefined]": "buildCardMsgObj~messageObj.undefined]",
                "messageObj.attachments": "buildCardMsgObj~messageObj.attachments"
            }
        },
        "description": "<p>Build a Webex message request object from a card JSON design object and fallback text.</p>",
        "kind": "function",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The card JSON to render.  This can come from the Webex Buttons and Cards Designer.</p>",
                "name": "cardJson"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>The message format for the fallback text.</p>",
                "name": "fallbackFormat"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Message to be displayed on client's that can't render cards.</p>",
                "name": "fallbackText"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "name": "buildCardMsgObj",
        "longname": "buildCardMsgObj",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                43641,
                43705
            ],
            "filename": "bot.js",
            "lineno": 1451,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003474",
                "name": "fallbackText",
                "type": "Literal",
                "funcscope": "buildCardMsgObj",
                "value": "A card was sent with no fallback text specified",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fallbackText",
        "longname": "buildCardMsgObj~fallbackText",
        "kind": "member",
        "memberof": "buildCardMsgObj",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                43765,
                43780
            ],
            "filename": "bot.js",
            "lineno": 1455,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003478",
                "name": "messageObj",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "messageObj",
        "longname": "buildCardMsgObj~messageObj",
        "kind": "member",
        "memberof": "buildCardMsgObj",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                43784,
                43825
            ],
            "filename": "bot.js",
            "lineno": 1456,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003482",
                "name": "messageObj[undefined]",
                "type": "Identifier",
                "funcscope": "buildCardMsgObj",
                "value": "fallbackText",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "buildCardMsgObj~messageObj.undefined]",
        "kind": "member",
        "memberof": "buildCardMsgObj~messageObj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                43829,
                43943
            ],
            "filename": "bot.js",
            "lineno": 1457,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003488",
                "name": "messageObj.attachments",
                "type": "ArrayExpression",
                "funcscope": "buildCardMsgObj",
                "value": "[\"{\\\"contentType\\\":\\\"application/vnd.microsoft.card.adaptive\\\",\\\"content\\\":\\\"\\\"}\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "attachments",
        "longname": "buildCardMsgObj~messageObj.attachments",
        "kind": "member",
        "memberof": "buildCardMsgObj~messageObj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                43861,
                43915
            ],
            "filename": "bot.js",
            "lineno": 1458,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003494",
                "name": "contentType",
                "type": "Literal",
                "value": "application/vnd.microsoft.card.adaptive"
            }
        },
        "undocumented": true,
        "name": "contentType",
        "longname": "contentType",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                43921,
                43938
            ],
            "filename": "bot.js",
            "lineno": 1459,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003496",
                "name": "content",
                "type": "Identifier",
                "value": "cardJson"
            }
        },
        "undocumented": true,
        "name": "content",
        "longname": "content",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19,
                64
            ],
            "filename": "framework.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003505",
                "name": "EventEmitter",
                "type": "MemberExpression",
                "value": ".EventEmitter"
            }
        },
        "undocumented": true,
        "name": "EventEmitter",
        "longname": "EventEmitter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                106
            ],
            "filename": "framework.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003513",
                "name": "EventEmitter.prototype._maxListeners",
                "type": "Literal",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_maxListeners",
        "longname": "EventEmitter#_maxListeners",
        "kind": "member",
        "memberof": "EventEmitter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                151
            ],
            "filename": "framework.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003521",
                "name": "validator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "validator",
        "longname": "validator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                157,
                192
            ],
            "filename": "framework.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003527",
                "name": "sequence",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sequence",
        "longname": "sequence",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                198,
                224
            ],
            "filename": "framework.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003533",
                "name": "moment",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "moment",
        "longname": "moment",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                230,
                276
            ],
            "filename": "framework.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003539",
                "name": "HttpsProxyAgent",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "HttpsProxyAgent",
        "longname": "HttpsProxyAgent",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                282,
                302
            ],
            "filename": "framework.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003545",
                "name": "url",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "url",
        "longname": "url",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                308,
                332
            ],
            "filename": "framework.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003551",
                "name": "Webex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Webex",
        "longname": "Webex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                338,
                376
            ],
            "filename": "framework.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003557",
                "name": "_debug",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_debug",
        "longname": "_debug",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                382,
                404
            ],
            "filename": "framework.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003565",
                "name": "util",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "util",
        "longname": "util",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                410,
                432
            ],
            "filename": "framework.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003571",
                "name": "when",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "when",
        "longname": "when",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                438,
                460
            ],
            "filename": "framework.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003577",
                "name": "path",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "path",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                466,
                487
            ],
            "filename": "framework.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003583",
                "name": "_",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_",
        "longname": "_",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                494,
                533
            ],
            "filename": "framework.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003589",
                "name": "MemStore",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "MemStore",
        "longname": "MemStore",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                540,
                562
            ],
            "filename": "framework.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003595",
                "name": "Bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Bot",
        "longname": "Bot",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                568,
                590
            ],
            "filename": "framework.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003601",
                "name": "u",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "u",
        "longname": "u",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an instance of the Framework.\n *\n * @constructor Framework\n * @param {ConfigObject} options - Configuration object containing Framework settings.\n * @property {string} id - Framework UUID\n * @property {boolean} active - Framework active state\n * @property {boolean} initialized - Framework fully initialized\n * @property {boolean} isBotAccount - Is Framework attached to Webex using a bot account?\n * @property {boolean} isUserAccount - Is Framework attached to Webex using a user account?\n * @property {object} person - Framework person object\n * @property {string} email - Framework email\n * @property {object} webex - The Webex JSSDK instance used by Framework\n *\n * @example\n * var options = {\n *   webhookUrl: 'http://myserver.com/framework',\n *   token: 'Tm90aGluZyB0byBzZWUgaGVyZS4uLiBNb3ZlIGFsb25nLi4u'\n * };\n * var framework = new Framework(options);\n */",
        "meta": {
            "filename": "framework.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Creates an instance of the Framework.</p>",
        "kind": "class",
        "name": "Framework",
        "params": [
            {
                "type": {
                    "names": [
                        "ConfigObject"
                    ]
                },
                "description": "<p>Configuration object containing Framework settings.</p>",
                "name": "options"
            }
        ],
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>Framework active state</p>",
                "name": "active"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>Framework fully initialized</p>",
                "name": "initialized"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>Is Framework attached to Webex using a bot account?</p>",
                "name": "isBotAccount"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>Is Framework attached to Webex using a user account?</p>",
                "name": "isUserAccount"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Framework person object</p>",
                "name": "person"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework email</p>",
                "name": "email"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>The Webex JSSDK instance used by Framework</p>",
                "name": "webex"
            }
        ],
        "examples": [
            "var options = {\n  webhookUrl: 'http://myserver.com/framework',\n  token: 'Tm90aGluZyB0byBzZWUgaGVyZS4uLiBNb3ZlIGFsb25nLi4u'\n};\nvar framework = new Framework(options);"
        ],
        "longname": "Framework",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1472,
                8707
            ],
            "filename": "framework.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003606",
                "name": "Framework",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "options"
                ]
            },
            "vars": {
                "this.id": null,
                "this.options": null,
                "this.active": null,
                "this.initialized": null,
                "this.storageActive": null,
                "this.isBotAccount": null,
                "this.isUserAccount": null,
                "this.person": null,
                "this.options.webhookRequestJSONLocation": "options.webhookRequestJSONLocation",
                "this.options.removeWebhooksOnStart": "options.removeWebhooksOnStart",
                "this.options.removeDeviceRegistrationsOnStart": "options.removeDeviceRegistrationsOnStart",
                "this.messageFormat": null,
                "this.batchDelay": null,
                "this.lexicon": null,
                "this.bots": null,
                "this.inactiveBots": null,
                "this.roomsSpawningNow": null,
                "this.webex": null,
                "this.webhook": null,
                "this.cardsWebhook": null,
                "this.initBotStorageData": null,
                "this.maxStartupSpaces": null,
                "": null
            }
        },
        "undocumented": true,
        "name": "Framework",
        "longname": "Framework",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1532,
                1569
            ],
            "filename": "framework.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003617",
                "name": "this.id",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Options object for the {@link Framework} \n   * \n   * @description Options object for the Framework constructor function.\n   *\n   * @typedef {Object} ConfigObject\n   * @property {string} token - Webex Token.\n   * @property {string} [webhookUrl] - URL that is used for Webex API to send callbacks.  If not set events are received via websocket\n   * @property {string} [webhookSecret] - If specified, inbound webhooks are authorized before being processed. Ignored if webhookUrl is not set.\n   * @property {string} [httpsProxy] - If specified the https proxy to route request to webex through.  Ie: \"https://proxy.mycompany.com:8090\"\n   * @property {number}[maxStartupSpaces] - If specified, the maximum number of spaces with our bot that the framework will discover during startup.  \n        If not specified the framework will attempt to discover all the spaces the framework's identity is in and \"spawn\" a bot object for all of\n        them before emitting an \"initiatialized\" event.  For popular bots that belog to hundreds or thousands of spaces, this can result\n        in long startup times. Setting this to a number (ie: 100) will limit the number of bots spawned before initialization.\n        Bots that are driven by external events and rely on logic that checks if an appropriate bot object exists before sending a notification \n        should not modify the default.  Bots that are driven primarily by webex user commands to the bot may\n        set this to 0 or any positive number to facilitate a faster startup.  After initialization new bot objects are created (\"spawned\")\n        when the bot is added to a new space or, if the framework receives events in existing spaces that it did not discover during initialization.\n        In the case of these \"late discoveries\", bots objects are spawned \"just in time\".  This behavior is similar to the way\n        the webex teams clients work.  See the [Spawn Event docs](#\"spawn\") to discover how to handle the different types of spawn events.\n   * @property {string} [messageFormat=text] - Default Webex message format to use with bot.say().\n   * @property {object} [initBotStorageData={}] - Initial data for new bots to put into storage. \n   * @property {string} [id=random] - The id this instance of Framework uses.\n   * @property {string} [webhookRequestJSONLocation=body] - The property under the Request to find the JSON contents.\n   * @property {Boolean} [removeWebhooksOnStart=true] - If you wish to have the bot remove all account webhooks when starting. Ignored if webhookUrl is not set.\n   * @property {Boolean} [removeDeviceRegistrationsOnStart=false] - If you use websockets and get \"excessive device registrations\" during iterative development, this will delete ALL device registrations.  Use with caution! Ignored if webhookUrl is set.\n   * @property {string} [restrictedToEmailDomains] - Set to a comma seperated list of email domains the bot may interact with, ie \"myco.com,myco2.com\".  \n        For more details see the [Membership-Rules README](./doc/membership-rules-readme.md)\n   * @property {string} [guideEmails] - Set to a comma seperated list of Webex users emails who MUST be in a space in order for the bot to work, ie \"user1@myco.com,user2@myco2.com\".  \n        For more details see the [Membership-Rules README](./doc/membership-rules-readme.md)\n   * @property {string} [membershipRulesDisallowedResponse] - Message from bot when it detects it is in a space that does not conform to the membership rules \n        specified by the `restrictedToEmailDomains` and/or the `guideEmails` parameters.   Default messages is\n        \"Sorry, my use is not allowed for all the members in this space. Will ignore any new messages to me.\".\n        No message will be sent if this is set to an empty string.   \n   * @property {string} [membershipRulesStateMessageResponse] - Message from bot when it is messaged in a space that does not conform to the membership rules\n        specified by the `restrictedToEmailDomains` and/or the `guideEmails` parameters.   Default messages is\n        \"Sorry, because my use is not allowed for all the members in this space I am ignoring any input.\".\n        No message will be sent if this is set to an empty string.\n   * @property {string} [membershipRulesAllowedResponse] - Message from bot when it detects that an the memberships of a space it is in have changed in\n        in order to conform with the membership rules specified by the The default messages is \"I am now allowed to interact with all the members in this space and will no longer ignore any input.\".\n        No message will be sent if this is set to an empty string.\n   * \n   */",
        "meta": {
            "filename": "framework.js",
            "lineno": 48,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Options object for the Framework constructor function.</p>",
        "kind": "typedef",
        "name": "ConfigObject",
        "type": {
            "names": [
                "Object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Webex Token.</p>",
                "name": "token"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "<p>URL that is used for Webex API to send callbacks.  If not set events are received via websocket</p>",
                "name": "webhookUrl"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "<p>If specified, inbound webhooks are authorized before being processed. Ignored if webhookUrl is not set.</p>",
                "name": "webhookSecret"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "<p>If specified the https proxy to route request to webex through.  Ie: &quot;https://proxy.mycompany.com:8090&quot;</p>",
                "name": "httpsProxy"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "description": "<p>If specified, the maximum number of spaces with our bot that the framework will discover during startup.<br>\nIf not specified the framework will attempt to discover all the spaces the framework's identity is in and &quot;spawn&quot; a bot object for all of\nthem before emitting an &quot;initiatialized&quot; event.  For popular bots that belog to hundreds or thousands of spaces, this can result\nin long startup times. Setting this to a number (ie: 100) will limit the number of bots spawned before initialization.\nBots that are driven by external events and rely on logic that checks if an appropriate bot object exists before sending a notification\nshould not modify the default.  Bots that are driven primarily by webex user commands to the bot may\nset this to 0 or any positive number to facilitate a faster startup.  After initialization new bot objects are created (&quot;spawned&quot;)\nwhen the bot is added to a new space or, if the framework receives events in existing spaces that it did not discover during initialization.\nIn the case of these &quot;late discoveries&quot;, bots objects are spawned &quot;just in time&quot;.  This behavior is similar to the way\nthe webex teams clients work.  See the <a href=\"#%22spawn%22\">Spawn Event docs</a> to discover how to handle the different types of spawn events.</p>",
                "name": "maxStartupSpaces"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "text",
                "description": "<p>Default Webex message format to use with bot.say().</p>",
                "name": "messageFormat"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "optional": true,
                "defaultvalue": "{}",
                "description": "<p>Initial data for new bots to put into storage.</p>",
                "name": "initBotStorageData"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "random",
                "description": "<p>The id this instance of Framework uses.</p>",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "body",
                "description": "<p>The property under the Request to find the JSON contents.</p>",
                "name": "webhookRequestJSONLocation"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "optional": true,
                "defaultvalue": true,
                "description": "<p>If you wish to have the bot remove all account webhooks when starting. Ignored if webhookUrl is not set.</p>",
                "name": "removeWebhooksOnStart"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "optional": true,
                "defaultvalue": false,
                "description": "<p>If you use websockets and get &quot;excessive device registrations&quot; during iterative development, this will delete ALL device registrations.  Use with caution! Ignored if webhookUrl is set.</p>",
                "name": "removeDeviceRegistrationsOnStart"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "<p>Set to a comma seperated list of email domains the bot may interact with, ie &quot;myco.com,myco2.com&quot;.<br>\nFor more details see the <a href=\"./doc/membership-rules-readme.md\">Membership-Rules README</a></p>",
                "name": "restrictedToEmailDomains"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "<p>Set to a comma seperated list of Webex users emails who MUST be in a space in order for the bot to work, ie &quot;user1@myco.com,user2@myco2.com&quot;.<br>\nFor more details see the <a href=\"./doc/membership-rules-readme.md\">Membership-Rules README</a></p>",
                "name": "guideEmails"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "<p>Message from bot when it detects it is in a space that does not conform to the membership rules\nspecified by the <code>restrictedToEmailDomains</code> and/or the <code>guideEmails</code> parameters.   Default messages is\n&quot;Sorry, my use is not allowed for all the members in this space. Will ignore any new messages to me.&quot;.\nNo message will be sent if this is set to an empty string.</p>",
                "name": "membershipRulesDisallowedResponse"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "<p>Message from bot when it is messaged in a space that does not conform to the membership rules\nspecified by the <code>restrictedToEmailDomains</code> and/or the <code>guideEmails</code> parameters.   Default messages is\n&quot;Sorry, because my use is not allowed for all the members in this space I am ignoring any input.&quot;.\nNo message will be sent if this is set to an empty string.</p>",
                "name": "membershipRulesStateMessageResponse"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "<p>Message from bot when it detects that an the memberships of a space it is in have changed in\nin order to conform with the membership rules specified by the The default messages is &quot;I am now allowed to interact with all the members in this space and will no longer ignore any input.&quot;.\nNo message will be sent if this is set to an empty string.</p>",
                "name": "membershipRulesAllowedResponse"
            }
        ],
        "longname": "ConfigObject",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6240,
                6262
            ],
            "filename": "framework.js",
            "lineno": 91,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003630",
                "name": "this.options",
                "type": "Identifier",
                "value": "options",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "options",
        "longname": "options",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6267,
                6286
            ],
            "filename": "framework.js",
            "lineno": 93,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003636",
                "name": "this.active",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "active",
        "longname": "active",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6290,
                6314
            ],
            "filename": "framework.js",
            "lineno": 94,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003642",
                "name": "this.initialized",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "initialized",
        "longname": "initialized",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6318,
                6344
            ],
            "filename": "framework.js",
            "lineno": 95,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003648",
                "name": "this.storageActive",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "storageActive",
        "longname": "storageActive",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6348,
                6373
            ],
            "filename": "framework.js",
            "lineno": 96,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003654",
                "name": "this.isBotAccount",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isBotAccount",
        "longname": "isBotAccount",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6377,
                6403
            ],
            "filename": "framework.js",
            "lineno": 97,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003660",
                "name": "this.isUserAccount",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isUserAccount",
        "longname": "isUserAccount",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6407,
                6423
            ],
            "filename": "framework.js",
            "lineno": 98,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003666",
                "name": "this.person",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "person",
        "longname": "person",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6642,
                6733
            ],
            "filename": "framework.js",
            "lineno": 103,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003676",
                "name": "this.options.webhookRequestJSONLocation",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webhookRequestJSONLocation",
        "longname": "options.webhookRequestJSONLocation",
        "kind": "member",
        "memberof": "options",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6845,
                6981
            ],
            "filename": "framework.js",
            "lineno": 106,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003690",
                "name": "this.options.removeWebhooksOnStart",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "removeWebhooksOnStart",
        "longname": "options.removeWebhooksOnStart",
        "kind": "member",
        "memberof": "options",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7111,
                7270
            ],
            "filename": "framework.js",
            "lineno": 109,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003712",
                "name": "this.options.removeDeviceRegistrationsOnStart",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "removeDeviceRegistrationsOnStart",
        "longname": "options.removeDeviceRegistrationsOnStart",
        "kind": "member",
        "memberof": "options",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7507,
                7565
            ],
            "filename": "framework.js",
            "lineno": 113,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003762",
                "name": "this.messageFormat",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "messageFormat",
        "longname": "messageFormat",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7582,
                7609
            ],
            "filename": "framework.js",
            "lineno": 115,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003777",
                "name": "this.messageFormat",
                "type": "Literal",
                "value": "text",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "messageFormat",
        "longname": "messageFormat",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7618,
                7655
            ],
            "filename": "framework.js",
            "lineno": 118,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003783",
                "name": "this.batchDelay",
                "type": "BinaryExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "batchDelay",
        "longname": "batchDelay",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7659,
                7676
            ],
            "filename": "framework.js",
            "lineno": 119,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003793",
                "name": "this.lexicon",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lexicon",
        "longname": "lexicon",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7680,
                7694
            ],
            "filename": "framework.js",
            "lineno": 120,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003799",
                "name": "this.bots",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bots",
        "longname": "bots",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7698,
                7720
            ],
            "filename": "framework.js",
            "lineno": 121,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003805",
                "name": "this.inactiveBots",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "inactiveBots",
        "longname": "inactiveBots",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7760,
                7786
            ],
            "filename": "framework.js",
            "lineno": 122,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003811",
                "name": "this.roomsSpawningNow",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomsSpawningNow",
        "longname": "roomsSpawningNow",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7790,
                7805
            ],
            "filename": "framework.js",
            "lineno": 123,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003817",
                "name": "this.webex",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webex",
        "longname": "webex",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7809,
                7826
            ],
            "filename": "framework.js",
            "lineno": 124,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003823",
                "name": "this.webhook",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webhook",
        "longname": "webhook",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7830,
                7852
            ],
            "filename": "framework.js",
            "lineno": 125,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003829",
                "name": "this.cardsWebhook",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cardsWebhook",
        "longname": "cardsWebhook",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7941,
                8049
            ],
            "filename": "framework.js",
            "lineno": 128,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003835",
                "name": "this.initBotStorageData",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "initBotStorageData",
        "longname": "initBotStorageData",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8199,
                8247
            ],
            "filename": "framework.js",
            "lineno": 132,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003865",
                "name": "this.maxStartupSpaces",
                "type": "MemberExpression",
                "value": "options.maxStartupSpaces",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "maxStartupSpaces",
        "longname": "maxStartupSpaces",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Internal logger function.\n *\n * @function\n * @memberof Framework\n * @private\n * @param {String} message - Message to log\n * @returns {string} Formatted message\n */",
        "meta": {
            "range": [
                8920,
                9470
            ],
            "filename": "framework.js",
            "lineno": 160,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003940",
                "name": "Framework.prototype.log",
                "type": "FunctionExpression",
                "paramnames": [
                    "message"
                ]
            },
            "vars": {
                "message": "Framework#log~message"
            }
        },
        "description": "<p>Internal logger function.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Message to log</p>",
                "name": "message"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Formatted message</p>"
            }
        ],
        "name": "log",
        "longname": "Framework#log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8969,
                9062
            ],
            "filename": "framework.js",
            "lineno": 161,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003950",
                "name": "message",
                "type": "BinaryExpression",
                "funcscope": "Framework#log",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Framework#log~message",
        "kind": "member",
        "memberof": "Framework#log",
        "scope": "inner"
    },
    {
        "comment": "/**\n   * Framework log event.\n   *\n   * Applications may implement a framework.on(\"log\") handler to process\n   * log messags from the framework, such as details about events that were\n   * not sent due to mebership rules.  See [Membership-Rules README](./doc/membership-rules-readme.md)\n   * @event log\n   * @property {string} message - Log Message\n   */",
        "meta": {
            "filename": "framework.js",
            "lineno": 163,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Framework log event.</p>\n<p>Applications may implement a framework.on(&quot;log&quot;) handler to process\nlog messags from the framework, such as details about events that were\nnot sent due to mebership rules.  See <a href=\"./doc/membership-rules-readme.md\">Membership-Rules README</a></p>",
        "kind": "event",
        "name": "log",
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Log Message</p>",
                "name": "message"
            }
        ],
        "longname": "event:log",
        "scope": "global"
    },
    {
        "comment": "/**\n * Internal debug function.\n *\n * @function\n * @memberof Framework\n * @private\n * @param {String} message - Message to debug\n * @returns {null}\n */",
        "meta": {
            "range": [
                9625,
                9870
            ],
            "filename": "framework.js",
            "lineno": 185,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003975",
                "name": "Framework.prototype.debug",
                "type": "FunctionExpression",
                "paramnames": [
                    "message"
                ]
            },
            "vars": {
                "message": "Framework#debug~message"
            }
        },
        "description": "<p>Internal debug function.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Message to debug</p>",
                "name": "message"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "null"
                    ]
                }
            }
        ],
        "name": "debug",
        "longname": "Framework#debug",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9676,
                9748
            ],
            "filename": "framework.js",
            "lineno": 186,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100003985",
                "name": "message",
                "type": "CallExpression",
                "funcscope": "Framework#debug",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Framework#debug~message",
        "kind": "member",
        "memberof": "Framework#debug",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Tests, and then sets a new Webex Token.\n *\n * @function\n * @memberof Framework\n * @param {String} token - New Webex Token for Framework to use.\n * @returns {Promise.<String>}\n *\n * @example\n * framework.setWebexToken('Tm90aGluZyB0byBzZWUgaGVyZS4uLiBNb3ZlIGFsb25nLi4u')\n *   .then(function(token) {\n *      console.log('token updated to: ' + token);\n *   });\n */",
        "meta": {
            "range": [
                10242,
                10522
            ],
            "filename": "framework.js",
            "lineno": 209,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004026",
                "name": "Framework.prototype.setWebexToken",
                "type": "FunctionExpression",
                "paramnames": [
                    "token"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Tests, and then sets a new Webex Token.</p>",
        "kind": "function",
        "memberof": "Framework",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>New Webex Token for Framework to use.</p>",
                "name": "token"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<String>"
                    ]
                }
            }
        ],
        "examples": [
            "framework.setWebexToken('Tm90aGluZyB0byBzZWUgaGVyZS4uLiBNb3ZlIGFsb25nLi4u')\n  .then(function(token) {\n     console.log('token updated to: ' + token);\n  });"
        ],
        "name": "setWebexToken",
        "longname": "Framework#setWebexToken",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10360,
                10386
            ],
            "filename": "framework.js",
            "lineno": 212,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004050",
                "name": "this.options.token",
                "type": "Identifier",
                "value": "token",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "token",
        "longname": "Framework#setWebexToken#options.token",
        "kind": "member",
        "memberof": "Framework#setWebexToken#options",
        "scope": "static"
    },
    {
        "comment": "/**\n * Test a new Webex Token.\n *\n * @function\n * @memberof Framework\n * @private\n * @param {String} token - Test if Token is valid by attempting a simple Webex API Call.\n * @returns {Promise.<String>}\n *\n * @example\n * framework.testWebexToken('Tm90aGluZyB0byBzZWUgaGVyZS4uLiBNb3ZlIGFsb25nLi4u')\n *   .then(function() {\n *     console.log('token valid');\n *   })\n *   .catch(function(err) {\n *     console.log(err.message);\n *   });\n */",
        "meta": {
            "range": [
                10963,
                11327
            ],
            "filename": "framework.js",
            "lineno": 238,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004073",
                "name": "Framework.prototype.testWebexToken",
                "type": "FunctionExpression",
                "paramnames": [
                    "token"
                ]
            },
            "vars": {
                "testOptions": "Framework#testWebexToken~testOptions",
                "testOptions.token": "Framework#testWebexToken~testOptions.token",
                "testWebex": "Framework#testWebexToken~testWebex",
                "": null
            }
        },
        "description": "<p>Test a new Webex Token.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Test if Token is valid by attempting a simple Webex API Call.</p>",
                "name": "token"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<String>"
                    ]
                }
            }
        ],
        "examples": [
            "framework.testWebexToken('Tm90aGluZyB0byBzZWUgaGVyZS4uLiBNb3ZlIGFsb25nLi4u')\n  .then(function() {\n    console.log('token valid');\n  })\n  .catch(function(err) {\n    console.log(err.message);\n  });"
        ],
        "name": "testWebexToken",
        "longname": "Framework#testWebexToken",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11025,
                11060
            ],
            "filename": "framework.js",
            "lineno": 239,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004083",
                "name": "testOptions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "testOptions",
        "longname": "Framework#testWebexToken~testOptions",
        "kind": "member",
        "memberof": "Framework#testWebexToken",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11064,
                11089
            ],
            "filename": "framework.js",
            "lineno": 240,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004093",
                "name": "testOptions.token",
                "type": "Identifier",
                "funcscope": "Framework#testWebexToken",
                "value": "token",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "token",
        "longname": "Framework#testWebexToken~testOptions.token",
        "kind": "member",
        "memberof": "Framework#testWebexToken~testOptions",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11097,
                11131
            ],
            "filename": "framework.js",
            "lineno": 241,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004099",
                "name": "testWebex",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "testWebex",
        "longname": "Framework#testWebexToken~testWebex",
        "kind": "member",
        "memberof": "Framework#testWebexToken",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11194,
                11208
            ],
            "filename": "framework.js",
            "lineno": 245,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004120",
                "name": "testWebex",
                "type": "ObjectExpression",
                "funcscope": "<anonymous>",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "testWebex",
        "longname": "<anonymous>~testWebex",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Accessor for Webex SDK instance\n *\n * Access SDK functionality described in [SDK Reference](https://developer.webex.com/docs/sdks/browser#sdk-api-reference)\n * \n * @function\n * @memberof Framework\n * @returns {object} - Framework's Webex SDK instance\n *\n * @example\n * let webex = framework.getWebexSDK();\n * webex.people.get(me)\n *   .then(person => {\n *     console.log('SDK instantiated by: ' + person.displayName);\n *   }).catch(e => {\n *     console.error('SDK failed to lookup framework user: ' + e.message);\n *   });\n */",
        "meta": {
            "range": [
                11865,
                11935
            ],
            "filename": "framework.js",
            "lineno": 271,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004139",
                "name": "Framework.prototype.getWebexSDK",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "<p>Accessor for Webex SDK instance</p>\n<p>Access SDK functionality described in <a href=\"https://developer.webex.com/docs/sdks/browser#sdk-api-reference\">SDK Reference</a></p>",
        "kind": "function",
        "memberof": "Framework",
        "returns": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<ul>\n<li>Framework's Webex SDK instance</li>\n</ul>"
            }
        ],
        "examples": [
            "let webex = framework.getWebexSDK();\nwebex.people.get(me)\n  .then(person => {\n    console.log('SDK instantiated by: ' + person.displayName);\n  }).catch(e => {\n    console.error('SDK failed to lookup framework user: ' + e.message);\n  });"
        ],
        "name": "getWebexSDK",
        "longname": "Framework#getWebexSDK",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Stop Framework.\n *\n * @function\n * @memberof Framework\n * @returns {Promise.<Boolean>}\n *\n * @example\n * framework.stop();\n */",
        "meta": {
            "range": [
                12073,
                12771
            ],
            "filename": "framework.js",
            "lineno": 286,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004152",
                "name": "Framework.prototype.stop",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Stop Framework.</p>",
        "kind": "function",
        "memberof": "Framework",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "examples": [
            "framework.stop();"
        ],
        "name": "stop",
        "longname": "Framework#stop",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12359,
                12373
            ],
            "filename": "framework.js",
            "lineno": 300,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004200",
                "name": "this.bots",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bots",
        "longname": "Framework#stop#bots",
        "kind": "member",
        "memberof": "Framework#stop",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12383,
                12398
            ],
            "filename": "framework.js",
            "lineno": 301,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004206",
                "name": "this.webex",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webex",
        "longname": "Framework#stop#webex",
        "kind": "member",
        "memberof": "Framework#stop",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12408,
                12425
            ],
            "filename": "framework.js",
            "lineno": 302,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004212",
                "name": "this.webhook",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webhook",
        "longname": "Framework#stop#webhook",
        "kind": "member",
        "memberof": "Framework#stop",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12435,
                12457
            ],
            "filename": "framework.js",
            "lineno": 303,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004218",
                "name": "this.cardsWebhook",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cardsWebhook",
        "longname": "Framework#stop#cardsWebhook",
        "kind": "member",
        "memberof": "Framework#stop",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12467,
                12486
            ],
            "filename": "framework.js",
            "lineno": 304,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004224",
                "name": "this.active",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "active",
        "longname": "Framework#stop#active",
        "kind": "member",
        "memberof": "Framework#stop",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12496,
                12520
            ],
            "filename": "framework.js",
            "lineno": 305,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004230",
                "name": "this.initialized",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "initialized",
        "longname": "Framework#stop#initialized",
        "kind": "member",
        "memberof": "Framework#stop",
        "scope": "instance"
    },
    {
        "comment": "/**\n         * Framework stop event.\n         *\n         * @event stop\n         * @property {string} id - Framework UUID\n         */",
        "meta": {
            "filename": "framework.js",
            "lineno": 306,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Framework stop event.</p>",
        "kind": "event",
        "name": "stop",
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:stop",
        "scope": "global"
    },
    {
        "comment": "/**\n * Start Framework.\n *\n * @function\n * @memberof Framework\n * @returns {Promise.<Boolean>}\n *\n * @example\n * framework.start();\n */",
        "meta": {
            "range": [
                12910,
                17715
            ],
            "filename": "framework.js",
            "lineno": 332,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004251",
                "name": "Framework.prototype.start",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "errMsg": "Framework#start~errMsg",
                "": null,
                "config": "Framework#start~config",
                "proxyUrl": "Framework#start~proxyUrl",
                "httpsProxyAgent": "Framework#start~httpsProxyAgent",
                "config.defaultMercuryOptions": "Framework#start~config.defaultMercuryOptions",
                "this.webex": "Framework#start#webex"
            }
        },
        "description": "<p>Start Framework.</p>",
        "kind": "function",
        "memberof": "Framework",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "examples": [
            "framework.start();"
        ],
        "name": "start",
        "longname": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13079,
                13085
            ],
            "filename": "framework.js",
            "lineno": 337,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004266",
                "name": "errMsg"
            }
        },
        "undocumented": true,
        "name": "errMsg",
        "longname": "Framework#start~errMsg",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13095,
                13144
            ],
            "filename": "framework.js",
            "lineno": 338,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004269",
                "name": "errMsg",
                "type": "CallExpression",
                "funcscope": "Framework#start",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "errMsg",
        "longname": "Framework#start~errMsg",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13268,
                13304
            ],
            "filename": "framework.js",
            "lineno": 342,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004286",
                "name": "errMsg",
                "type": "CallExpression",
                "funcscope": "Framework#start",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "errMsg",
        "longname": "Framework#start~errMsg",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13652,
                13738
            ],
            "filename": "framework.js",
            "lineno": 353,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004330",
                "name": "config",
                "type": "ObjectExpression",
                "value": "{\"credentials\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "config",
        "longname": "Framework#start~config",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13669,
                13732
            ],
            "filename": "framework.js",
            "lineno": 354,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004333",
                "name": "credentials",
                "type": "ObjectExpression",
                "value": "{\"access_token\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "credentials",
        "longname": "Framework#start~config.credentials",
        "kind": "member",
        "memberof": "Framework#start~config",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13692,
                13724
            ],
            "filename": "framework.js",
            "lineno": 355,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004335",
                "name": "access_token",
                "type": "MemberExpression",
                "value": "this.options.token"
            }
        },
        "undocumented": true,
        "name": "access_token",
        "longname": "Framework#start~config.credentials.access_token",
        "kind": "member",
        "memberof": "Framework#start~config.credentials",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13748,
                13790
            ],
            "filename": "framework.js",
            "lineno": 358,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004342",
                "name": "proxyUrl",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "proxyUrl",
        "longname": "Framework#start~proxyUrl",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13870,
                13928
            ],
            "filename": "framework.js",
            "lineno": 361,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004362",
                "name": "httpsProxyAgent",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "httpsProxyAgent",
        "longname": "Framework#start~httpsProxyAgent",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13936,
                14007
            ],
            "filename": "framework.js",
            "lineno": 362,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004372",
                "name": "config.defaultMercuryOptions",
                "type": "ObjectExpression",
                "funcscope": "Framework#start",
                "value": "{\"agent\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "defaultMercuryOptions",
        "longname": "Framework#start~config.defaultMercuryOptions",
        "kind": "member",
        "memberof": "Framework#start~config",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13977,
                13999
            ],
            "filename": "framework.js",
            "lineno": 363,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004377",
                "name": "agent",
                "type": "Identifier",
                "value": "httpsProxyAgent"
            }
        },
        "undocumented": true,
        "name": "agent",
        "longname": "Framework#start~config.defaultMercuryOptions.agent",
        "kind": "member",
        "memberof": "Framework#start~config.defaultMercuryOptions",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14019,
                14050
            ],
            "filename": "framework.js",
            "lineno": 366,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004380",
                "name": "this.webex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webex",
        "longname": "Framework#start#webex",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14154,
                14174
            ],
            "filename": "framework.js",
            "lineno": 371,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004412",
                "name": "this.person",
                "type": "Identifier",
                "value": "person",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "person",
        "longname": "Framework#start#person",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14243,
                14283
            ],
            "filename": "framework.js",
            "lineno": 373,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004418",
                "name": "this.email",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "email",
        "longname": "Framework#start#email",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14436,
                14460
            ],
            "filename": "framework.js",
            "lineno": 378,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004435",
                "name": "this.isBotAccount",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isBotAccount",
        "longname": "Framework#start#isBotAccount",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14472,
                14498
            ],
            "filename": "framework.js",
            "lineno": 379,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004441",
                "name": "this.isUserAccount",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isUserAccount",
        "longname": "Framework#start#isUserAccount",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14527,
                14552
            ],
            "filename": "framework.js",
            "lineno": 381,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004448",
                "name": "this.isBotAccount",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isBotAccount",
        "longname": "Framework#start#isBotAccount",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14564,
                14589
            ],
            "filename": "framework.js",
            "lineno": 382,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004454",
                "name": "this.isUserAccount",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isUserAccount",
        "longname": "Framework#start#isUserAccount",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15004,
                15196
            ],
            "filename": "framework.js",
            "lineno": 400,
            "columnno": 20,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004499",
                "name": "webhooksToRemove",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "webhooksToRemove",
        "longname": "<anonymous>~webhooksToRemove",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15805,
                16045
            ],
            "filename": "framework.js",
            "lineno": 419,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004594",
                "name": "newWebhook",
                "type": "ObjectExpression",
                "value": "{\"resource\":\"all\",\"event\":\"all\",\"targetUrl\":\"\",\"name\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "newWebhook",
        "longname": "<anonymous>~newWebhook",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15836,
                15851
            ],
            "filename": "framework.js",
            "lineno": 420,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004597",
                "name": "resource",
                "type": "Literal",
                "value": "all"
            }
        },
        "undocumented": true,
        "name": "resource",
        "longname": "<anonymous>~newWebhook.resource",
        "kind": "member",
        "memberof": "<anonymous>~newWebhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15869,
                15881
            ],
            "filename": "framework.js",
            "lineno": 421,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004599",
                "name": "event",
                "type": "Literal",
                "value": "all"
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "<anonymous>~newWebhook.event",
        "kind": "member",
        "memberof": "<anonymous>~newWebhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15899,
                15933
            ],
            "filename": "framework.js",
            "lineno": 422,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004601",
                "name": "targetUrl",
                "type": "MemberExpression",
                "value": "this.options.webhookUrl"
            }
        },
        "undocumented": true,
        "name": "targetUrl",
        "longname": "<anonymous>~newWebhook.targetUrl",
        "kind": "member",
        "memberof": "<anonymous>~newWebhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15951,
                16029
            ],
            "filename": "framework.js",
            "lineno": 423,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004607",
                "name": "name",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "<anonymous>~newWebhook.name",
        "kind": "member",
        "memberof": "<anonymous>~newWebhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16111,
                16157
            ],
            "filename": "framework.js",
            "lineno": 426,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004637",
                "name": "newWebhook.secret",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "this.options.webhookSecret",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "secret",
        "longname": "<anonymous>~newWebhook.secret",
        "kind": "member",
        "memberof": "<anonymous>~newWebhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16480,
                16502
            ],
            "filename": "framework.js",
            "lineno": 432,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004667",
                "name": "this.webhook",
                "type": "Identifier",
                "value": "webhook",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webhook",
        "longname": "Framework#start#webhook",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16522,
                16563
            ],
            "filename": "framework.js",
            "lineno": 433,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004673",
                "name": "newWebhook.resource",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": "attachmentActions",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "resource",
        "longname": "<anonymous>~newWebhook.resource",
        "kind": "member",
        "memberof": "<anonymous>~newWebhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16583,
                16611
            ],
            "filename": "framework.js",
            "lineno": 434,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004679",
                "name": "newWebhook.event",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": "created",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "<anonymous>~newWebhook.event",
        "kind": "member",
        "memberof": "<anonymous>~newWebhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16750,
                16777
            ],
            "filename": "framework.js",
            "lineno": 438,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004699",
                "name": "this.cardsWebhook",
                "type": "Identifier",
                "value": "webhook",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cardsWebhook",
        "longname": "Framework#start#cardsWebhook",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16999,
                17019
            ],
            "filename": "framework.js",
            "lineno": 443,
            "columnno": 30,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004726",
                "name": "this.webhook",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webhook",
        "longname": "Framework#start#webhook",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17170,
                17204
            ],
            "filename": "framework.js",
            "lineno": 448,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004733",
                "name": "Websocket",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Websocket",
        "longname": "<anonymous>~Websocket",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17216,
                17252
            ],
            "filename": "framework.js",
            "lineno": 449,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004739",
                "name": "this.websocket",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "websocket",
        "longname": "Framework#start#websocket",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "/**\n         * Framework start event.\n         *\n         * @event start\n         * @property {string} id - Framework UUID\n         */",
        "meta": {
            "filename": "framework.js",
            "lineno": 456,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Framework start event.</p>",
        "kind": "event",
        "name": "start",
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:start",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17530,
                17548
            ],
            "filename": "framework.js",
            "lineno": 463,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004763",
                "name": "this.active",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "active",
        "longname": "Framework#start#active",
        "kind": "member",
        "memberof": "Framework#start",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Initialize Framework.\n *\n * @function\n * @memberof Framework\n * @private\n * @returns {Promise.<Boolean>}\n *\n * @example\n * framework.initialize();\n */",
        "meta": {
            "range": [
                17876,
                19852
            ],
            "filename": "framework.js",
            "lineno": 487,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004788",
                "name": "Framework.prototype.initialize",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "batchSize": "Framework#initialize~batchSize",
                "": null,
                "this.initialized": "Framework#initialize#initialized"
            }
        },
        "description": "<p>Initialize Framework.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "examples": [
            "framework.initialize();"
        ],
        "name": "initialize",
        "longname": "Framework#initialize",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18012,
                18028
            ],
            "filename": "framework.js",
            "lineno": 490,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004804",
                "name": "batchSize",
                "type": "Literal",
                "value": 1000
            }
        },
        "undocumented": true,
        "name": "batchSize",
        "longname": "Framework#initialize~batchSize",
        "kind": "member",
        "memberof": "Framework#initialize",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18160,
                18193
            ],
            "filename": "framework.js",
            "lineno": 492,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004821",
                "name": "batchSize",
                "type": "MemberExpression",
                "funcscope": "Framework#initialize",
                "value": "this.maxStartupSpaces",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "batchSize",
        "longname": "Framework#initialize~batchSize",
        "kind": "member",
        "memberof": "Framework#initialize",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18242,
                18256
            ],
            "filename": "framework.js",
            "lineno": 495,
            "columnno": 40,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004840",
                "name": "max",
                "type": "Identifier",
                "value": "batchSize"
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "max",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18302,
                18313
            ],
            "filename": "framework.js",
            "lineno": 497,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004847",
                "name": "self",
                "type": "ThisExpression",
                "value": "this"
            }
        },
        "undocumented": true,
        "name": "self",
        "longname": "<anonymous>~self",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18327,
                18346
            ],
            "filename": "framework.js",
            "lineno": 498,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004851",
                "name": "spawn_promises",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "spawn_promises",
        "longname": "<anonymous>~spawn_promises",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18404,
                18428
            ],
            "filename": "framework.js",
            "lineno": 501,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004861",
                "name": "memberships",
                "type": "MemberExpression",
                "value": "page.items"
            }
        },
        "undocumented": true,
        "name": "memberships",
        "longname": "<anonymous>~memberships",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18866,
                18984
            ],
            "filename": "framework.js",
            "lineno": 510,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004901",
                "name": "spawn_promises",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "spawn_promises",
        "longname": "<anonymous>~spawn_promises",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n         * Framework initialized event.\n         *\n         * @event initialized\n         * @property {string} id - Framework UUID\n         */",
        "meta": {
            "filename": "framework.js",
            "lineno": 529,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Framework initialized event.</p>",
        "kind": "event",
        "name": "initialized",
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:initialized",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19690,
                19713
            ],
            "filename": "framework.js",
            "lineno": 536,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100004985",
                "name": "this.initialized",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "initialized",
        "longname": "Framework#initialize#initialized",
        "kind": "member",
        "memberof": "Framework#initialize",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19799,
                19822
            ],
            "filename": "framework.js",
            "lineno": 541,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005002",
                "name": "this.initialized",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "initialized",
        "longname": "Framework#initialize#initialized",
        "kind": "member",
        "memberof": "Framework#initialize",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Restart Framework.\n *\n * @function\n * @memberof Framework\n * @returns {Promise.<Boolean>}\n *\n * @example\n * framework.restart();\n */",
        "meta": {
            "range": [
                19995,
                20193
            ],
            "filename": "framework.js",
            "lineno": 556,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005012",
                "name": "Framework.prototype.restart",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Restart Framework.</p>",
        "kind": "function",
        "memberof": "Framework",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "examples": [
            "framework.restart();"
        ],
        "name": "restart",
        "longname": "Framework#restart",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Parse a message object.\n * Take a native webex message object and add additional info about the sender to it\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Object} message - Message Object\n * @returns {Promise.<Message>}\n */",
        "meta": {
            "range": [
                20443,
                21795
            ],
            "filename": "framework.js",
            "lineno": 577,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005045",
                "name": "Framework.prototype.parseMessage",
                "type": "FunctionExpression",
                "paramnames": [
                    "message"
                ]
            },
            "vars": {
                "message.raw": "message.raw",
                "message.text": "message.text",
                "": null
            }
        },
        "description": "<p>Parse a message object.\nTake a native webex message object and add additional info about the sender to it</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>Message Object</p>",
                "name": "message"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Message>"
                    ]
                }
            }
        ],
        "name": "parseMessage",
        "longname": "Framework#parseMessage",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20738,
                20764
            ],
            "filename": "framework.js",
            "lineno": 587,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005060",
                "name": "message.raw",
                "type": "MemberExpression",
                "value": "message.text",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "raw",
        "longname": "message.raw",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20802,
                20836
            ],
            "filename": "framework.js",
            "lineno": 590,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005068",
                "name": "message.text",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "text",
        "longname": "message.text",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20900,
                20952
            ],
            "filename": "framework.js",
            "lineno": 593,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005079",
                "name": "message.text",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "text",
        "longname": "message.text",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21012,
                21062
            ],
            "filename": "framework.js",
            "lineno": 596,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005092",
                "name": "message.text",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "text",
        "longname": "message.text",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21268,
                21308
            ],
            "filename": "framework.js",
            "lineno": 604,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005136",
                "name": "message.personUsername",
                "type": "MemberExpression",
                "value": "person.username",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "personUsername",
        "longname": "message.personUsername",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21320,
                21354
            ],
            "filename": "framework.js",
            "lineno": 605,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005144",
                "name": "message.personEmail",
                "type": "MemberExpression",
                "value": "person.email",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "personEmail",
        "longname": "message.personEmail",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21366,
                21412
            ],
            "filename": "framework.js",
            "lineno": 606,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005152",
                "name": "message.personDisplayName",
                "type": "MemberExpression",
                "value": "person.displayName",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "personDisplayName",
        "longname": "message.personDisplayName",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21424,
                21460
            ],
            "filename": "framework.js",
            "lineno": 607,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005160",
                "name": "message.personDomain",
                "type": "MemberExpression",
                "value": "person.domain",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "personDomain",
        "longname": "message.personDomain",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21472,
                21517
            ],
            "filename": "framework.js",
            "lineno": 608,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005168",
                "name": "message.personAvatar",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "personAvatar",
        "longname": "message.personAvatar",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21595,
                21642
            ],
            "filename": "framework.js",
            "lineno": 612,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005185",
                "name": "message.personDisplayName",
                "type": "MemberExpression",
                "value": "message.personEmail",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "personDisplayName",
        "longname": "message.personDisplayName",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21654,
                21686
            ],
            "filename": "framework.js",
            "lineno": 613,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005193",
                "name": "message.personDomain",
                "type": "Literal",
                "value": "unknown",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "personDomain",
        "longname": "message.personDomain",
        "kind": "member",
        "memberof": "message",
        "scope": "static"
    },
    {
        "comment": "/**\n * Creates Trigger Object from a message or attachmentAction\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Object} message - Enhanced message object (with additional sender info)\n// * @param {Webhook} messageData - Webhook object from message created webhook\n * @returns {Promise.<Trigger>}\n */",
        "meta": {
            "range": [
                22113,
                23922
            ],
            "filename": "framework.js",
            "lineno": 632,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005210",
                "name": "Framework.prototype.getTrigger",
                "type": "FunctionExpression",
                "paramnames": [
                    "type",
                    "triggerObject"
                ]
            },
            "vars": {
                "trigger": "Framework#getTrigger~trigger",
                "trigger.type": "Framework#getTrigger~trigger.type",
                "message": "Framework#getTrigger~message",
                "trigger.id": "Framework#getTrigger~trigger.id",
                "trigger.text": "Framework#getTrigger~trigger.text",
                "trigger.args": "Framework#getTrigger~trigger.args",
                "trigger.message": "Framework#getTrigger~trigger.message",
                "trigger.attachmentAction": "Framework#getTrigger~trigger.attachmentAction",
                "": null
            }
        },
        "description": "<p>Creates Trigger Object from a message or attachmentAction</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>Enhanced message object (with additional sender info)\n// * @param {Webhook} messageData - Webhook object from message created webhook</p>",
                "name": "message"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Trigger>"
                    ]
                }
            }
        ],
        "name": "getTrigger",
        "longname": "Framework#getTrigger",
        "scope": "instance"
    },
    {
        "comment": "/**\n   *\n   * @class Trigger\n   * @summary This is a summary.\n   * @property {string} type - type of trigger - message or attachmentAction\n   * @property {string} id - Message or attachentAction ID\n   * @property {object} message - message that caused this trigger (if type is 'message')\n   * @property {(string|regex)} phrase - Matched lexicon phrase if any\n   * @property {array} args - Filtered array of words in message text.\n   * @property {object} attachmentAction - attachmentAction that caused this trigger (if type is 'attachmentAction')\n   * @property {object} person - Person object associated with user that sent the message or action\n   * @property {string} personId - ID of person\n   */",
        "meta": {
            "filename": "framework.js",
            "lineno": 634,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "kind": "class",
        "name": "Trigger",
        "summary": "<p>This is a summary.</p>",
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>type of trigger - message or attachmentAction</p>",
                "name": "type"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Message or attachentAction ID</p>",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>message that caused this trigger (if type is 'message')</p>",
                "name": "message"
            },
            {
                "type": {
                    "names": [
                        "string",
                        "regex"
                    ]
                },
                "description": "<p>Matched lexicon phrase if any</p>",
                "name": "phrase"
            },
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "<p>Filtered array of words in message text.</p>",
                "name": "args"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>attachmentAction that caused this trigger (if type is 'attachmentAction')</p>",
                "name": "attachmentAction"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Person object associated with user that sent the message or action</p>",
                "name": "person"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>ID of person</p>",
                "name": "personId"
            }
        ],
        "longname": "Trigger",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22889,
                22901
            ],
            "filename": "framework.js",
            "lineno": 647,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005221",
                "name": "trigger",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "trigger",
        "longname": "Framework#getTrigger~trigger",
        "kind": "member",
        "memberof": "Framework#getTrigger",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22906,
                22925
            ],
            "filename": "framework.js",
            "lineno": 649,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005225",
                "name": "trigger.type",
                "type": "Identifier",
                "funcscope": "Framework#getTrigger",
                "value": "type",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "Framework#getTrigger~trigger.type",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22963,
                22986
            ],
            "filename": "framework.js",
            "lineno": 651,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005236",
                "name": "message",
                "type": "Identifier",
                "value": "triggerObject"
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Framework#getTrigger~message",
        "kind": "member",
        "memberof": "Framework#getTrigger",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23012,
                23035
            ],
            "filename": "framework.js",
            "lineno": 653,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005240",
                "name": "trigger.id",
                "type": "MemberExpression",
                "funcscope": "Framework#getTrigger",
                "value": "message.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "Framework#getTrigger~trigger.id",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23170,
                23204
            ],
            "filename": "framework.js",
            "lineno": 658,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005253",
                "name": "trigger.text",
                "type": "CallExpression",
                "funcscope": "Framework#getTrigger",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "text",
        "longname": "Framework#getTrigger~trigger.text",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23271,
                23323
            ],
            "filename": "framework.js",
            "lineno": 660,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005264",
                "name": "trigger.text",
                "type": "CallExpression",
                "funcscope": "Framework#getTrigger",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "text",
        "longname": "Framework#getTrigger~trigger.text",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23386,
                23436
            ],
            "filename": "framework.js",
            "lineno": 662,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005277",
                "name": "trigger.text",
                "type": "CallExpression",
                "funcscope": "Framework#getTrigger",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "text",
        "longname": "Framework#getTrigger~trigger.text",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23448,
                23506
            ],
            "filename": "framework.js",
            "lineno": 664,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005290",
                "name": "trigger.args",
                "type": "ConditionalExpression",
                "funcscope": "Framework#getTrigger",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "Framework#getTrigger~trigger.args",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23512,
                23537
            ],
            "filename": "framework.js",
            "lineno": 665,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005307",
                "name": "trigger.message",
                "type": "Identifier",
                "funcscope": "Framework#getTrigger",
                "value": "message",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "message",
        "longname": "Framework#getTrigger~trigger.message",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23587,
                23616
            ],
            "filename": "framework.js",
            "lineno": 667,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005318",
                "name": "trigger.id",
                "type": "MemberExpression",
                "funcscope": "Framework#getTrigger",
                "value": "triggerObject.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "Framework#getTrigger~trigger.id",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23622,
                23662
            ],
            "filename": "framework.js",
            "lineno": 668,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005326",
                "name": "trigger.attachmentAction",
                "type": "Identifier",
                "funcscope": "Framework#getTrigger",
                "value": "triggerObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "attachmentAction",
        "longname": "Framework#getTrigger~trigger.attachmentAction",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23824,
                23847
            ],
            "filename": "framework.js",
            "lineno": 675,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005362",
                "name": "trigger.person",
                "type": "Identifier",
                "funcscope": "Framework#getTrigger",
                "value": "person",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "person",
        "longname": "Framework#getTrigger~trigger.person",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23855,
                23883
            ],
            "filename": "framework.js",
            "lineno": 676,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005368",
                "name": "trigger.personId",
                "type": "MemberExpression",
                "funcscope": "Framework#getTrigger",
                "value": "person.id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "personId",
        "longname": "Framework#getTrigger~trigger.personId",
        "kind": "member",
        "memberof": "Framework#getTrigger~trigger",
        "scope": "static"
    },
    {
        "comment": "/**\n * Get Person Object By Email\n *\n * @function\n * @memberof Framework\n * @private\n * @param {String} personEmail - Person Email of Webex Account\n * @returns {Promise.<Person>}\n */",
        "meta": {
            "range": [
                24108,
                24629
            ],
            "filename": "framework.js",
            "lineno": 690,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005380",
                "name": "Framework.prototype.getPersonByEmail",
                "type": "FunctionExpression",
                "paramnames": [
                    "personEmail"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Get Person Object By Email</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Person Email of Webex Account</p>",
                "name": "personEmail"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Person>"
                    ]
                }
            }
        ],
        "name": "getPersonByEmail",
        "longname": "Framework#getPersonByEmail",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24205,
                24223
            ],
            "filename": "framework.js",
            "lineno": 691,
            "columnno": 33,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005401",
                "name": "email",
                "type": "Identifier",
                "value": "personEmail"
            }
        },
        "undocumented": true,
        "name": "email",
        "longname": "email",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24258,
                24283
            ],
            "filename": "framework.js",
            "lineno": 693,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005408",
                "name": "personList",
                "type": "MemberExpression",
                "value": "people.items"
            }
        },
        "undocumented": true,
        "name": "personList",
        "longname": "<anonymous>~personList",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24295,
                24324
            ],
            "filename": "framework.js",
            "lineno": 694,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005414",
                "name": "numPeople",
                "type": "MemberExpression",
                "value": "personList.length"
            }
        },
        "undocumented": true,
        "name": "numPeople",
        "longname": "<anonymous>~numPeople",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Get Person Email\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Ojbect} person- Webex Person Object\n * @returns {string}\n */",
        "meta": {
            "range": [
                24779,
                24931
            ],
            "filename": "framework.js",
            "lineno": 714,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005461",
                "name": "Framework.prototype.getPersonEmail",
                "type": "FunctionExpression",
                "paramnames": [
                    "person"
                ]
            }
        },
        "description": "<p>Get Person Email</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Ojbect"
                    ]
                },
                "description": "<p>Webex Person Object</p>",
                "name": "person-"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "name": "getPersonEmail",
        "longname": "Framework#getPersonEmail",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Get Person Username\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Ojbect} person- Webex Person Object\n * @returns {string}\n */",
        "meta": {
            "range": [
                25084,
                25261
            ],
            "filename": "framework.js",
            "lineno": 731,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005489",
                "name": "Framework.prototype.getPersonUsername",
                "type": "FunctionExpression",
                "paramnames": [
                    "person"
                ]
            }
        },
        "description": "<p>Get Person Username</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Ojbect"
                    ]
                },
                "description": "<p>Webex Person Object</p>",
                "name": "person-"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "name": "getPersonUsername",
        "longname": "Framework#getPersonUsername",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Get Person Domain\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Ojbect} person- Webex Person Object\n * @returns {string}\n */",
        "meta": {
            "range": [
                25412,
                25585
            ],
            "filename": "framework.js",
            "lineno": 748,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005525",
                "name": "Framework.prototype.getPersonDomain",
                "type": "FunctionExpression",
                "paramnames": [
                    "person"
                ]
            }
        },
        "description": "<p>Get Person Domain</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Ojbect"
                    ]
                },
                "description": "<p>Webex Person Object</p>",
                "name": "person-"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "name": "getPersonDomain",
        "longname": "Framework#getPersonDomain",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Get bot object associated with roomId.\n * Returns null if no object exists\n * \n * @function\n * @memberof Framework\n * @param {string} roomId - id of room to search for\n * @returns {object} - found bot object or null\n *\n * @example\n * let bot = framework.getBotByRoomId(roomId);\n * if (bot) {\n *   bot.say('Hi, I\\'m the bot in this room!');\n * } else {\n *   console.log('Could not find bot for room ID: ' + roomId);\n * }\n */",
        "meta": {
            "range": [
                26019,
                26137
            ],
            "filename": "framework.js",
            "lineno": 773,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005561",
                "name": "Framework.prototype.getBotByRoomId",
                "type": "FunctionExpression",
                "paramnames": [
                    "roomId"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Get bot object associated with roomId.\nReturns null if no object exists</p>",
        "kind": "function",
        "memberof": "Framework",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>id of room to search for</p>",
                "name": "roomId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<ul>\n<li>found bot object or null</li>\n</ul>"
            }
        ],
        "examples": [
            "let bot = framework.getBotByRoomId(roomId);\nif (bot) {\n  bot.say('Hi, I\\'m the bot in this room!');\n} else {\n  console.log('Could not find bot for room ID: ' + roomId);\n}"
        ],
        "name": "getBotByRoomId",
        "longname": "Framework#getBotByRoomId",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Process a Room create event.\n *\n * @function\n * @memberof Framework\n * @private\n * @returns {Promise}\n */",
        "meta": {
            "range": [
                26253,
                26462
            ],
            "filename": "framework.js",
            "lineno": 785,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005588",
                "name": "Framework.prototype.onRoomCreated",
                "type": "FunctionExpression",
                "paramnames": [
                    "room"
                ]
            },
            "vars": {
                "bot": "Framework#onRoomCreated~bot",
                "bot.room": "Framework#onRoomCreated~bot.room",
                "bot.lastActivity": "Framework#onRoomCreated~bot.lastActivity"
            }
        },
        "description": "<p>Process a Room create event.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise"
                    ]
                }
            }
        ],
        "name": "onRoomCreated",
        "longname": "Framework#onRoomCreated",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26313,
                26352
            ],
            "filename": "framework.js",
            "lineno": 786,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005598",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#onRoomCreated~bot",
        "kind": "member",
        "memberof": "Framework#onRoomCreated",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26371,
                26386
            ],
            "filename": "framework.js",
            "lineno": 788,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005611",
                "name": "bot.room",
                "type": "Identifier",
                "funcscope": "Framework#onRoomCreated",
                "value": "room",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "room",
        "longname": "Framework#onRoomCreated~bot.room",
        "kind": "member",
        "memberof": "Framework#onRoomCreated~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26392,
                26434
            ],
            "filename": "framework.js",
            "lineno": 789,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005617",
                "name": "bot.lastActivity",
                "type": "CallExpression",
                "funcscope": "Framework#onRoomCreated",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastActivity",
        "longname": "Framework#onRoomCreated~bot.lastActivity",
        "kind": "member",
        "memberof": "Framework#onRoomCreated~bot",
        "scope": "static"
    },
    {
        "comment": "/**\n * Process a Room update event.\n *\n * @function\n * @memberof Framework\n * @private\n * @returns {Promise}\n */",
        "meta": {
            "range": [
                26578,
                28989
            ],
            "filename": "framework.js",
            "lineno": 802,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005634",
                "name": "Framework.prototype.onRoomUpdated",
                "type": "FunctionExpression",
                "paramnames": [
                    "room"
                ]
            },
            "vars": {
                "bot": "Framework#onRoomUpdated~bot",
                "": null,
                "lockStatusChanged": "Framework#onRoomUpdated~lockStatusChanged",
                "roomRenamed": "Framework#onRoomUpdated~roomRenamed",
                "bot.isGroup": "Framework#onRoomUpdated~bot.isGroup",
                "bot.isDirect": "Framework#onRoomUpdated~bot.isDirect",
                "bot.lastActivity": "Framework#onRoomUpdated~bot.lastActivity",
                "bot.room": "Framework#onRoomUpdated~bot.room",
                "bot.isLocked": "Framework#onRoomUpdated~bot.isLocked"
            }
        },
        "description": "<p>Process a Room update event.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise"
                    ]
                }
            }
        ],
        "name": "onRoomUpdated",
        "longname": "Framework#onRoomUpdated",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26638,
                26677
            ],
            "filename": "framework.js",
            "lineno": 803,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005644",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#onRoomUpdated~bot",
        "kind": "member",
        "memberof": "Framework#onRoomUpdated",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26986,
                27001
            ],
            "filename": "framework.js",
            "lineno": 811,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005671",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27011,
                27035
            ],
            "filename": "framework.js",
            "lineno": 812,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005675",
                "name": "personId",
                "type": "MemberExpression",
                "value": "this.person.id"
            }
        },
        "undocumented": true,
        "name": "personId",
        "longname": "personId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27560,
                27631
            ],
            "filename": "framework.js",
            "lineno": 824,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005716",
                "name": "lockStatusChanged",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lockStatusChanged",
        "longname": "Framework#onRoomUpdated~lockStatusChanged",
        "kind": "member",
        "memberof": "Framework#onRoomUpdated",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27641,
                27700
            ],
            "filename": "framework.js",
            "lineno": 825,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005731",
                "name": "roomRenamed",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "roomRenamed",
        "longname": "Framework#onRoomUpdated~roomRenamed",
        "kind": "member",
        "memberof": "Framework#onRoomUpdated",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27723,
                27760
            ],
            "filename": "framework.js",
            "lineno": 827,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005746",
                "name": "bot.isGroup",
                "type": "BinaryExpression",
                "funcscope": "Framework#onRoomUpdated",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isGroup",
        "longname": "Framework#onRoomUpdated~bot.isGroup",
        "kind": "member",
        "memberof": "Framework#onRoomUpdated~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27766,
                27805
            ],
            "filename": "framework.js",
            "lineno": 828,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005756",
                "name": "bot.isDirect",
                "type": "BinaryExpression",
                "funcscope": "Framework#onRoomUpdated",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isDirect",
        "longname": "Framework#onRoomUpdated~bot.isDirect",
        "kind": "member",
        "memberof": "Framework#onRoomUpdated~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27811,
                27853
            ],
            "filename": "framework.js",
            "lineno": 829,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005766",
                "name": "bot.lastActivity",
                "type": "CallExpression",
                "funcscope": "Framework#onRoomUpdated",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastActivity",
        "longname": "Framework#onRoomUpdated~bot.lastActivity",
        "kind": "member",
        "memberof": "Framework#onRoomUpdated~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27859,
                27874
            ],
            "filename": "framework.js",
            "lineno": 830,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005779",
                "name": "bot.room",
                "type": "Identifier",
                "funcscope": "Framework#onRoomUpdated",
                "value": "room",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "room",
        "longname": "Framework#onRoomUpdated~bot.room",
        "kind": "member",
        "memberof": "Framework#onRoomUpdated~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27953,
                27981
            ],
            "filename": "framework.js",
            "lineno": 834,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005788",
                "name": "bot.isLocked",
                "type": "MemberExpression",
                "funcscope": "Framework#onRoomUpdated",
                "value": "room.isLocked",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isLocked",
        "longname": "Framework#onRoomUpdated~bot.isLocked",
        "kind": "member",
        "memberof": "Framework#onRoomUpdated~bot",
        "scope": "static"
    },
    {
        "comment": "/**\n         * Room Locked event.\n         *\n         * @event roomLocked\n         * @property {object} bot - Bot Object\n         * @property {object} room - Room Object\n         * @property {string} id - Framework UUID\n         */",
        "meta": {
            "filename": "framework.js",
            "lineno": 836,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Room Locked event.</p>",
        "kind": "event",
        "name": "roomLocked",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Room Object</p>",
                "name": "room"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:roomLocked",
        "scope": "global"
    },
    {
        "comment": "/**\n         * Room Unocked event.\n         *\n         * @event roomUnocked\n         * @property {object} bot - Bot Object\n         * @property {object} room - Room Object\n         * @property {string} id - Framework UUID\n         */",
        "meta": {
            "filename": "framework.js",
            "lineno": 846,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Room Unocked event.</p>",
        "kind": "event",
        "name": "roomUnocked",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Room Object</p>",
                "name": "room"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:roomUnocked",
        "scope": "global"
    },
    {
        "comment": "/**\n       * Room Renamed event.\n       *\n       * @event roomRenamed\n       * @property {object} bot - Bot Object\n       * @property {object} room - Room Object\n       * @property {string} id - Framework UUID\n       */",
        "meta": {
            "filename": "framework.js",
            "lineno": 860,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Room Renamed event.</p>",
        "kind": "event",
        "name": "roomRenamed",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Room Object</p>",
                "name": "room"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:roomRenamed",
        "scope": "global"
    },
    {
        "comment": "/**\n * Process a new Membership event.\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Object} membership - Webex Team Membership Object\n * @param {String} actorId - Webex Team Membership Created event actorId\n * @returns {Promise}\n */",
        "meta": {
            "range": [
                29242,
                31141
            ],
            "filename": "framework.js",
            "lineno": 886,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005833",
                "name": "Framework.prototype.onMembershipCreated",
                "type": "FunctionExpression",
                "paramnames": [
                    "membership",
                    "actorId"
                ]
            },
            "vars": {
                "bot": "Framework#onMembershipCreated~bot",
                "": null,
                "bot.lastActivity": "Framework#onMembershipCreated~bot.lastActivity"
            }
        },
        "description": "<p>Process a new Membership event.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>Webex Team Membership Object</p>",
                "name": "membership"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Webex Team Membership Created event actorId</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise"
                    ]
                }
            }
        ],
        "name": "onMembershipCreated",
        "longname": "Framework#onMembershipCreated",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29323,
                29372
            ],
            "filename": "framework.js",
            "lineno": 887,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005844",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#onMembershipCreated~bot",
        "kind": "member",
        "memberof": "Framework#onMembershipCreated",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29875,
                29900
            ],
            "filename": "framework.js",
            "lineno": 899,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005896",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "membership.roomId"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29912,
                29936
            ],
            "filename": "framework.js",
            "lineno": 900,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005900",
                "name": "personId",
                "type": "MemberExpression",
                "value": "this.person.id"
            }
        },
        "undocumented": true,
        "name": "personId",
        "longname": "personId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30782,
                30824
            ],
            "filename": "framework.js",
            "lineno": 924,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100005978",
                "name": "bot.lastActivity",
                "type": "CallExpression",
                "funcscope": "Framework#onMembershipCreated",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastActivity",
        "longname": "Framework#onMembershipCreated~bot.lastActivity",
        "kind": "member",
        "memberof": "Framework#onMembershipCreated~bot",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Member Enter Room event.\n     *\n     * @event memberEnters\n     * @property {object} bot - Bot Object\n     * @property {object} membership - Membership Object\n     * @property {string} id - Framework UUID\n     */",
        "meta": {
            "filename": "framework.js",
            "lineno": 926,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Member Enter Room event.</p>",
        "kind": "event",
        "name": "memberEnters",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Membership Object</p>",
                "name": "membership"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:memberEnters",
        "scope": "global"
    },
    {
        "comment": "/**\n * Process a updated Membership event.\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Object} membership - Webex Membership Object\n * @returns {Promise}\n */",
        "meta": {
            "range": [
                31320,
                34505
            ],
            "filename": "framework.js",
            "lineno": 949,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006003",
                "name": "Framework.prototype.onMembershipUpdated",
                "type": "FunctionExpression",
                "paramnames": [
                    "membership"
                ]
            },
            "vars": {
                "bot": "Framework#onMembershipUpdated~bot",
                "": null,
                "bot.lastActivity": "Framework#onMembershipUpdated~bot.lastActivity",
                "oldModeratorStatus": "Framework#onMembershipUpdated~oldModeratorStatus",
                "bot.membership": "Framework#onMembershipUpdated~bot.membership",
                "bot.isModerator": "Framework#onMembershipUpdated~bot.isModerator"
            }
        },
        "description": "<p>Process a updated Membership event.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>Webex Membership Object</p>",
                "name": "membership"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise"
                    ]
                }
            }
        ],
        "name": "onMembershipUpdated",
        "longname": "Framework#onMembershipUpdated",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31392,
                31441
            ],
            "filename": "framework.js",
            "lineno": 950,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006013",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#onMembershipUpdated~bot",
        "kind": "member",
        "memberof": "Framework#onMembershipUpdated",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31757,
                31782
            ],
            "filename": "framework.js",
            "lineno": 958,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006042",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "membership.roomId"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31792,
                31816
            ],
            "filename": "framework.js",
            "lineno": 959,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006046",
                "name": "personId",
                "type": "MemberExpression",
                "value": "this.person.id"
            }
        },
        "undocumented": true,
        "name": "personId",
        "longname": "personId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32377,
                32419
            ],
            "filename": "framework.js",
            "lineno": 977,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006104",
                "name": "bot.lastActivity",
                "type": "CallExpression",
                "funcscope": "Framework#onMembershipUpdated",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastActivity",
        "longname": "Framework#onMembershipUpdated~bot.lastActivity",
        "kind": "member",
        "memberof": "Framework#onMembershipUpdated~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32535,
                32571
            ],
            "filename": "framework.js",
            "lineno": 981,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006130",
                "name": "oldModeratorStatus",
                "type": "MemberExpression",
                "value": "bot.isModerator"
            }
        },
        "undocumented": true,
        "name": "oldModeratorStatus",
        "longname": "Framework#onMembershipUpdated~oldModeratorStatus",
        "kind": "member",
        "memberof": "Framework#onMembershipUpdated",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32606,
                32633
            ],
            "filename": "framework.js",
            "lineno": 983,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006136",
                "name": "bot.membership",
                "type": "Identifier",
                "funcscope": "Framework#onMembershipUpdated",
                "value": "membership",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "Framework#onMembershipUpdated~bot.membership",
        "kind": "member",
        "memberof": "Framework#onMembershipUpdated~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32639,
                32679
            ],
            "filename": "framework.js",
            "lineno": 984,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006142",
                "name": "bot.isModerator",
                "type": "MemberExpression",
                "funcscope": "Framework#onMembershipUpdated",
                "value": "membership.isModerator",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isModerator",
        "longname": "Framework#onMembershipUpdated~bot.isModerator",
        "kind": "member",
        "memberof": "Framework#onMembershipUpdated~bot",
        "scope": "static"
    },
    {
        "comment": "/**\n         * Bot Added as Room Moderator.\n         *\n         * @event botAddedAsModerator\n         * @property {object} bot - Bot Object\n         * @property {string} id - Framework UUID\n         */",
        "meta": {
            "filename": "framework.js",
            "lineno": 989,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Bot Added as Room Moderator.</p>",
        "kind": "event",
        "name": "botAddedAsModerator",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:botAddedAsModerator",
        "scope": "global"
    },
    {
        "comment": "/**\n         * Bot Removed as Room Moderator.\n         *\n         * @event botRemovedAsModerator\n         * @property {object} bot - Bot Object\n         * @property {string} id - Framework UUID\n         */",
        "meta": {
            "filename": "framework.js",
            "lineno": 998,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Bot Removed as Room Moderator.</p>",
        "kind": "event",
        "name": "botRemovedAsModerator",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:botRemovedAsModerator",
        "scope": "global"
    },
    {
        "comment": "/**\n       * Member Added as Moderator.\n       *\n       * @event memberAddedAsModerator\n       * @property {object} bot - Bot Object\n       * @property {object} membership - Membership Object\n       * @property {string} id - Framework UUID\n       */",
        "meta": {
            "filename": "framework.js",
            "lineno": 1018,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Member Added as Moderator.</p>",
        "kind": "event",
        "name": "memberAddedAsModerator",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Membership Object</p>",
                "name": "membership"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:memberAddedAsModerator",
        "scope": "global"
    },
    {
        "comment": "/**\n       * Member Removed as Moderator.\n       *\n       * @event memberRemovedAsModerator\n       * @property {object} bot - Bot Object\n       * @property {object} membership - Membership Object\n       * @property {string} id - Framework UUID\n       */",
        "meta": {
            "filename": "framework.js",
            "lineno": 1028,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Member Removed as Moderator.</p>",
        "kind": "event",
        "name": "memberRemovedAsModerator",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Membership Object</p>",
                "name": "membership"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:memberRemovedAsModerator",
        "scope": "global"
    },
    {
        "comment": "/**\n * Process a deleted Membership event.\n *\n * @function\n * @memberof Framework\n * @private\n *\n * @param {Object} membership - Webex Membership Object\n * @param {String} actorId - Webex Team Membership Deleted event actorId\n * @returns {Promise}\n */",
        "meta": {
            "range": [
                34760,
                37179
            ],
            "filename": "framework.js",
            "lineno": 1053,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006210",
                "name": "Framework.prototype.onMembershipDeleted",
                "type": "FunctionExpression",
                "paramnames": [
                    "membership",
                    "actorId"
                ]
            },
            "vars": {
                "bot": "Framework#onMembershipDeleted~bot",
                "": null
            }
        },
        "description": "<p>Process a deleted Membership event.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>Webex Membership Object</p>",
                "name": "membership"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Webex Team Membership Deleted event actorId</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise"
                    ]
                }
            }
        ],
        "name": "onMembershipDeleted",
        "longname": "Framework#onMembershipDeleted",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34841,
                34890
            ],
            "filename": "framework.js",
            "lineno": 1054,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006221",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#onMembershipDeleted~bot",
        "kind": "member",
        "memberof": "Framework#onMembershipDeleted",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n       * Member Exits Room.\n       *\n       * @event memberExits\n       * @property {object} bot - Bot Object\n       * @property {object} membership - Membership Object\n       * @property {string} id - Framework UUID\n       */",
        "meta": {
            "filename": "framework.js",
            "lineno": 1064,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Member Exits Room.</p>",
        "kind": "event",
        "name": "memberExits",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Membership Object</p>",
                "name": "membership"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:memberExits",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35854,
                35896
            ],
            "filename": "framework.js",
            "lineno": 1080,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006303",
                "name": "bot.lastActivity",
                "type": "CallExpression",
                "funcscope": "Framework#onMembershipDeleted",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastActivity",
        "longname": "Framework#onMembershipDeleted~bot.lastActivity",
        "kind": "member",
        "memberof": "Framework#onMembershipDeleted~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                36514,
                36539
            ],
            "filename": "framework.js",
            "lineno": 1099,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006356",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "membership.roomId"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                36551,
                36575
            ],
            "filename": "framework.js",
            "lineno": 1100,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006360",
                "name": "personId",
                "type": "MemberExpression",
                "value": "this.person.id"
            }
        },
        "undocumented": true,
        "name": "personId",
        "longname": "personId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Process a new Message event.\n * \n * This method is called internally by the Framework in response\n * to a message:created event in a space where our bot is a member\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Object} message - Webex Team Message Object\n * @returns {Promise}\n */",
        "meta": {
            "range": [
                37486,
                44771
            ],
            "filename": "framework.js",
            "lineno": 1132,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006419",
                "name": "Framework.prototype.onMessageCreated",
                "type": "FunctionExpression",
                "paramnames": [
                    "message"
                ]
            },
            "vars": {
                "bot": "Framework#onMessageCreated~bot",
                "bot.lastActivity": "Framework#onMessageCreated~bot.lastActivity",
                "": null
            }
        },
        "description": "<p>Process a new Message event.</p>\n<p>This method is called internally by the Framework in response\nto a message:created event in a space where our bot is a member</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>Webex Team Message Object</p>",
                "name": "message"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise"
                    ]
                }
            }
        ],
        "name": "onMessageCreated",
        "longname": "Framework#onMessageCreated",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37552,
                37598
            ],
            "filename": "framework.js",
            "lineno": 1133,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006429",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#onMessageCreated~bot",
        "kind": "member",
        "memberof": "Framework#onMessageCreated",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37639,
                37681
            ],
            "filename": "framework.js",
            "lineno": 1137,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006442",
                "name": "bot.lastActivity",
                "type": "CallExpression",
                "funcscope": "Framework#onMessageCreated",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastActivity",
        "longname": "Framework#onMessageCreated~bot.lastActivity",
        "kind": "member",
        "memberof": "Framework#onMessageCreated~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38151,
                40350
            ],
            "filename": "framework.js",
            "lineno": 1151,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006482",
                "name": "runActions",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "matched",
                    "bot",
                    "trigger",
                    "framework"
                ]
            },
            "vars": {
                "id": "<anonymous>~runActions~id",
                "membershipRules": "<anonymous>~runActions~membershipRules",
                "matched": "<anonymous>~runActions~matched",
                "": null,
                "prefLow": "<anonymous>~runActions~prefLow",
                "prefHigh": "<anonymous>~runActions~prefHigh"
            }
        },
        "undocumented": true,
        "name": "runActions",
        "longname": "<anonymous>~runActions",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38223,
                38240
            ],
            "filename": "framework.js",
            "lineno": 1152,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006490",
                "name": "id",
                "type": "MemberExpression",
                "value": "framework.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "<anonymous>~runActions~id",
        "kind": "constant",
        "memberof": "<anonymous>~runActions",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38258,
                38343
            ],
            "filename": "framework.js",
            "lineno": 1153,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006496",
                "name": "membershipRules",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "membershipRules",
        "longname": "<anonymous>~runActions~membershipRules",
        "kind": "constant",
        "memberof": "<anonymous>~runActions",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38431,
                38485
            ],
            "filename": "framework.js",
            "lineno": 1156,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006514",
                "name": "matched",
                "type": "CallExpression",
                "funcscope": "<anonymous>~runActions",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "matched",
        "longname": "<anonymous>~runActions~matched",
        "kind": "member",
        "memberof": "<anonymous>~runActions",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38503,
                38534
            ],
            "filename": "framework.js",
            "lineno": 1157,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006527",
                "name": "prefLow",
                "type": "MemberExpression",
                "value": "matched[0].preference"
            }
        },
        "undocumented": true,
        "name": "prefLow",
        "longname": "<anonymous>~runActions~prefLow",
        "kind": "member",
        "memberof": "<anonymous>~runActions",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38552,
                38601
            ],
            "filename": "framework.js",
            "lineno": 1158,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006535",
                "name": "prefHigh",
                "type": "MemberExpression",
                "value": "matched[undefined].preference"
            }
        },
        "undocumented": true,
        "name": "prefHigh",
        "longname": "<anonymous>~runActions~prefHigh",
        "kind": "member",
        "memberof": "<anonymous>~runActions",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38658,
                38726
            ],
            "filename": "framework.js",
            "lineno": 1161,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006552",
                "name": "matched",
                "type": "CallExpression",
                "funcscope": "<anonymous>~runActions",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "matched",
        "longname": "<anonymous>~runActions~matched",
        "kind": "member",
        "memberof": "<anonymous>~runActions",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38969,
                39007
            ],
            "filename": "framework.js",
            "lineno": 1169,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006590",
                "name": "trigger.args",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "trigger.args",
        "kind": "member",
        "memberof": "trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39023,
                39050
            ],
            "filename": "framework.js",
            "lineno": 1170,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006602",
                "name": "trigger.phrase",
                "type": "MemberExpression",
                "value": "lex.phrase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "phrase",
        "longname": "trigger.phrase",
        "kind": "member",
        "memberof": "trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39541,
                39582
            ],
            "filename": "framework.js",
            "lineno": 1183,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006660",
                "name": "args",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "<anonymous>~args",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39602,
                39679
            ],
            "filename": "framework.js",
            "lineno": 1184,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006674",
                "name": "indexOfMatch",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "indexOfMatch",
        "longname": "<anonymous>~indexOfMatch",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39749,
                39787
            ],
            "filename": "framework.js",
            "lineno": 1187,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006696",
                "name": "trigger.args",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "trigger.args",
        "kind": "member",
        "memberof": "trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39803,
                39871
            ],
            "filename": "framework.js",
            "lineno": 1188,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006708",
                "name": "trigger.args",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "trigger.args",
        "kind": "member",
        "memberof": "trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39887,
                39914
            ],
            "filename": "framework.js",
            "lineno": 1189,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006725",
                "name": "trigger.phrase",
                "type": "MemberExpression",
                "value": "lex.phrase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "phrase",
        "longname": "trigger.phrase",
        "kind": "member",
        "memberof": "trigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                40497,
                40535
            ],
            "filename": "framework.js",
            "lineno": 1209,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006793",
                "name": "trigger.args",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "trigger.args",
        "kind": "member",
        "memberof": "trigger",
        "scope": "static"
    },
    {
        "comment": "/**\n           * Bot Mentioned.\n           *\n           * @event mentioned\n           * @property {object} bot - Bot Object\n           * @property {object} trigger - Trigger Object\n           * @property {string} id - Framework UUID\n           */",
        "meta": {
            "filename": "framework.js",
            "lineno": 1211,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Bot Mentioned.</p>",
        "kind": "event",
        "name": "mentioned",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Trigger Object</p>",
                "name": "trigger"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:mentioned",
        "scope": "global"
    },
    {
        "comment": "/**\n           * Message Recieved.\n           *\n           * @event message\n           * @property {object} bot - Bot Object\n           * @property {object} trigger - Trigger Object\n           * @property {string} id - Framework UUID\n           */",
        "meta": {
            "filename": "framework.js",
            "lineno": 1225,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Message Recieved.</p>",
        "kind": "event",
        "name": "message",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Trigger Object</p>",
                "name": "trigger"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:message",
        "scope": "global"
    },
    {
        "comment": "/**\n           * File Recieved.\n           *\n           * @event files\n           * @property {object} bot - Bot Object\n           * @property {trigger} trigger - Trigger Object\n           * @property {string} id - Framework UUID\n           */",
        "meta": {
            "filename": "framework.js",
            "lineno": 1240,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>File Recieved.</p>",
        "kind": "event",
        "name": "files",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "trigger"
                    ]
                },
                "description": "<p>Trigger Object</p>",
                "name": "trigger"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            }
        ],
        "longname": "event:files",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                41802,
                42712
            ],
            "filename": "framework.js",
            "lineno": 1255,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006846",
                "name": "matched",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "matched",
        "longname": "<anonymous>~matched",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42451,
                42561
            ],
            "filename": "framework.js",
            "lineno": 1269,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100006935",
                "name": "regexPhrase",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "regexPhrase",
        "longname": "<anonymous>~regexPhrase",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                44184,
                44206
            ],
            "filename": "framework.js",
            "lineno": 1321,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007078",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "message.roomId"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                44216,
                44240
            ],
            "filename": "framework.js",
            "lineno": 1322,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007082",
                "name": "personId",
                "type": "MemberExpression",
                "value": "this.person.id"
            }
        },
        "undocumented": true,
        "name": "personId",
        "longname": "personId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Process a new attachment action event.\n *\n * @function\n * @memberof Framework\n * @private\n * @param {Object} attachmentAction - Webex attachentAction  Object\n * @returns {Promise}\n */",
        "meta": {
            "range": [
                44965,
                46285
            ],
            "filename": "framework.js",
            "lineno": 1350,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007140",
                "name": "Framework.prototype.onAttachmentActions",
                "type": "FunctionExpression",
                "paramnames": [
                    "attachmentAction"
                ]
            },
            "vars": {
                "bot": "Framework#onAttachmentActions~bot",
                "bot.lastActivity": "Framework#onAttachmentActions~bot.lastActivity",
                "": null
            }
        },
        "description": "<p>Process a new attachment action event.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>Webex attachentAction  Object</p>",
                "name": "attachmentAction"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise"
                    ]
                }
            }
        ],
        "name": "onAttachmentActions",
        "longname": "Framework#onAttachmentActions",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                45043,
                45098
            ],
            "filename": "framework.js",
            "lineno": 1351,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007150",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#onAttachmentActions~bot",
        "kind": "member",
        "memberof": "Framework#onAttachmentActions",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                45111,
                45153
            ],
            "filename": "framework.js",
            "lineno": 1352,
            "columnno": 11,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007162",
                "name": "bot.lastActivity",
                "type": "CallExpression",
                "funcscope": "Framework#onAttachmentActions",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastActivity",
        "longname": "Framework#onAttachmentActions~bot.lastActivity",
        "kind": "member",
        "memberof": "Framework#onAttachmentActions~bot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                45674,
                45705
            ],
            "filename": "framework.js",
            "lineno": 1367,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007215",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "attachmentAction.roomId"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                45715,
                45739
            ],
            "filename": "framework.js",
            "lineno": 1368,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007219",
                "name": "personId",
                "type": "MemberExpression",
                "value": "this.person.id"
            }
        },
        "undocumented": true,
        "name": "personId",
        "longname": "personId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Spawns a bot in a Webex Teams Space.\n * \n * @function\n * @memberof Framework\n * @private\n * @param {Object} Membership of bot in room\n * @param {String} [actorId] actorId associated with a membership:created event if available\n * @returns {Promise.<Boolean>}\n * \n */",
        "meta": {
            "range": [
                46562,
                53475
            ],
            "filename": "framework.js",
            "lineno": 1398,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007277",
                "name": "Framework.prototype.spawn",
                "type": "FunctionExpression",
                "paramnames": [
                    "membership",
                    "actorId"
                ]
            },
            "vars": {
                "roomId": "Framework#spawn~roomId",
                "foundBot": "Framework#spawn~foundBot",
                "newBot": "Framework#spawn~newBot",
                "newBot.membership": "Framework#spawn~newBot.membership",
                "newBot.isModerator": "Framework#spawn~newBot.isModerator",
                "memberships": "Framework#spawn~memberships",
                "": null
            }
        },
        "description": "<p>Spawns a bot in a Webex Teams Space.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>of bot in room</p>",
                "name": "Membership"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "description": "<p>actorId associated with a membership:created event if available</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "name": "spawn",
        "longname": "Framework#spawn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46935,
                46961
            ],
            "filename": "framework.js",
            "lineno": 1410,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007324",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "membership.roomId"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "Framework#spawn~roomId",
        "kind": "member",
        "memberof": "Framework#spawn",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                47270,
                47324
            ],
            "filename": "framework.js",
            "lineno": 1419,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007345",
                "name": "foundBot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "foundBot",
        "longname": "Framework#spawn~foundBot",
        "kind": "member",
        "memberof": "Framework#spawn",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                47539,
                47561
            ],
            "filename": "framework.js",
            "lineno": 1426,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007373",
                "name": "newBot",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "newBot",
        "longname": "Framework#spawn~newBot",
        "kind": "member",
        "memberof": "Framework#spawn",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                47613,
                47643
            ],
            "filename": "framework.js",
            "lineno": 1428,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007379",
                "name": "newBot.membership",
                "type": "Identifier",
                "funcscope": "Framework#spawn",
                "value": "membership",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "Framework#spawn~newBot.membership",
        "kind": "member",
        "memberof": "Framework#spawn~newBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                47647,
                47690
            ],
            "filename": "framework.js",
            "lineno": 1429,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007385",
                "name": "newBot.isModerator",
                "type": "MemberExpression",
                "funcscope": "Framework#spawn",
                "value": "membership.isModerator",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isModerator",
        "longname": "Framework#spawn~newBot.isModerator",
        "kind": "member",
        "memberof": "Framework#spawn~newBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                47920,
                47938
            ],
            "filename": "framework.js",
            "lineno": 1436,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007401",
                "name": "memberships",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "memberships",
        "longname": "Framework#spawn~memberships",
        "kind": "member",
        "memberof": "Framework#spawn",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48075,
                48103
            ],
            "filename": "framework.js",
            "lineno": 1442,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007436",
                "name": "room.title",
                "type": "Literal",
                "value": "Default title",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "title",
        "longname": "room.title",
        "kind": "member",
        "memberof": "room",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48120,
                48138
            ],
            "filename": "framework.js",
            "lineno": 1445,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007442",
                "name": "newBot.room",
                "type": "Identifier",
                "funcscope": "Framework#spawn",
                "value": "room",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "room",
        "longname": "Framework#spawn~newBot.room",
        "kind": "member",
        "memberof": "Framework#spawn~newBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48146,
                48188
            ],
            "filename": "framework.js",
            "lineno": 1446,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007448",
                "name": "newBot.isDirect",
                "type": "BinaryExpression",
                "funcscope": "Framework#spawn",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isDirect",
        "longname": "Framework#spawn~newBot.isDirect",
        "kind": "member",
        "memberof": "Framework#spawn~newBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48196,
                48236
            ],
            "filename": "framework.js",
            "lineno": 1447,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007458",
                "name": "newBot.isGroup",
                "type": "BinaryExpression",
                "funcscope": "Framework#spawn",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isGroup",
        "longname": "Framework#spawn~newBot.isGroup",
        "kind": "member",
        "memberof": "Framework#spawn~newBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48244,
                48275
            ],
            "filename": "framework.js",
            "lineno": 1448,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007468",
                "name": "newBot.isLocked",
                "type": "MemberExpression",
                "funcscope": "Framework#spawn",
                "value": "room.isLocked",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isLocked",
        "longname": "Framework#spawn~newBot.isLocked",
        "kind": "member",
        "memberof": "Framework#spawn~newBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48368,
                48388
            ],
            "filename": "framework.js",
            "lineno": 1452,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007492",
                "name": "newBot.isTeam",
                "type": "Literal",
                "funcscope": "Framework#spawn",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isTeam",
        "longname": "Framework#spawn~newBot.isTeam",
        "kind": "member",
        "memberof": "Framework#spawn~newBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48474,
                48496
            ],
            "filename": "framework.js",
            "lineno": 1457,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007503",
                "name": "botId",
                "type": "MemberExpression",
                "value": "this.person.id"
            }
        },
        "undocumented": true,
        "name": "botId",
        "longname": "<anonymous>~botId",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48542,
                48556
            ],
            "filename": "framework.js",
            "lineno": 1458,
            "columnno": 44,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007522",
                "name": "roomId",
                "type": "Identifier",
                "value": "roomId"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48695,
                48746
            ],
            "filename": "framework.js",
            "lineno": 1462,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007536",
                "name": "otherMembers",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "otherMembers",
        "longname": "<anonymous>~otherMembers",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48729,
                48744
            ],
            "filename": "framework.js",
            "lineno": 1462,
            "columnno": 52,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007546",
                "name": "personId",
                "type": "Identifier",
                "value": "botId"
            }
        },
        "undocumented": true,
        "name": "personId",
        "longname": "personId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48831,
                48878
            ],
            "filename": "framework.js",
            "lineno": 1464,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007549",
                "name": "newBot.isDirectTo",
                "type": "MemberExpression",
                "funcscope": "Framework#spawn",
                "value": "otherMembers[0].personEmail",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isDirectTo",
        "longname": "Framework#spawn~newBot.isDirectTo",
        "kind": "member",
        "memberof": "Framework#spawn~newBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                49171,
                49234
            ],
            "filename": "framework.js",
            "lineno": 1470,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007564",
                "name": "this.roomsSpawningNow",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomsSpawningNow",
        "longname": "Framework#spawn#roomsSpawningNow",
        "kind": "member",
        "memberof": "Framework#spawn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                49932,
                49995
            ],
            "filename": "framework.js",
            "lineno": 1494,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007625",
                "name": "this.roomsSpawningNow",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomsSpawningNow",
        "longname": "Framework#spawn#roomsSpawningNow",
        "kind": "member",
        "memberof": "Framework#spawn",
        "scope": "instance"
    },
    {
        "comment": "/**\n       * Bot Spawned.\n       *\n       * @event spawn\n       * @property {object} bot - Bot Object\n       * @property {string} id - Framework UUID\n       * @property {string} addedBy - ID of user who added bot to space if available.\n       * \n       * Bots are typically spawned in one of three ways:\n       * 1) When the framework first starts it can look for up to \n       *    options.maxStartupSpaces spaces that \n       *    our bot is already part of.  When discovered a new bot is spawned.\n       *    No addedBy parameter will be passed in this case and the \n       *    `framework.initialized` variable will be false.\n       * 2) After the framework has started if a user sends\n       *    a message to a bot in an existing space that was not discovered during startup,\n       *    a bot object is spawned for the \"just in time\" discovered space.  Developers\n       *    should never assume that all possible spaces were discovered during \n       *    the framework's startup.\n       *    No addedBy parameter will be passed in this case and the \n       *    framework.initialized variable will be true.\n       * 3) After the framework has started, if a user adds our bot to a new space\n       *    a membership:created event occurs which also spawns a bot.  The \n       *    framework will inlcude the addedBy parameter and framework.initialized\n       *    will be true.   A best practice In these cases, is to include application\n       *    logic for the bot to \"introduce itself\" and/or do something with the\n       *    information about the user who created the bot's membership\n       *    \n       *\n       * @example\n       * // DM the user who added bot to a group space\n       * framework.on('spawn', function(bot, flintId, addedById) {\n       *     if (!addedById) {\n       *      // don't say anything here or your bot's spaces will get\n       *      // spammed every time your server is restarted\n       *      framework.debug(`Framework spawned a bot object in existing\n       *         space: ${bot.room.title}`);\n       *   } else {\n       *     if ((bot.room.type === 'group') && (addedById)) {\n       *       // In this example we imagine our bot is only allowed in 1-1 spaces\n       *       // our bot creates a 1-1 with the addedBy user, and leaves the group space\n       *       bot.dm(addedById, `I see you added me to the the space \"${bot.room.title}\", ` +\n       *         `but I am not allowed in group spaces.  ` +\n       *         `We can talk here if you like.`).then(() => bot.exit());\n       *     } else {\n       *       bot.say(`Thanks for adding me to this space.  Here is what I can do...`);\n       *     }\n       *   }\n       * });\n       *\n       */",
        "meta": {
            "filename": "framework.js",
            "lineno": 1507,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Bot Spawned.</p>",
        "kind": "event",
        "name": "spawn",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>ID of user who added bot to space if available.</p>\n<p>Bots are typically spawned in one of three ways:</p>\n<ol>\n<li>When the framework first starts it can look for up to\noptions.maxStartupSpaces spaces that\nour bot is already part of.  When discovered a new bot is spawned.\nNo addedBy parameter will be passed in this case and the\n<code>framework.initialized</code> variable will be false.</li>\n<li>After the framework has started if a user sends\na message to a bot in an existing space that was not discovered during startup,\na bot object is spawned for the &quot;just in time&quot; discovered space.  Developers\nshould never assume that all possible spaces were discovered during\nthe framework's startup.\nNo addedBy parameter will be passed in this case and the\nframework.initialized variable will be true.</li>\n<li>After the framework has started, if a user adds our bot to a new space\na membership:created event occurs which also spawns a bot.  The\nframework will inlcude the addedBy parameter and framework.initialized\nwill be true.   A best practice In these cases, is to include application\nlogic for the bot to &quot;introduce itself&quot; and/or do something with the\ninformation about the user who created the bot's membership</li>\n</ol>",
                "name": "addedBy"
            }
        ],
        "examples": [
            "// DM the user who added bot to a group space\nframework.on('spawn', function(bot, flintId, addedById) {\n    if (!addedById) {\n     // don't say anything here or your bot's spaces will get\n     // spammed every time your server is restarted\n     framework.debug(`Framework spawned a bot object in existing\n        space: ${bot.room.title}`);\n  } else {\n    if ((bot.room.type === 'group') && (addedById)) {\n      // In this example we imagine our bot is only allowed in 1-1 spaces\n      // our bot creates a 1-1 with the addedBy user, and leaves the group space\n      bot.dm(addedById, `I see you added me to the the space \"${bot.room.title}\", ` +\n        `but I am not allowed in group spaces.  ` +\n        `We can talk here if you like.`).then(() => bot.exit());\n    } else {\n      bot.say(`Thanks for adding me to this space.  Here is what I can do...`);\n    }\n  }\n});"
        ],
        "longname": "event:spawn",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                53296,
                53307
            ],
            "filename": "framework.js",
            "lineno": 1571,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007699",
                "name": "newBot",
                "type": "ObjectExpression",
                "funcscope": "<anonymous>",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "newBot",
        "longname": "<anonymous>~newBot",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                53375,
                53437
            ],
            "filename": "framework.js",
            "lineno": 1573,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007703",
                "name": "this.roomsSpawningNow",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roomsSpawningNow",
        "longname": "Framework#spawn#roomsSpawningNow",
        "kind": "member",
        "memberof": "Framework#spawn",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Despawns a bot in a Webex Teams Space.\n *\n * @function\n * @memberof Framework\n * @private\n * @param {String} Room ID - The ID for a Webex Teams Space.\n * @param {String} actorId - Webex Team Membership Created event actorId\n * @returns {Promise.<Bot>}\n */",
        "meta": {
            "range": [
                53741,
                54662
            ],
            "filename": "framework.js",
            "lineno": 1589,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007720",
                "name": "Framework.prototype.despawn",
                "type": "FunctionExpression",
                "paramnames": [
                    "roomId",
                    "actorId"
                ]
            },
            "vars": {
                "bot": "Framework#despawn~bot",
                "": null
            }
        },
        "description": "<p>Despawns a bot in a Webex Teams Space.</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>ID - The ID for a Webex Teams Space.</p>",
                "name": "Room"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Webex Team Membership Created event actorId</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Bot>"
                    ]
                }
            }
        ],
        "name": "despawn",
        "longname": "Framework#despawn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                53806,
                53844
            ],
            "filename": "framework.js",
            "lineno": 1590,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007731",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#despawn~bot",
        "kind": "member",
        "memberof": "Framework#despawn",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n         * Bot Despawned.\n         *\n         * @event despawn\n         * @property {object} bot - Bot Object\n         * @property {string} id - Framework UUID\n         * @property {string} id - ID of user who removed the bot (if available)\n         */",
        "meta": {
            "filename": "framework.js",
            "lineno": 1596,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Bot Despawned.</p>",
        "kind": "event",
        "name": "despawn",
        "properties": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>Bot Object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>Framework UUID</p>",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>ID of user who removed the bot (if available)</p>",
                "name": "id"
            }
        ],
        "longname": "event:despawn",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54486,
                54533
            ],
            "filename": "framework.js",
            "lineno": 1614,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007781",
                "name": "this.bots",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bots",
        "longname": "Framework#despawn#bots",
        "kind": "member",
        "memberof": "Framework#despawn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54519,
                54531
            ],
            "filename": "framework.js",
            "lineno": 1614,
            "columnno": 41,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007793",
                "name": "id",
                "type": "MemberExpression",
                "value": "bot.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Add action to be performed when bot hears a phrase.\n *\n * @function\n * @memberof Framework\n * @param {Regex|String} phrase - The phrase as either a regex or string. If\n * regex, matches on entire message.If string, matches on first word.\n * @param {Function} action - The function to execute when phrase is matched.\n * Function is executed with 2 variables. Trigger and Bot. The Trigger Object\n * contains information about the person who entered a message that matched the\n * phrase. The Bot Object is an instance of the Bot Class as it relates to the\n * room the message was heard.\n * @param {String} [helpText] - The string of text that describes how this\n * command operates.\n * @param {Number} [preference=0] - Specifies preference of phrase action when\n * overlapping phrases are matched. On multiple matches with same preference,\n * all matched actions are excuted. On multiple matches with difference\n * preference values, only the lower preferenced matched action(s) are executed.\n * @returns {String}\n *\n * @example\n * // using a string to match first word and defines help text\n * framework.hears('/say', function(bot, trigger, id) {\n *   bot.say(trigger.args.slice(1, trigger.arges.length - 1));\n * }, '/say <greeting> - Responds with a greeting');\n *\n * @example\n * // using regex to match across entire message\n * framework.hears(/(^| )beer( |.|$)/i, function(bot, trigger, id) {\n *   bot.say('Enjoy a beer, %s! 🍻', trigger.person.displayName);\n * });\n */",
        "meta": {
            "range": [
                56143,
                57162
            ],
            "filename": "framework.js",
            "lineno": 1655,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007811",
                "name": "Framework.prototype.hears",
                "type": "FunctionExpression",
                "paramnames": [
                    "phrase",
                    "action",
                    "helpText",
                    "preference"
                ]
            },
            "vars": {
                "id": "Framework#hears~id",
                "args": "Framework#hears~args",
                "phrase": "Framework#hears~phrase",
                "action": "Framework#hears~action",
                "helpText": "Framework#hears~helpText",
                "preference": "Framework#hears~preference"
            }
        },
        "description": "<p>Add action to be performed when bot hears a phrase.</p>",
        "kind": "function",
        "memberof": "Framework",
        "params": [
            {
                "type": {
                    "names": [
                        "Regex",
                        "String"
                    ]
                },
                "description": "<p>The phrase as either a regex or string. If\nregex, matches on entire message.If string, matches on first word.</p>",
                "name": "phrase"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "<p>The function to execute when phrase is matched.\nFunction is executed with 2 variables. Trigger and Bot. The Trigger Object\ncontains information about the person who entered a message that matched the\nphrase. The Bot Object is an instance of the Bot Class as it relates to the\nroom the message was heard.</p>",
                "name": "action"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "description": "<p>The string of text that describes how this\ncommand operates.</p>",
                "name": "helpText"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "<p>Specifies preference of phrase action when\noverlapping phrases are matched. On multiple matches with same preference,\nall matched actions are excuted. On multiple matches with difference\npreference values, only the lower preferenced matched action(s) are executed.</p>",
                "name": "preference"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "examples": [
            "// using a string to match first word and defines help text\nframework.hears('/say', function(bot, trigger, id) {\n  bot.say(trigger.args.slice(1, trigger.arges.length - 1));\n}, '/say <greeting> - Responds with a greeting');",
            "// using regex to match across entire message\nframework.hears(/(^| )beer( |.|$)/i, function(bot, trigger, id) {\n  bot.say('Enjoy a beer, %s! 🍻', trigger.person.displayName);\n});"
        ],
        "name": "hears",
        "longname": "Framework#hears",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56227,
                56245
            ],
            "filename": "framework.js",
            "lineno": 1656,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007824",
                "name": "id",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "Framework#hears~id",
        "kind": "member",
        "memberof": "Framework#hears",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56279,
                56323
            ],
            "filename": "framework.js",
            "lineno": 1659,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007831",
                "name": "args",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "Framework#hears~args",
        "kind": "member",
        "memberof": "Framework#hears",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56327,
                56435
            ],
            "filename": "framework.js",
            "lineno": 1660,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007843",
                "name": "phrase",
                "type": "ConditionalExpression",
                "funcscope": "Framework#hears",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "phrase",
        "longname": "Framework#hears~phrase",
        "kind": "member",
        "memberof": "Framework#hears",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56439,
                56518
            ],
            "filename": "framework.js",
            "lineno": 1661,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007870",
                "name": "action",
                "type": "ConditionalExpression",
                "funcscope": "Framework#hears",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "action",
        "longname": "Framework#hears~action",
        "kind": "member",
        "memberof": "Framework#hears",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56522,
                56601
            ],
            "filename": "framework.js",
            "lineno": 1662,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007891",
                "name": "helpText",
                "type": "ConditionalExpression",
                "funcscope": "Framework#hears",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "helpText",
        "longname": "Framework#hears~helpText",
        "kind": "member",
        "memberof": "Framework#hears",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56605,
                56683
            ],
            "filename": "framework.js",
            "lineno": 1663,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007912",
                "name": "preference",
                "type": "ConditionalExpression",
                "funcscope": "Framework#hears",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "preference",
        "longname": "Framework#hears~preference",
        "kind": "member",
        "memberof": "Framework#hears",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56736,
                56762
            ],
            "filename": "framework.js",
            "lineno": 1666,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007941",
                "name": "phrase",
                "type": "CallExpression",
                "funcscope": "Framework#hears",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "phrase",
        "longname": "Framework#hears~phrase",
        "kind": "member",
        "memberof": "Framework#hears",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56787,
                56795
            ],
            "filename": "framework.js",
            "lineno": 1667,
            "columnno": 23,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007956",
                "name": "id",
                "type": "Identifier",
                "value": "id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56797,
                56813
            ],
            "filename": "framework.js",
            "lineno": 1667,
            "columnno": 33,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007958",
                "name": "phrase",
                "type": "Identifier",
                "value": "phrase"
            }
        },
        "undocumented": true,
        "name": "phrase",
        "longname": "phrase",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56815,
                56831
            ],
            "filename": "framework.js",
            "lineno": 1667,
            "columnno": 51,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007960",
                "name": "action",
                "type": "Identifier",
                "value": "action"
            }
        },
        "undocumented": true,
        "name": "action",
        "longname": "action",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56833,
                56853
            ],
            "filename": "framework.js",
            "lineno": 1667,
            "columnno": 69,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007962",
                "name": "helpText",
                "type": "Identifier",
                "value": "helpText"
            }
        },
        "undocumented": true,
        "name": "helpText",
        "longname": "helpText",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56855,
                56879
            ],
            "filename": "framework.js",
            "lineno": 1667,
            "columnno": 91,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007964",
                "name": "preference",
                "type": "Identifier",
                "value": "preference"
            }
        },
        "undocumented": true,
        "name": "preference",
        "longname": "preference",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56975,
                56983
            ],
            "filename": "framework.js",
            "lineno": 1672,
            "columnno": 23,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007983",
                "name": "id",
                "type": "Identifier",
                "value": "id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56985,
                57001
            ],
            "filename": "framework.js",
            "lineno": 1672,
            "columnno": 33,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007985",
                "name": "phrase",
                "type": "Identifier",
                "value": "phrase"
            }
        },
        "undocumented": true,
        "name": "phrase",
        "longname": "phrase",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                57003,
                57019
            ],
            "filename": "framework.js",
            "lineno": 1672,
            "columnno": 51,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007987",
                "name": "action",
                "type": "Identifier",
                "value": "action"
            }
        },
        "undocumented": true,
        "name": "action",
        "longname": "action",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                57021,
                57041
            ],
            "filename": "framework.js",
            "lineno": 1672,
            "columnno": 69,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007989",
                "name": "helpText",
                "type": "Identifier",
                "value": "helpText"
            }
        },
        "undocumented": true,
        "name": "helpText",
        "longname": "helpText",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                57043,
                57067
            ],
            "filename": "framework.js",
            "lineno": 1672,
            "columnno": 91,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100007991",
                "name": "preference",
                "type": "Identifier",
                "value": "preference"
            }
        },
        "undocumented": true,
        "name": "preference",
        "longname": "preference",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Remove a \"framework.hears()\" entry.\n *\n * @function\n * @memberof Framework\n * @param {String} id - The \"hears\" ID.\n * @returns {null}\n *\n * @example\n * // using a string to match first word and defines help text\n * var hearsHello = framework.hears('/framework', function(bot, trigger, id) {\n *   bot.say('Hello %s!', trigger.person.displayName);\n * });\n * framework.clearHears(hearsHello);\n */",
        "meta": {
            "range": [
                57566,
                57691
            ],
            "filename": "framework.js",
            "lineno": 1696,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008001",
                "name": "Framework.prototype.clearHears",
                "type": "FunctionExpression",
                "paramnames": [
                    "hearsId"
                ]
            },
            "vars": {
                "this.lexicon": "Framework#clearHears#lexicon",
                "": null
            }
        },
        "description": "<p>Remove a &quot;framework.hears()&quot; entry.</p>",
        "kind": "function",
        "memberof": "Framework",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>The &quot;hears&quot; ID.</p>",
                "name": "id"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "null"
                    ]
                }
            }
        ],
        "examples": [
            "// using a string to match first word and defines help text\nvar hearsHello = framework.hears('/framework', function(bot, trigger, id) {\n  bot.say('Hello %s!', trigger.person.displayName);\n});\nframework.clearHears(hearsHello);"
        ],
        "name": "clearHears",
        "longname": "Framework#clearHears",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                57622,
                57688
            ],
            "filename": "framework.js",
            "lineno": 1697,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008011",
                "name": "this.lexicon",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lexicon",
        "longname": "Framework#clearHears#lexicon",
        "kind": "member",
        "memberof": "Framework#clearHears",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Display help for registered Framework Commands.\n *\n * @function\n * @param {String} [header=Usage:] - String to use in header before displaying help message.\n * @param {String} [footer=Powered by Webex Node Bot Framework - https://github.com/webex/webex-node-bot-framework] - String to use in footer before displaying help message.\n * @returns {String}\n *\n * @example\n * framework.hears('/help', function(bot, trigger, id) {\n *   bot.say(framework.showHelp());\n * });\n */",
        "meta": {
            "range": [
                58172,
                58628
            ],
            "filename": "framework.js",
            "lineno": 1713,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008030",
                "name": "Framework.prototype.showHelp",
                "type": "FunctionExpression",
                "paramnames": [
                    "header",
                    "footer"
                ]
            },
            "vars": {
                "header": "Framework#showHelp~header",
                "footer": "Framework#showHelp~footer",
                "helpText": "Framework#showHelp~helpText",
                "": null
            }
        },
        "description": "<p>Display help for registered Framework Commands.</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "defaultvalue": "Usage:",
                "description": "<p>String to use in header before displaying help message.</p>",
                "name": "header"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "defaultvalue": "Powered by Webex Node Bot Framework - https://github.com/webex/webex-node-bot-framework",
                "description": "<p>String to use in footer before displaying help message.</p>",
                "name": "footer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "examples": [
            "framework.hears('/help', function(bot, trigger, id) {\n  bot.say(framework.showHelp());\n});"
        ],
        "name": "showHelp",
        "longname": "Framework#showHelp",
        "memberof": "Framework",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58233,
                58268
            ],
            "filename": "framework.js",
            "lineno": 1714,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008041",
                "name": "header",
                "type": "ConditionalExpression",
                "funcscope": "Framework#showHelp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "header",
        "longname": "Framework#showHelp~header",
        "kind": "member",
        "memberof": "Framework#showHelp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58272,
                58388
            ],
            "filename": "framework.js",
            "lineno": 1715,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008048",
                "name": "footer",
                "type": "ConditionalExpression",
                "funcscope": "Framework#showHelp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "footer",
        "longname": "Framework#showHelp~footer",
        "kind": "member",
        "memberof": "Framework#showHelp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58397,
                58410
            ],
            "filename": "framework.js",
            "lineno": 1717,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008055",
                "name": "helpText",
                "type": "Literal",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "helpText",
        "longname": "Framework#showHelp~helpText",
        "kind": "member",
        "memberof": "Framework#showHelp",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58478,
                58526
            ],
            "filename": "framework.js",
            "lineno": 1721,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008075",
                "name": "helpText",
                "type": "BinaryExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "helpText",
        "longname": "<anonymous>~helpText",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58543,
                58605
            ],
            "filename": "framework.js",
            "lineno": 1725,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008087",
                "name": "helpText",
                "type": "BinaryExpression",
                "funcscope": "Framework#showHelp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "helpText",
        "longname": "Framework#showHelp~helpText",
        "kind": "member",
        "memberof": "Framework#showHelp",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Attaches authorizer function.\n *\n * @function\n * @memberof Framework\n * @param {Function} Action - The function to execute when phrase is matched\n * to authenticate a user.  The function is passed the bot, trigger, and id and\n * expects a return value of true or false.\n * @returns {Boolean}\n *\n * @example\n * function myAuthorizer(bot, trigger, id) {\n *   if(trigger.personEmail === 'john@test.com') {\n *     return true;\n *   }\n *   else if(trigger.personDomain === 'test.com') {\n *     return true;\n *   }\n *   else {\n *     return false;\n *   }\n * }\n * framework.setAuthorizer(myAuthorizer);\n */",
        "meta": {
            "range": [
                59238,
                59438
            ],
            "filename": "framework.js",
            "lineno": 1754,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008103",
                "name": "Framework.prototype.setAuthorizer",
                "type": "FunctionExpression",
                "paramnames": [
                    "fn"
                ]
            },
            "vars": {
                "this.authorize": "Framework#setAuthorizer#authorize"
            }
        },
        "description": "<p>Attaches authorizer function.</p>",
        "kind": "function",
        "memberof": "Framework",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "<p>The function to execute when phrase is matched\nto authenticate a user.  The function is passed the bot, trigger, and id and\nexpects a return value of true or false.</p>",
                "name": "Action"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "examples": [
            "function myAuthorizer(bot, trigger, id) {\n  if(trigger.personEmail === 'john@test.com') {\n    return true;\n  }\n  else if(trigger.personDomain === 'test.com') {\n    return true;\n  }\n  else {\n    return false;\n  }\n}\nframework.setAuthorizer(myAuthorizer);"
        ],
        "name": "setAuthorizer",
        "longname": "Framework#setAuthorizer",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                59328,
                59358
            ],
            "filename": "framework.js",
            "lineno": 1756,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008119",
                "name": "this.authorize",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "authorize",
        "longname": "Framework#setAuthorizer#authorize",
        "kind": "member",
        "memberof": "Framework#setAuthorizer",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                59392,
                59413
            ],
            "filename": "framework.js",
            "lineno": 1759,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008132",
                "name": "this.authorize",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "authorize",
        "longname": "Framework#setAuthorizer#authorize",
        "kind": "member",
        "memberof": "Framework#setAuthorizer",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                59440,
                59476
            ],
            "filename": "framework.js",
            "lineno": 1763,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008140",
                "name": "Framework.prototype.authorize",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "authorize",
        "longname": "Framework#authorize",
        "kind": "member",
        "memberof": "Framework",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Removes authorizer function.\n *\n * @function\n * @memberof Framework\n * @returns {null}\n *\n * @example\n * framework.clearAuthorizer();\n */",
        "meta": {
            "range": [
                59624,
                59702
            ],
            "filename": "framework.js",
            "lineno": 1775,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008148",
                "name": "Framework.prototype.clearAuthorizer",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.authorize": "Framework#clearAuthorizer#authorize"
            }
        },
        "description": "<p>Removes authorizer function.</p>",
        "kind": "function",
        "memberof": "Framework",
        "returns": [
            {
                "type": {
                    "names": [
                        "null"
                    ]
                }
            }
        ],
        "examples": [
            "framework.clearAuthorizer();"
        ],
        "name": "clearAuthorizer",
        "longname": "Framework#clearAuthorizer",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                59678,
                59699
            ],
            "filename": "framework.js",
            "lineno": 1776,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008157",
                "name": "this.authorize",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "authorize",
        "longname": "Framework#clearAuthorizer#authorize",
        "kind": "member",
        "memberof": "Framework#clearAuthorizer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Defines storage backend.\n *\n * @function\n * @memberof Framework\n * @param {Function} Driver - The storage driver.\n * @returns {Promise.<Boolean>} - True if driver loaded succesfully\n *\n * @example\n * // define memory store (default if not specified)\n * framework.storageDriver(new MemStore());\n */",
        "meta": {
            "range": [
                60010,
                62863
            ],
            "filename": "framework.js",
            "lineno": 1791,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008163",
                "name": "Framework.prototype.storageDriver",
                "type": "FunctionExpression",
                "paramnames": [
                    "driver"
                ]
            },
            "vars": {
                "this.storageDriverName": "Framework#storageDriver#storageDriverName",
                "Bot.prototype.initStorage": "Bot#initStorage",
                "": null,
                "Bot.prototype.store": "Bot#store",
                "Bot.prototype.recall": "Bot#recall",
                "Bot.prototype.forget": "Bot#forget",
                "Framework.prototype.forgetByRoomId": "Framework#forgetByRoomId",
                "Bot.prototype.writeMetric": "Bot#writeMetric",
                "this.storageActive": "Framework#storageDriver#storageActive"
            }
        },
        "description": "<p>Defines storage backend.</p>",
        "kind": "function",
        "memberof": "Framework",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "<p>The storage driver.</p>",
                "name": "Driver"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                },
                "description": "<ul>\n<li>True if driver loaded succesfully</li>\n</ul>"
            }
        ],
        "examples": [
            "// define memory store (default if not specified)\nframework.storageDriver(new MemStore());"
        ],
        "name": "storageDriver",
        "longname": "Framework#storageDriver",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60167,
                60208
            ],
            "filename": "framework.js",
            "lineno": 1795,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008181",
                "name": "this.storageDriverName",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "storageDriverName",
        "longname": "Framework#storageDriver#storageDriverName",
        "kind": "member",
        "memberof": "Framework#storageDriver",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60225,
                60252
            ],
            "filename": "framework.js",
            "lineno": 1797,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008191",
                "name": "this.storageDriverName",
                "type": "Literal",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "storageDriverName",
        "longname": "Framework#storageDriver#storageDriverName",
        "kind": "member",
        "memberof": "Framework#storageDriver",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60363,
                60747
            ],
            "filename": "framework.js",
            "lineno": 1802,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008205",
                "name": "Bot.prototype.initStorage",
                "type": "FunctionExpression",
                "paramnames": [
                    "framework"
                ]
            },
            "vars": {
                "id": "Bot#initStorage~id"
            }
        },
        "undocumented": true,
        "name": "initStorage",
        "longname": "Bot#initStorage",
        "kind": "function",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60508,
                60525
            ],
            "filename": "framework.js",
            "lineno": 1804,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008232",
                "name": "id",
                "type": "MemberExpression",
                "value": "this.room.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "Bot#initStorage~id",
        "kind": "member",
        "memberof": "Bot#initStorage",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60942,
                61158
            ],
            "filename": "framework.js",
            "lineno": 1817,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008278",
                "name": "Bot.prototype.store",
                "type": "FunctionExpression",
                "paramnames": [
                    "key",
                    "value"
                ]
            },
            "vars": {
                "id": "Bot#store~id"
            }
        },
        "undocumented": true,
        "name": "store",
        "longname": "Bot#store",
        "kind": "function",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                61025,
                61042
            ],
            "filename": "framework.js",
            "lineno": 1819,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008294",
                "name": "id",
                "type": "MemberExpression",
                "value": "this.room.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "Bot#store~id",
        "kind": "member",
        "memberof": "Bot#store",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                61348,
                61552
            ],
            "filename": "framework.js",
            "lineno": 1831,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008335",
                "name": "Bot.prototype.recall",
                "type": "FunctionExpression",
                "paramnames": [
                    "key"
                ]
            },
            "vars": {
                "id": "Bot#recall~id"
            }
        },
        "undocumented": true,
        "name": "recall",
        "longname": "Bot#recall",
        "kind": "function",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                61425,
                61442
            ],
            "filename": "framework.js",
            "lineno": 1833,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008350",
                "name": "id",
                "type": "MemberExpression",
                "value": "this.room.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "Bot#recall~id",
        "kind": "member",
        "memberof": "Bot#recall",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                61743,
                61947
            ],
            "filename": "framework.js",
            "lineno": 1845,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008390",
                "name": "Bot.prototype.forget",
                "type": "FunctionExpression",
                "paramnames": [
                    "key"
                ]
            },
            "vars": {
                "id": "Bot#forget~id"
            }
        },
        "undocumented": true,
        "name": "forget",
        "longname": "Bot#forget",
        "kind": "function",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                61820,
                61837
            ],
            "filename": "framework.js",
            "lineno": 1847,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008405",
                "name": "id",
                "type": "MemberExpression",
                "value": "this.room.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "Bot#forget~id",
        "kind": "member",
        "memberof": "Bot#forget",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                61954,
                62185
            ],
            "filename": "framework.js",
            "lineno": 1854,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008428",
                "name": "Framework.prototype.forgetByRoomId",
                "type": "FunctionExpression",
                "paramnames": [
                    "roomId"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "forgetByRoomId",
        "longname": "Framework#forgetByRoomId",
        "kind": "function",
        "memberof": "Framework",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62399,
                62528
            ],
            "filename": "framework.js",
            "lineno": 1867,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008473",
                "name": "Bot.prototype.writeMetric",
                "type": "FunctionExpression",
                "paramnames": [
                    "appData",
                    "actor"
                ]
            }
        },
        "undocumented": true,
        "name": "writeMetric",
        "longname": "Bot#writeMetric",
        "kind": "function",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62592,
                62792
            ],
            "filename": "framework.js",
            "lineno": 1872,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008496",
                "name": "Bot.prototype.writeMetric",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "writeMetric",
        "longname": "Bot#writeMetric",
        "kind": "function",
        "memberof": "Bot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62834,
                62859
            ],
            "filename": "framework.js",
            "lineno": 1879,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008525",
                "name": "this.storageActive",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "storageActive",
        "longname": "Framework#storageDriver#storageActive",
        "kind": "member",
        "memberof": "Framework#storageDriver",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Remove objects from memory store associated to a roomId.\n *\n * @function\n * @private\n * @param {String} roomId\n * @returns {Boolean}\n */",
        "meta": {
            "range": [
                63010,
                63051
            ],
            "filename": "framework.js",
            "lineno": 1890,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008531",
                "name": "Framework.prototype.forgetByRoomId",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "<p>Remove objects from memory store associated to a roomId.</p>",
        "kind": "function",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "roomId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "name": "forgetByRoomId",
        "longname": "Framework#forgetByRoomId",
        "memberof": "Framework",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Load a Plugin from a external file.\n * @function\n * @memberof Framework\n * @param {String} path - Load a plugin at given path.\n * @returns {Boolean}\n *\n * @example\n * framework.use('events.js');\n *\n * @example\n * // events.js\n * module.exports = function(framework) {\n *   framework.on('spawn', function(bot) {\n *     console.log('new bot spawned in room: %s', bot.myroom.title);\n *   });\n *   framework.on('despawn', function(bot) {\n *     console.log('bot despawned in room: %s', bot.myroom.title);\n *   });\n *   framework.on('messageCreated', function(message, bot) {\n *     console.log('\"%s\" said \"%s\" in room \"%s\"', message.personEmail, message.text, bot.myroom.title);\n *   });\n * };\n */",
        "meta": {
            "range": [
                63755,
                64108
            ],
            "filename": "framework.js",
            "lineno": 1916,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008539",
                "name": "Framework.prototype.use",
                "type": "FunctionExpression",
                "paramnames": [
                    "pluginPath"
                ]
            }
        },
        "description": "<p>Load a Plugin from a external file.</p>",
        "kind": "function",
        "memberof": "Framework",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Load a plugin at given path.</p>",
                "name": "path"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "examples": [
            "framework.use('events.js');",
            "// events.js\nmodule.exports = function(framework) {\n  framework.on('spawn', function(bot) {\n    console.log('new bot spawned in room: %s', bot.myroom.title);\n  });\n  framework.on('despawn', function(bot) {\n    console.log('bot despawned in room: %s', bot.myroom.title);\n  });\n  framework.on('messageCreated', function(message, bot) {\n    console.log('\"%s\" said \"%s\" in room \"%s\"', message.personEmail, message.text, bot.myroom.title);\n  });\n};"
        ],
        "name": "use",
        "longname": "Framework#use",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Private function to check for memembership rules in config\n */",
        "meta": {
            "range": [
                64181,
                68984
            ],
            "filename": "framework.js",
            "lineno": 1934,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008587",
                "name": "Framework.prototype.checkMembershipRules",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "options": "Framework#checkMembershipRules~options",
                "this.restrictedDomains": "Framework#checkMembershipRules#restrictedDomains",
                "i": "Framework#checkMembershipRules~i",
                "domain": "Framework#checkMembershipRules~domain",
                "this.restrictedDomains[undefined]": "Framework#checkMembershipRules#restrictedDomains[undefined]",
                "this.guideEmails": "Framework#checkMembershipRules#guideEmails",
                "this.guideEmails[undefined]": "Framework#checkMembershipRules#guideEmails[undefined]",
                "this.membershipRules": "Framework#checkMembershipRules#membershipRules",
                "": null,
                "this.membershipRulesDisallowedResponse": "Framework#checkMembershipRules#membershipRulesDisallowedResponse",
                "this.membershipRulesStateMessageResponse": "Framework#checkMembershipRules#membershipRulesStateMessageResponse",
                "this.membershipRulesAllowedResponse": "Framework#checkMembershipRules#membershipRulesAllowedResponse",
                "msg": "Framework#checkMembershipRules~msg"
            }
        },
        "description": "<p>Private function to check for memembership rules in config</p>",
        "name": "checkMembershipRules",
        "longname": "Framework#checkMembershipRules",
        "kind": "function",
        "memberof": "Framework",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64246,
                64268
            ],
            "filename": "framework.js",
            "lineno": 1935,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008596",
                "name": "options",
                "type": "MemberExpression",
                "value": "this.options"
            }
        },
        "undocumented": true,
        "name": "options",
        "longname": "Framework#checkMembershipRules~options",
        "kind": "constant",
        "memberof": "Framework#checkMembershipRules",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64272,
                64299
            ],
            "filename": "framework.js",
            "lineno": 1936,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008602",
                "name": "this.restrictedDomains",
                "type": "Literal",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "restrictedDomains",
        "longname": "Framework#checkMembershipRules#restrictedDomains",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64491,
                64563
            ],
            "filename": "framework.js",
            "lineno": 1941,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008624",
                "name": "this.restrictedDomains",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "restrictedDomains",
        "longname": "Framework#checkMembershipRules#restrictedDomains",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64629,
                64634
            ],
            "filename": "framework.js",
            "lineno": 1943,
            "columnno": 19,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008644",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Framework#checkMembershipRules~i",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64694,
                64728
            ],
            "filename": "framework.js",
            "lineno": 1944,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008658",
                "name": "domain",
                "type": "MemberExpression",
                "value": "this.restrictedDomains[undefined]"
            }
        },
        "undocumented": true,
        "name": "domain",
        "longname": "Framework#checkMembershipRules~domain",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64968,
                65013
            ],
            "filename": "framework.js",
            "lineno": 1948,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008681",
                "name": "this.restrictedDomains[undefined]",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "restrictedDomains[undefined]",
        "longname": "Framework#checkMembershipRules#restrictedDomains[undefined]",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                65162,
                65215
            ],
            "filename": "framework.js",
            "lineno": 1954,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008703",
                "name": "this.guideEmails",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "guideEmails",
        "longname": "Framework#checkMembershipRules#guideEmails",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                65275,
                65280
            ],
            "filename": "framework.js",
            "lineno": 1956,
            "columnno": 19,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008723",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Framework#checkMembershipRules~i",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                65501,
                65553
            ],
            "filename": "framework.js",
            "lineno": 1960,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008760",
                "name": "this.guideEmails[undefined]",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "guideEmails[undefined]",
        "longname": "Framework#checkMembershipRules#guideEmails[undefined]",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                65818,
                65876
            ],
            "filename": "framework.js",
            "lineno": 1968,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008781",
                "name": "this.membershipRules",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membershipRules",
        "longname": "Framework#checkMembershipRules#membershipRules",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66010,
                66557
            ],
            "filename": "framework.js",
            "lineno": 1972,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008800",
                "name": "this.guideEmails",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "guideEmails",
        "longname": "Framework#checkMembershipRules#guideEmails",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66116,
                66134
            ],
            "filename": "framework.js",
            "lineno": 1973,
            "columnno": 52,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008821",
                "name": "personEmail",
                "type": "Identifier",
                "value": "email"
            }
        },
        "undocumented": true,
        "name": "personEmail",
        "longname": "personEmail",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66636,
                66718
            ],
            "filename": "framework.js",
            "lineno": 1985,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008858",
                "name": "this.membershipRulesDisallowedResponse",
                "type": "MemberExpression",
                "value": "options.membershipRulesDisallowedResponse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membershipRulesDisallowedResponse",
        "longname": "Framework#checkMembershipRules#membershipRulesDisallowedResponse",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66743,
                66885
            ],
            "filename": "framework.js",
            "lineno": 1987,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008867",
                "name": "this.membershipRulesDisallowedResponse",
                "type": "Literal",
                "value": "Sorry, my use is not allowed for all the members in this space. Will ignore any new messages to me.",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membershipRulesDisallowedResponse",
        "longname": "Framework#checkMembershipRules#membershipRulesDisallowedResponse",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66965,
                67051
            ],
            "filename": "framework.js",
            "lineno": 1990,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008878",
                "name": "this.membershipRulesStateMessageResponse",
                "type": "MemberExpression",
                "value": "options.membershipRulesStateMessageResponse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membershipRulesStateMessageResponse",
        "longname": "Framework#checkMembershipRules#membershipRulesStateMessageResponse",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                67076,
                67216
            ],
            "filename": "framework.js",
            "lineno": 1992,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008887",
                "name": "this.membershipRulesStateMessageResponse",
                "type": "Literal",
                "value": "Sorry, because my use is not allowed for all the members in this space I am ignoring any input.",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membershipRulesStateMessageResponse",
        "longname": "Framework#checkMembershipRules#membershipRulesStateMessageResponse",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                67293,
                67369
            ],
            "filename": "framework.js",
            "lineno": 1995,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008898",
                "name": "this.membershipRulesAllowedResponse",
                "type": "MemberExpression",
                "value": "options.membershipRulesAllowedResponse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membershipRulesAllowedResponse",
        "longname": "Framework#checkMembershipRules#membershipRulesAllowedResponse",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                67394,
                67534
            ],
            "filename": "framework.js",
            "lineno": 1997,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008907",
                "name": "this.membershipRulesAllowedResponse",
                "type": "Literal",
                "value": "I am now allowed to interact with all the members in this space and will no longer ignore any input.",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "membershipRulesAllowedResponse",
        "longname": "Framework#checkMembershipRules#membershipRulesAllowedResponse",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                67572,
                67599
            ],
            "filename": "framework.js",
            "lineno": 2000,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008914",
                "name": "msg",
                "type": "TemplateLiteral",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Framework#checkMembershipRules~msg",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                67657,
                67884
            ],
            "filename": "framework.js",
            "lineno": 2002,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008935",
                "name": "msg",
                "type": "BinaryExpression",
                "funcscope": "Framework#checkMembershipRules",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Framework#checkMembershipRules~msg",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                67948,
                68173
            ],
            "filename": "framework.js",
            "lineno": 2005,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100008958",
                "name": "msg",
                "type": "BinaryExpression",
                "funcscope": "Framework#checkMembershipRules",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "Framework#checkMembershipRules~msg",
        "kind": "member",
        "memberof": "Framework#checkMembershipRules",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Private emit functions that check the membership rules\n * before emitting and event\n */",
        "meta": {
            "range": [
                69082,
                69641
            ],
            "filename": "framework.js",
            "lineno": 2032,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009013",
                "name": "Framework.prototype.myEmit",
                "type": "FunctionExpression",
                "paramnames": [
                    "event",
                    "args"
                ]
            },
            "vars": {
                "event": "Framework#myEmit~event"
            }
        },
        "description": "<p>Private emit functions that check the membership rules\nbefore emitting and event</p>",
        "name": "myEmit",
        "longname": "Framework#myEmit",
        "kind": "function",
        "memberof": "Framework",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                69426,
                69443
            ],
            "filename": "framework.js",
            "lineno": 2040,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009045",
                "name": "event",
                "type": "Literal",
                "funcscope": "Framework#myEmit",
                "value": "UNKNOWN",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "Framework#myEmit~event",
        "kind": "member",
        "memberof": "Framework#myEmit",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                69644,
                70248
            ],
            "filename": "framework.js",
            "lineno": 2047,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009065",
                "name": "Framework.prototype.myEmitWithActor",
                "type": "FunctionExpression",
                "paramnames": [
                    "event",
                    "bot",
                    "actorId"
                ]
            },
            "vars": {
                "event": "Framework#myEmitWithActor~event"
            }
        },
        "undocumented": true,
        "name": "myEmitWithActor",
        "longname": "Framework#myEmitWithActor",
        "kind": "function",
        "memberof": "Framework",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70024,
                70041
            ],
            "filename": "framework.js",
            "lineno": 2057,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009113",
                "name": "event",
                "type": "Literal",
                "funcscope": "Framework#myEmitWithActor",
                "value": "UNKNOWN",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "Framework#myEmitWithActor~event",
        "kind": "member",
        "memberof": "Framework#myEmitWithActor",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70251,
                70881
            ],
            "filename": "framework.js",
            "lineno": 2064,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009133",
                "name": "Framework.prototype.emitBoth",
                "type": "FunctionExpression",
                "paramnames": [
                    "event",
                    "bot",
                    "args"
                ]
            },
            "vars": {
                "event": "Framework#emitBoth~event"
            }
        },
        "undocumented": true,
        "name": "emitBoth",
        "longname": "Framework#emitBoth",
        "kind": "function",
        "memberof": "Framework",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70664,
                70681
            ],
            "filename": "framework.js",
            "lineno": 2075,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009196",
                "name": "event",
                "type": "Literal",
                "funcscope": "Framework#emitBoth",
                "value": "UNKNOWN",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "Framework#emitBoth~event",
        "kind": "member",
        "memberof": "Framework#emitBoth",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Helper function to determine if a bot object already exists in a space\n *\n * @function\n * @memberof Framework\n * @private\n * @param {String} roomId - Id of room to lookup\n * @returns {object} - found bot object or null\n */",
        "meta": {
            "range": [
                71114,
                71374
            ],
            "filename": "framework.js",
            "lineno": 2091,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009216",
                "name": "Framework.prototype.findBotObjectInRoom",
                "type": "FunctionExpression",
                "paramnames": [
                    "roomId"
                ]
            },
            "vars": {
                "bot": "Framework#findBotObjectInRoom~bot",
                "": null
            }
        },
        "description": "<p>Helper function to determine if a bot object already exists in a space</p>",
        "kind": "function",
        "memberof": "Framework",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Id of room to lookup</p>",
                "name": "roomId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<ul>\n<li>found bot object or null</li>\n</ul>"
            }
        ],
        "name": "findBotObjectInRoom",
        "longname": "Framework#findBotObjectInRoom",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                71182,
                71236
            ],
            "filename": "framework.js",
            "lineno": 2092,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009226",
                "name": "bot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#findBotObjectInRoom~bot",
        "kind": "member",
        "memberof": "Framework#findBotObjectInRoom",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                71289,
                71351
            ],
            "filename": "framework.js",
            "lineno": 2094,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009253",
                "name": "bot",
                "type": "CallExpression",
                "funcscope": "Framework#findBotObjectInRoom",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bot",
        "longname": "Framework#findBotObjectInRoom~bot",
        "kind": "member",
        "memberof": "Framework#findBotObjectInRoom",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                71379,
                71405
            ],
            "filename": "framework.js",
            "lineno": 2101,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009274",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Framework",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                71408,
                72657
            ],
            "filename": "framework.js",
            "lineno": 2103,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009279",
                "name": "cleanupListeners",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "cleanupListeners",
        "longname": "cleanupListeners",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                71722,
                71912
            ],
            "filename": "framework.js",
            "lineno": 2112,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009314",
                "name": "webhooksToRemove",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "webhooksToRemove",
        "longname": "<anonymous>~webhooksToRemove",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                72659,
                73866
            ],
            "filename": "framework.js",
            "lineno": 2142,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009455",
                "name": "optionsIncludeNonSupported",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "options"
                ]
            }
        },
        "undocumented": true,
        "name": "optionsIncludeNonSupported",
        "longname": "optionsIncludeNonSupported",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                26
            ],
            "filename": "logs.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009536",
                "name": "util",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "util",
        "longname": "util",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32,
                53
            ],
            "filename": "logs.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009542",
                "name": "_",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_",
        "longname": "_",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                2691
            ],
            "filename": "logs.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009548",
                "name": "module.exports",
                "type": "FunctionExpression",
                "paramnames": [
                    "framework"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                149,
                225
            ],
            "filename": "logs.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009565",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                305,
                367
            ],
            "filename": "logs.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009593",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                446,
                508
            ],
            "filename": "logs.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009619",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                588,
                647
            ],
            "filename": "logs.js",
            "lineno": 22,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009646",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                729,
                785
            ],
            "filename": "logs.js",
            "lineno": 27,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009675",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                876,
                995
            ],
            "filename": "logs.js",
            "lineno": 32,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009705",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1133,
                1237
            ],
            "filename": "logs.js",
            "lineno": 38,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009760",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1332,
                1390
            ],
            "filename": "logs.js",
            "lineno": 44,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009799",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1477,
                1537
            ],
            "filename": "logs.js",
            "lineno": 49,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009828",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1631,
                1714
            ],
            "filename": "logs.js",
            "lineno": 54,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009857",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1810,
                1895
            ],
            "filename": "logs.js",
            "lineno": 59,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009889",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2000,
                2086
            ],
            "filename": "logs.js",
            "lineno": 64,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009922",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2193,
                2281
            ],
            "filename": "logs.js",
            "lineno": 69,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009955",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2385,
                2470
            ],
            "filename": "logs.js",
            "lineno": 74,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100009988",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2573,
                2657
            ],
            "filename": "logs.js",
            "lineno": 79,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010021",
                "name": "msg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                43
            ],
            "filename": "membership-rules.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010047",
                "name": "when",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "when",
        "longname": "when",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                51,
                72
            ],
            "filename": "membership-rules.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010053",
                "name": "_",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_",
        "longname": "_",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                78,
                112
            ],
            "filename": "membership-rules.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010059",
                "name": "validator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "validator",
        "longname": "validator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                115,
                12874
            ],
            "filename": "membership-rules.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010064",
                "name": "MembershipRules",
                "type": "ClassDeclaration",
                "paramnames": [
                    "framework"
                ]
            }
        },
        "undocumented": true,
        "name": "MembershipRules",
        "longname": "MembershipRules",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                141,
                201
            ],
            "filename": "membership-rules.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010067",
                "name": "MembershipRules",
                "type": "MethodDefinition",
                "paramnames": [
                    "framework"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "MembershipRules",
        "longname": "MembershipRules",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                170,
                196
            ],
            "filename": "membership-rules.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010073",
                "name": "this.framework",
                "type": "Identifier",
                "value": "framework",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "framework",
        "longname": "MembershipRules#framework",
        "kind": "member",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Check if membership rules are met before emitting event\n   *\n   * @function\n   * @param {string} event event to send\n   * @param {array} args arglist to emit\n   * @returns {void} \n   */",
        "meta": {
            "range": [
                402,
                782
            ],
            "filename": "membership-rules.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010078",
                "name": "MembershipRules#emit",
                "type": "MethodDefinition",
                "paramnames": [
                    "event",
                    "args"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check if membership rules are met before emitting event</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>event to send</p>",
                "name": "event"
            },
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "<p>arglist to emit</p>",
                "name": "args",
                "variable": true
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "void"
                    ]
                }
            }
        ],
        "name": "emit",
        "longname": "MembershipRules#emit",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Check if membership rules are met before emitting event with actor\n   *\n   * @function\n   * @param {string} event event to send\n   * @param {object} bot object\n   * @param {string} actorId id of user who caused event\n   * @returns {void} \n   */",
        "meta": {
            "range": [
                1042,
                1807
            ],
            "filename": "membership-rules.js",
            "lineno": 39,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010114",
                "name": "MembershipRules#emitWithActor",
                "type": "MethodDefinition",
                "paramnames": [
                    "event",
                    "bot",
                    "actorId"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check if membership rules are met before emitting event with actor</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>event to send</p>",
                "name": "event"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>id of user who caused event</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "void"
                    ]
                }
            }
        ],
        "name": "emitWithActor",
        "longname": "MembershipRules#emitWithActor",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Check if membership rules are met before emitting event with actor\n   *\n   * @function\n   * @param {string} event event to send\n   * @param {object} bot object\n   * @param {array} args arglist to emit\n   * @returns {void} \n   */",
        "meta": {
            "range": [
                2051,
                2851
            ],
            "filename": "membership-rules.js",
            "lineno": 66,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010200",
                "name": "MembershipRules#emitBoth",
                "type": "MethodDefinition",
                "paramnames": [
                    "event",
                    "bot",
                    "args"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check if membership rules are met before emitting event with actor</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>event to send</p>",
                "name": "event"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "<p>arglist to emit</p>",
                "name": "args",
                "variable": true
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "void"
                    ]
                }
            }
        ],
        "name": "emitBoth",
        "longname": "MembershipRules#emitBoth",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Check if a newly spawned bot meets our membership rules\n   *\n   * @function\n   * @param {object} bot object\n   * @param {Object} membership of bot in room\n   * @param {String} [actorId] actorId associated with a membership:created event if available\n   * @returns {Promise.<Boolean>}\n   */",
        "meta": {
            "range": [
                3156,
                4529
            ],
            "filename": "membership-rules.js",
            "lineno": 94,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010301",
                "name": "MembershipRules#onSpawn",
                "type": "MethodDefinition",
                "paramnames": [
                    "bot",
                    "memberships",
                    "actorId"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check if a newly spawned bot meets our membership rules</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>of bot in room</p>",
                "name": "membership"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "description": "<p>actorId associated with a membership:created event if available</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "name": "onSpawn",
        "longname": "MembershipRules#onSpawn",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3201,
                3208
            ],
            "filename": "membership-rules.js",
            "lineno": 95,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010309",
                "name": "members"
            }
        },
        "undocumented": true,
        "name": "members",
        "longname": "<anonymous>~members",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3309,
                3336
            ],
            "filename": "membership-rules.js",
            "lineno": 98,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010330",
                "name": "members",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "memberships.items",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "members",
        "longname": "<anonymous>~members",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3482,
                3653
            ],
            "filename": "membership-rules.js",
            "lineno": 102,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010350",
                "name": "membershipRuleChange",
                "type": "ObjectExpression",
                "value": "{\"membershipRule\":\"restrictedToEmailDomains\",\"membershipAction\":\"created\",\"membership\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "membershipRuleChange",
        "longname": "<anonymous>~membershipRuleChange",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3519,
                3561
            ],
            "filename": "membership-rules.js",
            "lineno": 103,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010353",
                "name": "membershipRule",
                "type": "Literal",
                "value": "restrictedToEmailDomains"
            }
        },
        "undocumented": true,
        "name": "membershipRule",
        "longname": "<anonymous>~membershipRuleChange.membershipRule",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3575,
                3602
            ],
            "filename": "membership-rules.js",
            "lineno": 104,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010355",
                "name": "membershipAction",
                "type": "Literal",
                "value": "created"
            }
        },
        "undocumented": true,
        "name": "membershipAction",
        "longname": "<anonymous>~membershipRuleChange.membershipAction",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3616,
                3641
            ],
            "filename": "membership-rules.js",
            "lineno": 105,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010357",
                "name": "membership",
                "type": "Identifier",
                "value": "invalidMember"
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "<anonymous>~membershipRuleChange.membership",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3910,
                4110
            ],
            "filename": "membership-rules.js",
            "lineno": 113,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010387",
                "name": "membershipRuleChange",
                "type": "ObjectExpression",
                "value": "{\"membershipRule\":\"guideEmails\",\"membershipAction\":\"created\",\"membership\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "membershipRuleChange",
        "longname": "<anonymous>~membershipRuleChange",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3949,
                3978
            ],
            "filename": "membership-rules.js",
            "lineno": 114,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010390",
                "name": "membershipRule",
                "type": "Literal",
                "value": "guideEmails"
            }
        },
        "undocumented": true,
        "name": "membershipRule",
        "longname": "<anonymous>~membershipRuleChange.membershipRule",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3994,
                4021
            ],
            "filename": "membership-rules.js",
            "lineno": 115,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010392",
                "name": "membershipAction",
                "type": "Literal",
                "value": "created"
            }
        },
        "undocumented": true,
        "name": "membershipAction",
        "longname": "<anonymous>~membershipRuleChange.membershipAction",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4037,
                4096
            ],
            "filename": "membership-rules.js",
            "lineno": 116,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010394",
                "name": "membership",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "<anonymous>~membershipRuleChange.membership",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Check if a new member changes active state of bot\n   *\n   * @function\n   * @param {object} bot object\n   * @param {string} actorId id of user who added member to space\n   * @param {Object} membership of new user in bot's room\n   * @returns {void} \n   */",
        "meta": {
            "range": [
                4798,
                6737
            ],
            "filename": "membership-rules.js",
            "lineno": 140,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010454",
                "name": "MembershipRules#isNewMemberAllowed",
                "type": "MethodDefinition",
                "paramnames": [
                    "bot",
                    "actorId",
                    "membership"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check if a new member changes active state of bot</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<p>id of user who added member to space</p>",
                "name": "actorId"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>of new user in bot's room</p>",
                "name": "membership"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "void"
                    ]
                }
            }
        ],
        "name": "isNewMemberAllowed",
        "longname": "MembershipRules#isNewMemberAllowed",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5444,
                5595
            ],
            "filename": "membership-rules.js",
            "lineno": 153,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010528",
                "name": "membershipRuleChange",
                "type": "ObjectExpression",
                "value": "{\"membershipRule\":\"guideEmails\",\"membershipAction\":\"created\",\"membership\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "membershipRuleChange",
        "longname": "<anonymous>~membershipRuleChange",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5483,
                5512
            ],
            "filename": "membership-rules.js",
            "lineno": 154,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010531",
                "name": "membershipRule",
                "type": "Literal",
                "value": "guideEmails"
            }
        },
        "undocumented": true,
        "name": "membershipRule",
        "longname": "<anonymous>~membershipRuleChange.membershipRule",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5528,
                5555
            ],
            "filename": "membership-rules.js",
            "lineno": 155,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010533",
                "name": "membershipAction",
                "type": "Literal",
                "value": "created"
            }
        },
        "undocumented": true,
        "name": "membershipAction",
        "longname": "<anonymous>~membershipRuleChange.membershipAction",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5571,
                5581
            ],
            "filename": "membership-rules.js",
            "lineno": 156,
            "columnno": 14,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010535",
                "name": "membership",
                "type": "Identifier",
                "value": "membership"
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "<anonymous>~membershipRuleChange.membership",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6250,
                6398
            ],
            "filename": "membership-rules.js",
            "lineno": 172,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010599",
                "name": "membershipRuleChange",
                "type": "ObjectExpression",
                "value": "{\"membershipRule\":\"restrictedToEmailDomains\",\"membershipAction\":\"created\",\"membership\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "membershipRuleChange",
        "longname": "<anonymous>~membershipRuleChange",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6285,
                6327
            ],
            "filename": "membership-rules.js",
            "lineno": 173,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010602",
                "name": "membershipRule",
                "type": "Literal",
                "value": "restrictedToEmailDomains"
            }
        },
        "undocumented": true,
        "name": "membershipRule",
        "longname": "<anonymous>~membershipRuleChange.membershipRule",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6339,
                6366
            ],
            "filename": "membership-rules.js",
            "lineno": 174,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010604",
                "name": "membershipAction",
                "type": "Literal",
                "value": "created"
            }
        },
        "undocumented": true,
        "name": "membershipAction",
        "longname": "<anonymous>~membershipRuleChange.membershipAction",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6378,
                6388
            ],
            "filename": "membership-rules.js",
            "lineno": 175,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010606",
                "name": "membership",
                "type": "Identifier",
                "value": "membership"
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "<anonymous>~membershipRuleChange.membership",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Check if a potential direct message recipient is allowed\n   *\n   * @function\n   * @param {String} person - Email or personId of person to send Direct Message.\n   * @returns {Promise.<Boolean>}\n   */",
        "meta": {
            "range": [
                6951,
                7437
            ],
            "filename": "membership-rules.js",
            "lineno": 196,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010632",
                "name": "MembershipRules#isNewPersonAllowed",
                "type": "MethodDefinition",
                "paramnames": [
                    "person"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check if a potential direct message recipient is allowed</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Email or personId of person to send Direct Message.</p>",
                "name": "person"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                }
            }
        ],
        "name": "isNewPersonAllowed",
        "longname": "MembershipRules#isNewPersonAllowed",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7073,
                7118
            ],
            "filename": "membership-rules.js",
            "lineno": 199,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010655",
                "name": "domain",
                "type": "MemberExpression",
                "value": "[1]"
            }
        },
        "undocumented": true,
        "name": "domain",
        "longname": "<anonymous>~domain",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Check if an exiting member changes the activation state of the bot\n   *\n   * @function\n   * @param {object} bot object\n   * @param {object} actorId id of user who removed member\n   * @param {Object} membership of bot in room\n   * @returns {Promise.<Boolean>} -- bot's current active state\n   */",
        "meta": {
            "range": [
                7748,
                11090
            ],
            "filename": "membership-rules.js",
            "lineno": 218,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010705",
                "name": "MembershipRules#isAllowedAfterMemberLeaves",
                "type": "MethodDefinition",
                "paramnames": [
                    "bot",
                    "actorId",
                    "membership"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check if an exiting member changes the activation state of the bot</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>id of user who removed member</p>",
                "name": "actorId"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>of bot in room</p>",
                "name": "membership"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Boolean>"
                    ]
                },
                "description": "<p>-- bot's current active state</p>"
            }
        ],
        "name": "isAllowedAfterMemberLeaves",
        "longname": "MembershipRules#isAllowedAfterMemberLeaves",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8320,
                8479
            ],
            "filename": "membership-rules.js",
            "lineno": 229,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010771",
                "name": "membershipRuleChange",
                "type": "ObjectExpression",
                "value": "{\"membershipRule\":\"guideEmails\",\"membershipAction\":\"deleted\",\"membership\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "membershipRuleChange",
        "longname": "<anonymous>~membershipRuleChange",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8361,
                8390
            ],
            "filename": "membership-rules.js",
            "lineno": 230,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010774",
                "name": "membershipRule",
                "type": "Literal",
                "value": "guideEmails"
            }
        },
        "undocumented": true,
        "name": "membershipRule",
        "longname": "<anonymous>~membershipRuleChange.membershipRule",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8408,
                8435
            ],
            "filename": "membership-rules.js",
            "lineno": 231,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010776",
                "name": "membershipAction",
                "type": "Literal",
                "value": "deleted"
            }
        },
        "undocumented": true,
        "name": "membershipAction",
        "longname": "<anonymous>~membershipRuleChange.membershipAction",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8453,
                8463
            ],
            "filename": "membership-rules.js",
            "lineno": 232,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010778",
                "name": "membership",
                "type": "Identifier",
                "value": "membership"
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "<anonymous>~membershipRuleChange.membership",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9060,
                9067
            ],
            "filename": "membership-rules.js",
            "lineno": 248,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010830",
                "name": "members"
            }
        },
        "undocumented": true,
        "name": "members",
        "longname": "<anonymous>~members",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9194,
                9221
            ],
            "filename": "membership-rules.js",
            "lineno": 251,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010851",
                "name": "members",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "memberships.items",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "members",
        "longname": "<anonymous>~members",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9570,
                9742
            ],
            "filename": "membership-rules.js",
            "lineno": 260,
            "columnno": 18,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010887",
                "name": "membershipRuleChange",
                "type": "ObjectExpression",
                "value": "{\"membershipRule\":\"restrictedToEmailDomains\",\"membershipAction\":\"deleted\",\"membership\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "membershipRuleChange",
        "longname": "<anonymous>~membershipRuleChange",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9611,
                9653
            ],
            "filename": "membership-rules.js",
            "lineno": 261,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010890",
                "name": "membershipRule",
                "type": "Literal",
                "value": "restrictedToEmailDomains"
            }
        },
        "undocumented": true,
        "name": "membershipRule",
        "longname": "<anonymous>~membershipRuleChange.membershipRule",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9671,
                9698
            ],
            "filename": "membership-rules.js",
            "lineno": 262,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010892",
                "name": "membershipAction",
                "type": "Literal",
                "value": "deleted"
            }
        },
        "undocumented": true,
        "name": "membershipAction",
        "longname": "<anonymous>~membershipRuleChange.membershipAction",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9716,
                9726
            ],
            "filename": "membership-rules.js",
            "lineno": 263,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010894",
                "name": "membership",
                "type": "Identifier",
                "value": "membership"
            }
        },
        "undocumented": true,
        "name": "membership",
        "longname": "<anonymous>~membershipRuleChange.membership",
        "kind": "member",
        "memberof": "<anonymous>~membershipRuleChange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10729,
                10776
            ],
            "filename": "membership-rules.js",
            "lineno": 281,
            "columnno": 16,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010962",
                "name": "botState",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "botState",
        "longname": "<anonymous>~botState",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Check if trigger action should be performed\n   *\n   * @function\n   * @param {object} lex phrase callback object\n   * @param {object} bot object\n   * @param {Object} trigger object causing callback\n   * @returns {bool} \n   */",
        "meta": {
            "range": [
                11330,
                12374
            ],
            "filename": "membership-rules.js",
            "lineno": 301,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100010996",
                "name": "MembershipRules#shouldCallHears",
                "type": "MethodDefinition",
                "paramnames": [
                    "lex",
                    "bot",
                    "trigger"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check if trigger action should be performed</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>phrase callback object</p>",
                "name": "lex"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>object causing callback</p>",
                "name": "trigger"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "bool"
                    ]
                }
            }
        ],
        "name": "shouldCallHears",
        "longname": "MembershipRules#shouldCallHears",
        "memberof": "MembershipRules",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11678,
                11697
            ],
            "filename": "membership-rules.js",
            "lineno": 307,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011030",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "bot.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11711,
                11771
            ],
            "filename": "membership-rules.js",
            "lineno": 308,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011036",
                "name": "markdown",
                "type": "MemberExpression",
                "value": "this.framework.membershipRulesStateMessageResponse"
            }
        },
        "undocumented": true,
        "name": "markdown",
        "longname": "markdown",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Check an individual memeber against the allowed domain list\n   *\n   * @function\n   * @returns {boolean} - true if members is allowed\n   */",
        "meta": {
            "range": [
                12528,
                12869
            ],
            "filename": "membership-rules.js",
            "lineno": 332,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011106",
                "name": "MembershipRules#isMemberAllowed",
                "type": "MethodDefinition",
                "paramnames": [
                    "member",
                    "restrictedDomainsList"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Check an individual memeber against the allowed domain list</p>",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<ul>\n<li>true if members is allowed</li>\n</ul>"
            }
        ],
        "name": "isMemberAllowed",
        "longname": "MembershipRules#isMemberAllowed",
        "memberof": "MembershipRules",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12644,
                12702
            ],
            "filename": "membership-rules.js",
            "lineno": 336,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011119",
                "name": "domain",
                "type": "MemberExpression",
                "value": "[1]"
            }
        },
        "undocumented": true,
        "name": "domain",
        "longname": "<anonymous>~domain",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12877,
                12949
            ],
            "filename": "membership-rules.js",
            "lineno": 347,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011154",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "framework"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Process a spawn event that needs to be swallowed\n *\n * @function\n * @param {object} framework object\n * @param {object} bot object\n * @param {Object} membershipRuleChange membership rule that describes the reason for failed spawn\n * @param {String} actorId actorId associated with a membership:created event if available\n * @returns {void} \n */",
        "meta": {
            "range": [
                13304,
                13924
            ],
            "filename": "membership-rules.js",
            "lineno": 359,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011165",
                "name": "swallowSpawn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework",
                    "bot",
                    "actorId",
                    "membershipRuleChange"
                ]
            }
        },
        "description": "<p>Process a spawn event that needs to be swallowed</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>membership rule that describes the reason for failed spawn</p>",
                "name": "membershipRuleChange"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>actorId associated with a membership:created event if available</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "void"
                    ]
                }
            }
        ],
        "name": "swallowSpawn",
        "longname": "swallowSpawn",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13711,
                13730
            ],
            "filename": "membership-rules.js",
            "lineno": 366,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011197",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "bot.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13738,
                13791
            ],
            "filename": "membership-rules.js",
            "lineno": 367,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011203",
                "name": "markdown",
                "type": "MemberExpression",
                "value": "framework.membershipRulesDisallowedResponse"
            }
        },
        "undocumented": true,
        "name": "markdown",
        "longname": "markdown",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Generate a spawn event caused by a memebership rules related change\n *\n * @function\n * @param {object} framework object\n * @param {object} bot object\n * @param {Object} membershipRuleChange membership rule that describes the reason for failed spawn\n * @param {String} actorId actorId associated with a membership:created event if available\n * @returns {void} \n */",
        "meta": {
            "range": [
                14297,
                14930
            ],
            "filename": "membership-rules.js",
            "lineno": 384,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011221",
                "name": "generateSpawn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework",
                    "bot",
                    "actorId",
                    "membershipRuleChange"
                ]
            },
            "vars": {
                "framework.inactiveBots": "framework.inactiveBots"
            }
        },
        "description": "<p>Generate a spawn event caused by a memebership rules related change</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>membership rule that describes the reason for failed spawn</p>",
                "name": "membershipRuleChange"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>actorId associated with a membership:created event if available</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "void"
                    ]
                }
            }
        ],
        "name": "generateSpawn",
        "longname": "generateSpawn",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14371,
                14444
            ],
            "filename": "membership-rules.js",
            "lineno": 385,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011229",
                "name": "framework.inactiveBots",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "inactiveBots",
        "longname": "framework.inactiveBots",
        "kind": "member",
        "memberof": "framework",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14430,
                14442
            ],
            "filename": "membership-rules.js",
            "lineno": 385,
            "columnno": 61,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011241",
                "name": "id",
                "type": "MemberExpression",
                "value": "bot.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14723,
                14742
            ],
            "filename": "membership-rules.js",
            "lineno": 392,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011285",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "bot.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14750,
                14800
            ],
            "filename": "membership-rules.js",
            "lineno": 393,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011291",
                "name": "markdown",
                "type": "MemberExpression",
                "value": "framework.membershipRulesAllowedResponse"
            }
        },
        "undocumented": true,
        "name": "markdown",
        "longname": "markdown",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Generate a despawn event caused by a memebership rules related change\n *\n * @function\n * @param {object} framework object\n * @param {object} bot object\n * @param {Object} membershipRuleChange membership rule that describes the reason for failed spawn\n * @param {String} actorId actorId associated with a membership:created event if available\n * @returns {void} \n */",
        "meta": {
            "range": [
                15305,
                16192
            ],
            "filename": "membership-rules.js",
            "lineno": 410,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011309",
                "name": "generateDespawn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework",
                    "bot",
                    "actorId",
                    "membershipRuleChange"
                ]
            },
            "vars": {
                "framework.bots": "framework.bots"
            }
        },
        "description": "<p>Generate a despawn event caused by a memebership rules related change</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>membership rule that describes the reason for failed spawn</p>",
                "name": "membershipRuleChange"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>actorId associated with a membership:created event if available</p>",
                "name": "actorId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "void"
                    ]
                }
            }
        ],
        "name": "generateDespawn",
        "longname": "generateDespawn",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15381,
                15438
            ],
            "filename": "membership-rules.js",
            "lineno": 411,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011317",
                "name": "framework.bots",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bots",
        "longname": "framework.bots",
        "kind": "member",
        "memberof": "framework",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15424,
                15436
            ],
            "filename": "membership-rules.js",
            "lineno": 411,
            "columnno": 45,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011329",
                "name": "id",
                "type": "MemberExpression",
                "value": "bot.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15732,
                15751
            ],
            "filename": "membership-rules.js",
            "lineno": 418,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011373",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "bot.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15759,
                15812
            ],
            "filename": "membership-rules.js",
            "lineno": 419,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011379",
                "name": "markdown",
                "type": "MemberExpression",
                "value": "framework.membershipRulesDisallowedResponse"
            }
        },
        "undocumented": true,
        "name": "markdown",
        "longname": "markdown",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Check if a newly spawned bot's space meets guide mode rules\n *\n * @function\n * @param {object} framework object\n * @param {Object} members members in the space the bot was added to\n * @returns {Boolean} true if bot is allowed, false if not \n */",
        "meta": {
            "range": [
                16446,
                16751
            ],
            "filename": "membership-rules.js",
            "lineno": 440,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011416",
                "name": "guideRequirementsAreMet",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework",
                    "members"
                ]
            },
            "vars": {
                "guides": "guideRequirementsAreMet~guides",
                "": null
            }
        },
        "description": "<p>Check if a newly spawned bot's space meets guide mode rules</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>object</p>",
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>members in the space the bot was added to</p>",
                "name": "members"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>true if bot is allowed, false if not</p>"
            }
        ],
        "name": "guideRequirementsAreMet",
        "longname": "guideRequirementsAreMet",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16562,
                16677
            ],
            "filename": "membership-rules.js",
            "lineno": 442,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011431",
                "name": "guides",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "guides",
        "longname": "guideRequirementsAreMet~guides",
        "kind": "member",
        "memberof": "guideRequirementsAreMet",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Get memberships from API unless the list was already provided\n * \n * @function\n * @param {object} framework \n * @param {object} bot \n * @param {array} memberships \n * @returns {array} \n */",
        "meta": {
            "range": [
                16949,
                17628
            ],
            "filename": "membership-rules.js",
            "lineno": 461,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011467",
                "name": "getMemberships",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework",
                    "bot",
                    "memberships"
                ]
            },
            "vars": {
                "allMemberships": "getMemberships~allMemberships",
                "": null
            }
        },
        "description": "<p>Get memberships from API unless the list was already provided</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "name": "bot"
            },
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "name": "memberships"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                }
            }
        ],
        "name": "getMemberships",
        "longname": "getMemberships",
        "scope": "global",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17080,
                17101
            ],
            "filename": "membership-rules.js",
            "lineno": 465,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011482",
                "name": "allMemberships",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "allMemberships",
        "longname": "getMemberships~allMemberships",
        "kind": "member",
        "memberof": "getMemberships",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17148,
                17167
            ],
            "filename": "membership-rules.js",
            "lineno": 466,
            "columnno": 45,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011497",
                "name": "roomId",
                "type": "MemberExpression",
                "value": "bot.room.id"
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "roomId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17287,
                17308
            ],
            "filename": "membership-rules.js",
            "lineno": 470,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011518",
                "name": "allMemberships",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "page",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "allMemberships",
        "longname": "<anonymous>~allMemberships",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Returns the email when input could be email or personId\n *\n * @function\n * @param {String} person - Email or personId of person to send Direct Message.\n * @param {Object} webex - SDK object\n * @returns {Promise.<String>}\n */",
        "meta": {
            "range": [
                17863,
                18049
            ],
            "filename": "membership-rules.js",
            "lineno": 492,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011552",
                "name": "getPersonEmail",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "person",
                    "webex"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Returns the email when input could be email or personId</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Email or personId of person to send Direct Message.</p>",
                "name": "person"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>SDK object</p>",
                "name": "webex"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<String>"
                    ]
                }
            }
        ],
        "name": "getPersonEmail",
        "longname": "getPersonEmail",
        "scope": "global"
    },
    {
        "comment": "/**\n * Walk membership list to see if all member domains match\n *\n * @function\n * @param {object} framework \n * @param {array} members\n * @returns {array} \n * @returns {string} - empty string or email of first invalid user\n */",
        "meta": {
            "range": [
                18280,
                18621
            ],
            "filename": "membership-rules.js",
            "lineno": 511,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011588",
                "name": "findInvalidMemberDomains",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework",
                    "members"
                ]
            },
            "vars": {
                "i": "findInvalidMemberDomains~i",
                "member": "findInvalidMemberDomains~member"
            }
        },
        "description": "<p>Walk membership list to see if all member domains match</p>",
        "kind": "function",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "name": "members"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                }
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "<ul>\n<li>empty string or email of first invalid user</li>\n</ul>"
            }
        ],
        "name": "findInvalidMemberDomains",
        "longname": "findInvalidMemberDomains",
        "scope": "global",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18392,
                18397
            ],
            "filename": "membership-rules.js",
            "lineno": 513,
            "columnno": 13,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011600",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "findInvalidMemberDomains~i",
        "kind": "member",
        "memberof": "findInvalidMemberDomains",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18438,
                18457
            ],
            "filename": "membership-rules.js",
            "lineno": 514,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011612",
                "name": "member",
                "type": "MemberExpression",
                "value": "members[undefined]"
            }
        },
        "undocumented": true,
        "name": "member",
        "longname": "findInvalidMemberDomains~member",
        "kind": "constant",
        "memberof": "findInvalidMemberDomains",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Check an individual domain against the allowed domain list\n *\n * @function\n * @returns {boolean} - true if domain is allowed\n */",
        "meta": {
            "range": [
                18760,
                18960
            ],
            "filename": "membership-rules.js",
            "lineno": 529,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011639",
                "name": "isDomainAllowed",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "domain",
                    "restrictedDomainsList"
                ]
            },
            "vars": {
                "goodDomain": "isDomainAllowed~goodDomain",
                "": null
            }
        },
        "description": "<p>Check an individual domain against the allowed domain list</p>",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<ul>\n<li>true if domain is allowed</li>\n</ul>"
            }
        ],
        "name": "isDomainAllowed",
        "longname": "isDomainAllowed",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18824,
                18887
            ],
            "filename": "membership-rules.js",
            "lineno": 530,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011645",
                "name": "goodDomain",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "goodDomain",
        "longname": "isDomainAllowed~goodDomain",
        "kind": "member",
        "memberof": "isDomainAllowed",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19,
                41
            ],
            "filename": "process-event.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011671",
                "name": "when",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "when",
        "longname": "when",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Processes an inbound Webex event.\n * This can be called by either the webhook or websocket handler.\n * @function\n * @private\n * @param {Object} framework - The framework object this function applies to.\n * @param {Object} body - The body of the event being processed\n * @param {String} name - The name of the webhook, if a webhook is being processed\n */",
        "meta": {
            "range": [
                405,
                4560
            ],
            "filename": "process-event.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011676",
                "name": "processEvent",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework",
                    "body",
                    "name"
                ]
            },
            "vars": {
                "name": "processEvent~name",
                "resource": "processEvent~resource",
                "event": "processEvent~event",
                "data": "processEvent~data",
                "actorId": "processEvent~actorId",
                "roomId": "processEvent~roomId",
                "": null
            }
        },
        "description": "<p>Processes an inbound Webex event.\nThis can be called by either the webhook or websocket handler.</p>",
        "kind": "function",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The framework object this function applies to.</p>",
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The body of the event being processed</p>",
                "name": "body"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>The name of the webhook, if a webhook is being processed</p>",
                "name": "name"
            }
        ],
        "name": "processEvent",
        "longname": "processEvent",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                541,
                571
            ],
            "filename": "process-event.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011695",
                "name": "name",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "processEvent~name",
        "kind": "member",
        "memberof": "processEvent",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                579,
                603
            ],
            "filename": "process-event.js",
            "lineno": 21,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011704",
                "name": "resource",
                "type": "MemberExpression",
                "value": "body.resource"
            }
        },
        "undocumented": true,
        "name": "resource",
        "longname": "processEvent~resource",
        "kind": "member",
        "memberof": "processEvent",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                611,
                629
            ],
            "filename": "process-event.js",
            "lineno": 22,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011710",
                "name": "event",
                "type": "MemberExpression",
                "value": "body.event"
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "processEvent~event",
        "kind": "member",
        "memberof": "processEvent",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                637,
                653
            ],
            "filename": "process-event.js",
            "lineno": 23,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011716",
                "name": "data",
                "type": "MemberExpression",
                "value": "body.data"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "processEvent~data",
        "kind": "member",
        "memberof": "processEvent",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                661,
                683
            ],
            "filename": "process-event.js",
            "lineno": 24,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011722",
                "name": "actorId",
                "type": "MemberExpression",
                "value": "body.actorId"
            }
        },
        "undocumented": true,
        "name": "actorId",
        "longname": "processEvent~actorId",
        "kind": "member",
        "memberof": "processEvent",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                691,
                746
            ],
            "filename": "process-event.js",
            "lineno": 25,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011728",
                "name": "roomId",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "roomId",
        "longname": "processEvent~roomId",
        "kind": "member",
        "memberof": "processEvent",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1333,
                1361
            ],
            "filename": "process-event.js",
            "lineno": 44,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100011828",
                "name": "room.title",
                "type": "Literal",
                "value": "Default title",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "title",
        "longname": "room.title",
        "kind": "member",
        "memberof": "room",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4562,
                4591
            ],
            "filename": "process-event.js",
            "lineno": 173,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012239",
                "name": "module.exports",
                "type": "Identifier",
                "value": "processEvent",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19,
                41
            ],
            "filename": "utils.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012249",
                "name": "uuid",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "uuid",
        "longname": "uuid",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48,
                58
            ],
            "filename": "utils.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012255",
                "name": "Utils",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "Utils",
        "longname": "Utils",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Base64 encode a string\n * @function\n * @private\n * @param {String} string\n * @returns {String} Base64 encoded string.\n */",
        "meta": {
            "range": [
                190,
                284
            ],
            "filename": "utils.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012259",
                "name": "Utils.base64encode",
                "type": "FunctionExpression",
                "paramnames": [
                    "string"
                ]
            }
        },
        "description": "<p>Base64 encode a string</p>",
        "kind": "function",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "string"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Base64 encoded string.</p>"
            }
        ],
        "name": "base64encode",
        "longname": "Utils.base64encode",
        "memberof": "Utils",
        "scope": "static"
    },
    {
        "comment": "/**\n * Generate UUID string\n * @function\n * @private\n * @returns {String} UUID string.\n */",
        "meta": {
            "range": [
                378,
                428
            ],
            "filename": "utils.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012277",
                "name": "Utils.genUUID",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "<p>Generate UUID string</p>",
        "kind": "function",
        "access": "private",
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>UUID string.</p>"
            }
        ],
        "name": "genUUID",
        "longname": "Utils.genUUID",
        "memberof": "Utils",
        "scope": "static"
    },
    {
        "comment": "/**\n * Generate a Base64 encoded UUID\n * @function\n * @private\n * @returns {String} Base64 encoded UUID.\n */",
        "meta": {
            "range": [
                540,
                618
            ],
            "filename": "utils.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012289",
                "name": "Utils.genUUID64",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "<p>Generate a Base64 encoded UUID</p>",
        "kind": "function",
        "access": "private",
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Base64 encoded UUID.</p>"
            }
        ],
        "name": "genUUID64",
        "longname": "Utils.genUUID64",
        "memberof": "Utils",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                621,
                643
            ],
            "filename": "utils.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012305",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Utils",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6,
                38
            ],
            "filename": "validator.js",
            "lineno": 1,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012313",
                "name": "validator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "validator",
        "longname": "validator",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                68
            ],
            "filename": "validator.js",
            "lineno": 2,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012319",
                "name": "when",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "when",
        "longname": "when",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                76,
                94
            ],
            "filename": "validator.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012325",
                "name": "fs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fs",
        "longname": "fs",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                123
            ],
            "filename": "validator.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012331",
                "name": "_",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_",
        "longname": "_",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @description Framework Object Validation\n * @private\n * @name Validator\n * @namespace Validator\n */",
        "meta": {
            "filename": "validator.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {}
        },
        "description": "<p>Framework Object Validation</p>",
        "access": "private",
        "name": "Validator",
        "kind": "namespace",
        "longname": "Validator",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                239,
                253
            ],
            "filename": "validator.js",
            "lineno": 12,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012337",
                "name": "Validator",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "Validator",
        "longname": "Validator",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate an initialized framework object\n *\n * @function\n * @memberof Validator\n * @param {object} framework A Framework object\n * @returns {boolean} If framework object is valid\n */",
        "meta": {
            "range": [
                459,
                1046
            ],
            "filename": "validator.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012341",
                "name": "Validator.isFramework",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "framework"
                ]
            },
            "vars": {
                "result": "Validator.isFramework~result"
            }
        },
        "description": "<p>Validate an initialized framework object</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>A Framework object</p>",
                "name": "framework"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If framework object is valid</p>"
            }
        ],
        "name": "isFramework",
        "longname": "Validator.isFramework",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                508,
                1026
            ],
            "filename": "validator.js",
            "lineno": 23,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012349",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isFramework~result",
        "kind": "constant",
        "memberof": "Validator.isFramework",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate a bot object\n *\n * @function\n * @memberof Validator\n * @param {object} bot A Bot object\n * @returns {boolean} If bot object is valid\n */",
        "meta": {
            "range": [
                1215,
                1810
            ],
            "filename": "validator.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012428",
                "name": "Validator.isBot",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "bot"
                ]
            },
            "vars": {
                "result": "Validator.isBot~result"
            }
        },
        "description": "<p>Validate a bot object</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>A Bot object</p>",
                "name": "bot"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If bot object is valid</p>"
            }
        ],
        "name": "isBot",
        "longname": "Validator.isBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1252,
                1790
            ],
            "filename": "validator.js",
            "lineno": 47,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012436",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isBot~result",
        "kind": "constant",
        "memberof": "Validator.isBot",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate a trigger object\n *\n * @function\n * @memberof Validator\n * @param {object} trigger A Trigger object\n * @returns {boolean} If trigger object is valid\n */",
        "meta": {
            "range": [
                1995,
                2640
            ],
            "filename": "validator.js",
            "lineno": 72,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012529",
                "name": "Validator.isTrigger",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "trigger"
                ]
            },
            "vars": {
                "result": "Validator.isTrigger~result"
            }
        },
        "description": "<p>Validate a trigger object</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>A Trigger object</p>",
                "name": "trigger"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If trigger object is valid</p>"
            }
        ],
        "name": "isTrigger",
        "longname": "Validator.isTrigger",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2038,
                2251
            ],
            "filename": "validator.js",
            "lineno": 73,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012537",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isTrigger~result",
        "kind": "member",
        "memberof": "Validator.isTrigger",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2313,
                2458
            ],
            "filename": "validator.js",
            "lineno": 81,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012582",
                "name": "result",
                "type": "LogicalExpression",
                "funcscope": "Validator.isTrigger",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isTrigger~result",
        "kind": "member",
        "memberof": "Validator.isTrigger",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2520,
                2575
            ],
            "filename": "validator.js",
            "lineno": 86,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012612",
                "name": "result",
                "type": "BinaryExpression",
                "funcscope": "Validator.isTrigger",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isTrigger~result",
        "kind": "member",
        "memberof": "Validator.isTrigger",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2596,
                2610
            ],
            "filename": "validator.js",
            "lineno": 88,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012622",
                "name": "result",
                "type": "Literal",
                "funcscope": "Validator.isTrigger",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isTrigger~result",
        "kind": "member",
        "memberof": "Validator.isTrigger",
        "scope": "inner"
    },
    {
        "comment": "/**\n * @description Validate an attachmentAction object\n *\n * @function\n * @memberof Validator\n * @param {object} attachmentAction A attachmentAction object\n * @returns {boolean} If attachmentAction object is valid\n */",
        "meta": {
            "range": [
                2862,
                3364
            ],
            "filename": "validator.js",
            "lineno": 102,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012628",
                "name": "Validator.isAttachmentAction",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "attachmentAction"
                ]
            },
            "vars": {
                "result": "Validator.isAttachmentAction~result"
            }
        },
        "description": "<p>Validate an attachmentAction object</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>A attachmentAction object</p>",
                "name": "attachmentAction"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If attachmentAction object is valid</p>"
            }
        ],
        "name": "isAttachmentAction",
        "longname": "Validator.isAttachmentAction",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2923,
                3344
            ],
            "filename": "validator.js",
            "lineno": 103,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012636",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isAttachmentAction~result",
        "kind": "member",
        "memberof": "Validator.isAttachmentAction",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate a cardJson object\n *\n * @function\n * @memberof Validator\n * @param {object} cardJson A Webex Buttons and Cards JSON object\n * @returns {boolean} If card JSON object is valid\n */",
        "meta": {
            "range": [
                3574,
                3990
            ],
            "filename": "validator.js",
            "lineno": 123,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012694",
                "name": "Validator.isCardJson",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "cardJson"
                ]
            },
            "vars": {
                "result": "Validator.isCardJson~result"
            }
        },
        "description": "<p>Validate a cardJson object</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "<p>A Webex Buttons and Cards JSON object</p>",
                "name": "cardJson"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "<p>If card JSON object is valid</p>"
            }
        ],
        "name": "isCardJson",
        "longname": "Validator.isCardJson",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3619,
                3970
            ],
            "filename": "validator.js",
            "lineno": 124,
            "columnno": 6,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012702",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isCardJson~result",
        "kind": "member",
        "memberof": "Validator.isCardJson",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate filePath resolves to existing file. Returns fulfilled Promise with\n * filePath if valid, else returns rejected Promise if not valid.\n *\n * @function\n * @memberof Validator\n * @param {String} filePath Absolute path to file\n * @returns {Promise.String} Absolute path to file\n */",
        "meta": {
            "range": [
                4299,
                4648
            ],
            "filename": "validator.js",
            "lineno": 144,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012738",
                "name": "Validator.pathIsFile",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "filePath"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Validate filePath resolves to existing file. Returns fulfilled Promise with\nfilePath if valid, else returns rejected Promise if not valid.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Absolute path to file</p>",
                "name": "filePath"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.String"
                    ]
                },
                "description": "<p>Absolute path to file</p>"
            }
        ],
        "name": "pathIsFile",
        "longname": "Validator.pathIsFile",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate filePath resolves to existing dir. Returns fulfilled Promise with\n * dirPath if valid, else returns rejected Promise if not valid.\n *\n * @function\n * @memberof Validator\n * @param {String} dirPath Absolute path to a directory\n * @returns {Promise.String} Absolute path to a directory\n */",
        "meta": {
            "range": [
                4968,
                5304
            ],
            "filename": "validator.js",
            "lineno": 167,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012786",
                "name": "Validator.isDir",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "dirPath"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Validate filePath resolves to existing dir. Returns fulfilled Promise with\ndirPath if valid, else returns rejected Promise if not valid.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Absolute path to a directory</p>",
                "name": "dirPath"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.String"
                    ]
                },
                "description": "<p>Absolute path to a directory</p>"
            }
        ],
        "name": "isDir",
        "longname": "Validator.isDir",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Token is valid by sending request to API to determine if\n * authorized. Returns fulfilled Promise with token if valid, else returns rejected\n * Promise if not valid.\n *\n * @function\n * @memberof Validator\n * @param {String} token Cisco Webex Token\n * @returns {Promise.String} Cisco Webex Token\n */",
        "meta": {
            "range": [
                5641,
                6097
            ],
            "filename": "validator.js",
            "lineno": 191,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012836",
                "name": "Validator.isToken",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "token"
                ]
            },
            "vars": {
                "Webex": "Validator.isToken~Webex",
                "webex": "Validator.isToken~webex",
                "": null
            }
        },
        "description": "<p>Validate Webex Token is valid by sending request to API to determine if\nauthorized. Returns fulfilled Promise with token if valid, else returns rejected\nPromise if not valid.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Cisco Webex Token</p>",
                "name": "token"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.String"
                    ]
                },
                "description": "<p>Cisco Webex Token</p>"
            }
        ],
        "name": "isToken",
        "longname": "Validator.isToken",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5754,
                5778
            ],
            "filename": "validator.js",
            "lineno": 195,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012856",
                "name": "Webex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Webex",
        "longname": "Validator.isToken~Webex",
        "kind": "constant",
        "memberof": "Validator.isToken",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5826,
                5854
            ],
            "filename": "validator.js",
            "lineno": 196,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012862",
                "name": "webex",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "webex",
        "longname": "Validator.isToken~webex",
        "kind": "constant",
        "memberof": "Validator.isToken",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5846,
                5851
            ],
            "filename": "validator.js",
            "lineno": 196,
            "columnno": 28,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012867",
                "name": "token",
                "type": "Identifier",
                "value": "token"
            }
        },
        "undocumented": true,
        "name": "token",
        "longname": "token",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * @description Validate String is Email.\n *\n * @function\n * @memberof Validator\n * @param {String} email Email address string\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                6264,
                6391
            ],
            "filename": "validator.js",
            "lineno": 216,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012910",
                "name": "Validator.isEmail",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "email"
                ]
            }
        },
        "description": "<p>Validate String is Email.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>Email address string</p>",
                "name": "email"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isEmail",
        "longname": "Validator.isEmail",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Emails in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} emails Array of Email address string\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                6567,
                6703
            ],
            "filename": "validator.js",
            "lineno": 232,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012932",
                "name": "Validator.isEmails",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "emails"
                ]
            }
        },
        "description": "<p>Validate Emails in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Email address string</p>",
                "name": "emails"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isEmails",
        "longname": "Validator.isEmails",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate String is URL.\n *\n * @function\n * @memberof Validator\n * @param {String} url URL String\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                6856,
                7031
            ],
            "filename": "validator.js",
            "lineno": 247,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012956",
                "name": "Validator.isUrl",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "url"
                ]
            }
        },
        "description": "<p>Validate String is URL.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>URL String</p>",
                "name": "url"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isUrl",
        "longname": "Validator.isUrl",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6972,
                7000
            ],
            "filename": "validator.js",
            "lineno": 251,
            "columnno": 32,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012978",
                "name": "protocols",
                "type": "ArrayExpression",
                "value": "[\"http\",\"https\"]"
            }
        },
        "undocumented": true,
        "name": "protocols",
        "longname": "protocols",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7002,
                7025
            ],
            "filename": "validator.js",
            "lineno": 251,
            "columnno": 62,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012982",
                "name": "allow_underscores",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "allow_underscores",
        "longname": "allow_underscores",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * @description Validate String is File path and not a URL/URI.\n *\n * @function\n * @memberof Validator\n * @param {String} path String to test\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                7213,
                7369
            ],
            "filename": "validator.js",
            "lineno": 262,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100012985",
                "name": "Validator.isFilePath",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "path"
                ]
            },
            "vars": {
                "re": "Validator.isFilePath~re"
            }
        },
        "description": "<p>Validate String is File path and not a URL/URI.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "<p>String to test</p>",
                "name": "path"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isFilePath",
        "longname": "Validator.isFilePath",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7312,
                7342
            ],
            "filename": "validator.js",
            "lineno": 266,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013001",
                "name": "re",
                "type": "Literal",
                "value": "<RegExp /^(?!(.*:\\/))(\\/?)[ -~]*/>"
            }
        },
        "undocumented": true,
        "name": "re",
        "longname": "Validator.isFilePath~re",
        "kind": "constant",
        "memberof": "Validator.isFilePath",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Options object\n *\n * @function\n * @memberof Validator\n * @param {Object.<Options>} options Validate that object passed includes all\n * valid options for framework constructor\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                7609,
                7671
            ],
            "filename": "validator.js",
            "lineno": 279,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013011",
                "name": "Validator.isOptions",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "options"
                ]
            }
        },
        "description": "<p>Validate Options object</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Object.<Options>"
                    ]
                },
                "description": "<p>Validate that object passed includes all\nvalid options for framework constructor</p>",
                "name": "options"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isOptions",
        "longname": "Validator.isOptions",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate File object\n *\n * @function\n * @memberof Validator\n * @param {Object.<File>} file Validate that object passed includes all valid\n * options required in a file object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                7910,
                8095
            ],
            "filename": "validator.js",
            "lineno": 290,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013022",
                "name": "Validator.isFile",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "file"
                ]
            },
            "vars": {
                "result": "Validator.isFile~result"
            }
        },
        "description": "<p>Validate File object</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Object.<File>"
                    ]
                },
                "description": "<p>Validate that object passed includes all valid\noptions required in a file object</p>",
                "name": "file"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isFile",
        "longname": "Validator.isFile",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7949,
                8075
            ],
            "filename": "validator.js",
            "lineno": 291,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013030",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isFile~result",
        "kind": "constant",
        "memberof": "Validator.isFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Event Object.\n *\n * @function\n * @memberof Validator\n * @param {Event} event Event object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                8256,
                8506
            ],
            "filename": "validator.js",
            "lineno": 309,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013059",
                "name": "Validator.isEvent",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "result": "Validator.isEvent~result"
            }
        },
        "description": "<p>Validate Webex Event Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Event"
                    ]
                },
                "description": "<p>Event object</p>",
                "name": "event"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isEvent",
        "longname": "Validator.isEvent",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8297,
                8486
            ],
            "filename": "validator.js",
            "lineno": 310,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013067",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isEvent~result",
        "kind": "constant",
        "memberof": "Validator.isEvent",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Event Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} events Array of Event objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                8688,
                8824
            ],
            "filename": "validator.js",
            "lineno": 329,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013107",
                "name": "Validator.isEvents",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "events"
                ]
            }
        },
        "description": "<p>Validate Webex Event Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Event objects</p>",
                "name": "events"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isEvents",
        "longname": "Validator.isEvents",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Event Search Object.\n *\n * @function\n * @memberof Validator\n * @param {EventSearch} searchObj EventSearch object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                9008,
                9128
            ],
            "filename": "validator.js",
            "lineno": 344,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013131",
                "name": "Validator.isEventSearch",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "searchObj"
                ]
            }
        },
        "description": "<p>Validate Webex Event Search Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "EventSearch"
                    ]
                },
                "description": "<p>EventSearch object</p>",
                "name": "searchObj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isEventSearch",
        "longname": "Validator.isEventSearch",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex License Object.\n *\n * @function\n * @memberof Validator\n * @param {License} license License object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                9297,
                9441
            ],
            "filename": "validator.js",
            "lineno": 359,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013149",
                "name": "Validator.isLicense",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "license"
                ]
            },
            "vars": {
                "result": "Validator.isLicense~result"
            }
        },
        "description": "<p>Validate Webex License Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "License"
                    ]
                },
                "description": "<p>License object</p>",
                "name": "license"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isLicense",
        "longname": "Validator.isLicense",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9342,
                9421
            ],
            "filename": "validator.js",
            "lineno": 360,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013157",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isLicense~result",
        "kind": "constant",
        "memberof": "Validator.isLicense",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex License Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} licenses Array of License objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                9629,
                9775
            ],
            "filename": "validator.js",
            "lineno": 375,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013174",
                "name": "Validator.isLicenses",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "licenses"
                ]
            }
        },
        "description": "<p>Validate Webex License Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of License objects</p>",
                "name": "licenses"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isLicenses",
        "longname": "Validator.isLicenses",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex License Search Object.\n *\n * @function\n * @memberof Validator\n * @param {LicenseSearch} searchObj LicenseSearch object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                9965,
                10087
            ],
            "filename": "validator.js",
            "lineno": 390,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013198",
                "name": "Validator.isLicenseSearch",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "searchObj"
                ]
            }
        },
        "description": "<p>Validate Webex License Search Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "LicenseSearch"
                    ]
                },
                "description": "<p>LicenseSearch object</p>",
                "name": "searchObj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isLicenseSearch",
        "longname": "Validator.isLicenseSearch",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Membership Object.\n *\n * @function\n * @memberof Validator\n * @param {Membership} membership Membership object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                10268,
                10465
            ],
            "filename": "validator.js",
            "lineno": 405,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013216",
                "name": "Validator.isMembership",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "membership"
                ]
            },
            "vars": {
                "result": "Validator.isMembership~result"
            }
        },
        "description": "<p>Validate Webex Membership Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Membership"
                    ]
                },
                "description": "<p>Membership object</p>",
                "name": "membership"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isMembership",
        "longname": "Validator.isMembership",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10319,
                10445
            ],
            "filename": "validator.js",
            "lineno": 406,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013224",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isMembership~result",
        "kind": "constant",
        "memberof": "Validator.isMembership",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Membership Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} memberships Array of Membership objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                10664,
                10825
            ],
            "filename": "validator.js",
            "lineno": 424,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013245",
                "name": "Validator.isMemberships",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "memberships"
                ]
            }
        },
        "description": "<p>Validate Webex Membership Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Membership objects</p>",
                "name": "memberships"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isMemberships",
        "longname": "Validator.isMemberships",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Membership Search Object.\n *\n * @function\n * @memberof Validator\n * @param {MembershipSearch} searchObj MembershipSearch object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                11024,
                11444
            ],
            "filename": "validator.js",
            "lineno": 439,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013269",
                "name": "Validator.isMembershipSearch",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "searchObj"
                ]
            },
            "vars": {
                "searchByRoomId": "Validator.isMembershipSearch~searchByRoomId",
                "searchByPersonId": "Validator.isMembershipSearch~searchByPersonId",
                "searchByPersonEmail": "Validator.isMembershipSearch~searchByPersonEmail"
            }
        },
        "description": "<p>Validate Webex Membership Search Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "MembershipSearch"
                    ]
                },
                "description": "<p>MembershipSearch object</p>",
                "name": "searchObj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isMembershipSearch",
        "longname": "Validator.isMembershipSearch",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11142,
                11226
            ],
            "filename": "validator.js",
            "lineno": 444,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013285",
                "name": "searchByRoomId",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "searchByRoomId",
        "longname": "Validator.isMembershipSearch~searchByRoomId",
        "kind": "constant",
        "memberof": "Validator.isMembershipSearch",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11236,
                11295
            ],
            "filename": "validator.js",
            "lineno": 445,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013301",
                "name": "searchByPersonId",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "searchByPersonId",
        "longname": "Validator.isMembershipSearch~searchByPersonId",
        "kind": "constant",
        "memberof": "Validator.isMembershipSearch",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11305,
                11370
            ],
            "filename": "validator.js",
            "lineno": 446,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013311",
                "name": "searchByPersonEmail",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "searchByPersonEmail",
        "longname": "Validator.isMembershipSearch~searchByPersonEmail",
        "kind": "constant",
        "memberof": "Validator.isMembershipSearch",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Message Object.\n *\n * @function\n * @memberof Validator\n * @param {Message} message Message object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                11613,
                11970
            ],
            "filename": "validator.js",
            "lineno": 459,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013327",
                "name": "Validator.isMessage",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "message"
                ]
            },
            "vars": {
                "directMessage": "Validator.isMessage~directMessage",
                "groupMessage": "Validator.isMessage~groupMessage",
                "result": "Validator.isMessage~result"
            }
        },
        "description": "<p>Validate Webex Message Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Message"
                    ]
                },
                "description": "<p>Message object</p>",
                "name": "message"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isMessage",
        "longname": "Validator.isMessage",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11718,
                11779
            ],
            "filename": "validator.js",
            "lineno": 464,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013343",
                "name": "directMessage",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "directMessage",
        "longname": "Validator.isMessage~directMessage",
        "kind": "constant",
        "memberof": "Validator.isMessage",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11789,
                11838
            ],
            "filename": "validator.js",
            "lineno": 465,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013353",
                "name": "groupMessage",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "groupMessage",
        "longname": "Validator.isMessage~groupMessage",
        "kind": "constant",
        "memberof": "Validator.isMessage",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11849,
                11950
            ],
            "filename": "validator.js",
            "lineno": 467,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013362",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isMessage~result",
        "kind": "constant",
        "memberof": "Validator.isMessage",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Message Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} messages Array of Message objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                12158,
                12304
            ],
            "filename": "validator.js",
            "lineno": 480,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013382",
                "name": "Validator.isMessages",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "messages"
                ]
            }
        },
        "description": "<p>Validate Webex Message Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Message objects</p>",
                "name": "messages"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isMessages",
        "longname": "Validator.isMessages",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Message Search Object.\n *\n * @function\n * @memberof Validator\n * @param {MessageSearch} searchObj MessageSearch object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                12494,
                12586
            ],
            "filename": "validator.js",
            "lineno": 495,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013406",
                "name": "Validator.isMessageSearch",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "searchObj"
                ]
            }
        },
        "description": "<p>Validate Webex Message Search Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "MessageSearch"
                    ]
                },
                "description": "<p>MessageSearch object</p>",
                "name": "searchObj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isMessageSearch",
        "longname": "Validator.isMessageSearch",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Organization Object.\n *\n * @function\n * @memberof Validator\n * @param {Organization} organization Organization object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                12775,
                12899
            ],
            "filename": "validator.js",
            "lineno": 505,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013421",
                "name": "Validator.isOrganization",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "organization"
                ]
            }
        },
        "description": "<p>Validate Webex Organization Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Organization"
                    ]
                },
                "description": "<p>Organization object</p>",
                "name": "organization"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isOrganization",
        "longname": "Validator.isOrganization",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Organizations Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} organizations Array of Organization objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                13103,
                13274
            ],
            "filename": "validator.js",
            "lineno": 515,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013440",
                "name": "Validator.isOrganizations",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "organizations"
                ]
            }
        },
        "description": "<p>Validate Webex Organizations Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Organization objects</p>",
                "name": "organizations"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isOrganizations",
        "longname": "Validator.isOrganizations",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Person Object.\n *\n * @function\n * @memberof Validator\n * @param {Person} person Person object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                13439,
                13636
            ],
            "filename": "validator.js",
            "lineno": 530,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013464",
                "name": "Validator.isPerson",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "person"
                ]
            },
            "vars": {
                "result": "Validator.isPerson~result"
            }
        },
        "description": "<p>Validate Webex Person Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Person"
                    ]
                },
                "description": "<p>Person object</p>",
                "name": "person"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isPerson",
        "longname": "Validator.isPerson",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13482,
                13616
            ],
            "filename": "validator.js",
            "lineno": 531,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013472",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isPerson~result",
        "kind": "constant",
        "memberof": "Validator.isPerson",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Person Object is a bot\n *\n * @function\n * @memberof Validator\n * @param {Person} person Person object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                13809,
                13993
            ],
            "filename": "validator.js",
            "lineno": 548,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013497",
                "name": "Validator.personIsBot",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "person"
                ]
            },
            "vars": {
                "result": "Validator.personIsBot~result"
            }
        },
        "description": "<p>Validate Webex Person Object is a bot</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Person"
                    ]
                },
                "description": "<p>Person object</p>",
                "name": "person"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "personIsBot",
        "longname": "Validator.personIsBot",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13855,
                13973
            ],
            "filename": "validator.js",
            "lineno": 549,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013505",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.personIsBot~result",
        "kind": "constant",
        "memberof": "Validator.personIsBot",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Person Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} people Array of Person objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                14176,
                14313
            ],
            "filename": "validator.js",
            "lineno": 564,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013528",
                "name": "Validator.isPeople",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "people"
                ]
            }
        },
        "description": "<p>Validate Webex Person Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Person objects</p>",
                "name": "people"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isPeople",
        "longname": "Validator.isPeople",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Person Search Object.\n *\n * @function\n * @memberof Validator\n * @param {PersonSearch} searchObj Person Search object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                14501,
                14682
            ],
            "filename": "validator.js",
            "lineno": 579,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013552",
                "name": "Validator.isPersonSearch",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "searchObj"
                ]
            },
            "vars": {
                "result": "Validator.isPersonSearch~result"
            }
        },
        "description": "<p>Validate Webex Person Search Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "PersonSearch"
                    ]
                },
                "description": "<p>Person Search object</p>",
                "name": "searchObj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isPersonSearch",
        "longname": "Validator.isPersonSearch",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14553,
                14662
            ],
            "filename": "validator.js",
            "lineno": 580,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013560",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isPersonSearch~result",
        "kind": "constant",
        "memberof": "Validator.isPersonSearch",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Role Object.\n *\n * @function\n * @memberof Validator\n * @param {Role} role Role object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                14839,
                14968
            ],
            "filename": "validator.js",
            "lineno": 594,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013581",
                "name": "Validator.isRole",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "role"
                ]
            },
            "vars": {
                "result": "Validator.isRole~result"
            }
        },
        "description": "<p>Validate Webex Role Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Role"
                    ]
                },
                "description": "<p>Role object</p>",
                "name": "role"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isRole",
        "longname": "Validator.isRole",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14878,
                14948
            ],
            "filename": "validator.js",
            "lineno": 595,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013589",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isRole~result",
        "kind": "constant",
        "memberof": "Validator.isRole",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Role Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} roles Array of Role objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                15147,
                15278
            ],
            "filename": "validator.js",
            "lineno": 610,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013606",
                "name": "Validator.isRoles",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "roles"
                ]
            }
        },
        "description": "<p>Validate Webex Role Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Role objects</p>",
                "name": "roles"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isRoles",
        "longname": "Validator.isRoles",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Room Object.\n *\n * @function\n * @memberof Validator\n * @param {Room} room Room Object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                15435,
                15592
            ],
            "filename": "validator.js",
            "lineno": 625,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013630",
                "name": "Validator.isRoom",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "room"
                ]
            },
            "vars": {
                "result": "Validator.isRoom~result"
            }
        },
        "description": "<p>Validate Webex Room Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Room"
                    ]
                },
                "description": "<p>Room Object</p>",
                "name": "room"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isRoom",
        "longname": "Validator.isRoom",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15474,
                15572
            ],
            "filename": "validator.js",
            "lineno": 626,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013638",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isRoom~result",
        "kind": "constant",
        "memberof": "Validator.isRoom",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Room Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} rooms Array of Room objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                15771,
                15902
            ],
            "filename": "validator.js",
            "lineno": 642,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013662",
                "name": "Validator.isRooms",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "rooms"
                ]
            }
        },
        "description": "<p>Validate Webex Room Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Room objects</p>",
                "name": "rooms"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isRooms",
        "longname": "Validator.isRooms",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Room Search Object.\n *\n * @function\n * @memberof Validator\n * @param {RoomSearch} searchObj RoomSearch object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                16083,
                16240
            ],
            "filename": "validator.js",
            "lineno": 657,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013686",
                "name": "Validator.isRoomSearch",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "searchObj"
                ]
            },
            "vars": {
                "result": "Validator.isRoomSearch~result"
            }
        },
        "description": "<p>Validate Webex Room Search Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "RoomSearch"
                    ]
                },
                "description": "<p>RoomSearch object</p>",
                "name": "searchObj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isRoomSearch",
        "longname": "Validator.isRoomSearch",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16133,
                16220
            ],
            "filename": "validator.js",
            "lineno": 658,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013694",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isRoomSearch~result",
        "kind": "constant",
        "memberof": "Validator.isRoomSearch",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Team Object.\n *\n * @function\n * @memberof Validator\n * @param {Team} team Team object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                16397,
                16597
            ],
            "filename": "validator.js",
            "lineno": 672,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013711",
                "name": "Validator.isTeam",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "team"
                ]
            }
        },
        "description": "<p>Validate Webex Team Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Team"
                    ]
                },
                "description": "<p>Team object</p>",
                "name": "team"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isTeam",
        "longname": "Validator.isTeam",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Team Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} teams Array of Team objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                16776,
                16907
            ],
            "filename": "validator.js",
            "lineno": 687,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013756",
                "name": "Validator.isTeams",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "teams"
                ]
            }
        },
        "description": "<p>Validate Webex Team Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Team objects</p>",
                "name": "teams"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isTeams",
        "longname": "Validator.isTeams",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Team Membership Object.\n *\n * @function\n * @memberof Validator\n * @param {TeamMembership} teamMembership TeamMembership object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                17105,
                17379
            ],
            "filename": "validator.js",
            "lineno": 702,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013780",
                "name": "Validator.isTeamMembership",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "teamMembership"
                ]
            },
            "vars": {
                "result": "Validator.isTeamMembership~result"
            }
        },
        "description": "<p>Validate Webex Team Membership Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "TeamMembership"
                    ]
                },
                "description": "<p>TeamMembership object</p>",
                "name": "teamMembership"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isTeamMembership",
        "longname": "Validator.isTeamMembership",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17164,
                17359
            ],
            "filename": "validator.js",
            "lineno": 703,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013788",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isTeamMembership~result",
        "kind": "constant",
        "memberof": "Validator.isTeamMembership",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Team Membership Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} teamMemberships Array of TeamMembership objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                17589,
                17770
            ],
            "filename": "validator.js",
            "lineno": 720,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013817",
                "name": "Validator.isTeamMemberships",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "teamMemberships"
                ]
            }
        },
        "description": "<p>Validate Webex Team Membership Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of TeamMembership objects</p>",
                "name": "teamMemberships"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isTeamMemberships",
        "longname": "Validator.isTeamMemberships",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Team Memebership Search Object.\n *\n * @function\n * @memberof Validator\n * @param {TeamMembershipSearch} searchObj TeamMembership object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                17977,
                18155
            ],
            "filename": "validator.js",
            "lineno": 735,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013841",
                "name": "Validator.isTeamMembershipSearch",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "searchObj"
                ]
            }
        },
        "description": "<p>Validate Webex Team Memebership Search Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "TeamMembershipSearch"
                    ]
                },
                "description": "<p>TeamMembership object</p>",
                "name": "searchObj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isTeamMembershipSearch",
        "longname": "Validator.isTeamMembershipSearch",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Webhook Object.\n *\n * @function\n * @memberof Validator\n * @param {Webhook} webhook Webhook object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                18324,
                18520
            ],
            "filename": "validator.js",
            "lineno": 753,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013867",
                "name": "Validator.isWebhook",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "webhook"
                ]
            },
            "vars": {
                "result": "Validator.isWebhook~result"
            }
        },
        "description": "<p>Validate Webex Webhook Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Webhook"
                    ]
                },
                "description": "<p>Webhook object</p>",
                "name": "webhook"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isWebhook",
        "longname": "Validator.isWebhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18369,
                18500
            ],
            "filename": "validator.js",
            "lineno": 754,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013875",
                "name": "result",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Validator.isWebhook~result",
        "kind": "constant",
        "memberof": "Validator.isWebhook",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @description Validate Webex Webhook Objects in Array.\n *\n * @function\n * @memberof Validator\n * @param {Array} webhooks Array of Webhook objects\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                18708,
                18854
            ],
            "filename": "validator.js",
            "lineno": 771,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013900",
                "name": "Validator.isWebhooks",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "webhooks"
                ]
            }
        },
        "description": "<p>Validate Webex Webhook Objects in Array.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "<p>Array of Webhook objects</p>",
                "name": "webhooks"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isWebhooks",
        "longname": "Validator.isWebhooks",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate Webex Webhook Search Object.\n *\n * @function\n * @memberof Validator\n * @param {WebhookSearch} searchObj TeamMembership object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                19045,
                19167
            ],
            "filename": "validator.js",
            "lineno": 786,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013924",
                "name": "Validator.isWebhookSearch",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "searchObj"
                ]
            }
        },
        "description": "<p>Validate Webex Webhook Search Object.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "WebhookSearch"
                    ]
                },
                "description": "<p>TeamMembership object</p>",
                "name": "searchObj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "isWebhookSearch",
        "longname": "Validator.isWebhookSearch",
        "scope": "static"
    },
    {
        "comment": "/**\n * @description Validate that two ojbects are the same.\n *\n * @function\n * @memberof Validator\n * @param {obj} obj1 object\n * @param {obj} obj2 object\n * @returns {Boolean} result\n */",
        "meta": {
            "range": [
                19358,
                19697
            ],
            "filename": "validator.js",
            "lineno": 802,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013942",
                "name": "Validator.objIsEqual",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "obj1",
                    "obj2"
                ]
            },
            "vars": {
                "key": "Validator.objIsEqual~key"
            }
        },
        "description": "<p>Validate that two ojbects are the same.</p>",
        "kind": "function",
        "memberof": "Validator",
        "params": [
            {
                "type": {
                    "names": [
                        "obj"
                    ]
                },
                "description": "<p>object</p>",
                "name": "obj1"
            },
            {
                "type": {
                    "names": [
                        "obj"
                    ]
                },
                "description": "<p>object</p>",
                "name": "obj2"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "<p>result</p>"
            }
        ],
        "name": "objIsEqual",
        "longname": "Validator.objIsEqual",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19498,
                19501
            ],
            "filename": "validator.js",
            "lineno": 806,
            "columnno": 11,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013965",
                "name": "key"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "Validator.objIsEqual~key",
        "kind": "member",
        "memberof": "Validator.objIsEqual",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19699,
                19725
            ],
            "filename": "validator.js",
            "lineno": 816,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100013995",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Validator",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19,
                41
            ],
            "filename": "webhook.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014005",
                "name": "when",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "when",
        "longname": "when",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                47,
                73
            ],
            "filename": "webhook.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014011",
                "name": "crypto",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "crypto",
        "longname": "crypto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                79,
                120
            ],
            "filename": "webhook.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014017",
                "name": "processEvent",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "processEvent",
        "longname": "processEvent",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Processes a inbound Webex API webhook.\n * @function\n * @private\n * @param {Object} framework - The framework object this function applies to.\n * @returns {Function}\n * Function that can be used for Express and Express-like webserver routes.\n *\n */",
        "meta": {
            "range": [
                378,
                2031
            ],
            "filename": "webhook.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014022",
                "name": "Webhook",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "<p>Processes a inbound Webex API webhook.</p>",
        "kind": "function",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The framework object this function applies to.</p>",
                "name": "framework"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "<p>Function that can be used for Express and Express-like webserver routes.</p>"
            }
        ],
        "name": "Webhook",
        "longname": "Webhook",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                720,
                785
            ],
            "filename": "webhook.js",
            "lineno": 29,
            "columnno": 8,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014063",
                "name": "body",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "<anonymous>~body",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                953,
                1000
            ],
            "filename": "webhook.js",
            "lineno": 36,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014090",
                "name": "sig",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sig",
        "longname": "<anonymous>~sig",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1275,
                1340
            ],
            "filename": "webhook.js",
            "lineno": 44,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014129",
                "name": "hmac",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hmac",
        "longname": "<anonymous>~hmac",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1354,
                1384
            ],
            "filename": "webhook.js",
            "lineno": 45,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014142",
                "name": "payload",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "payload",
        "longname": "<anonymous>~payload",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1428,
                1455
            ],
            "filename": "webhook.js",
            "lineno": 47,
            "columnno": 12,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014156",
                "name": "digest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "digest",
        "longname": "<anonymous>~digest",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2033,
                2057
            ],
            "filename": "webhook.js",
            "lineno": 67,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014184",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Webhook",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19,
                41
            ],
            "filename": "websocket.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014194",
                "name": "when",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "when",
        "longname": "when",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                80,
                121
            ],
            "filename": "websocket.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014200",
                "name": "processEvent",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "processEvent",
        "longname": "processEvent",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * A class to register for webex teams messaging events to be delivered\n * via socket using the webex SDK\n * \n * This class will register to listen to the events.  When an event\n * is received it will call the webhook handler with the event payload\n * \n * This approach allows bot developers to deploy bots behind a firewall\n * without requiring a public IP address in order to receive webhooks\n * \n * @function\n * @private\n * @param {Object} framework - The framework object this function applies to.\n * @param {Object} webhook - The webhook handler object for this instance\n * @returns {Object}\n *\n */",
        "meta": {
            "range": [
                733,
                1030
            ],
            "filename": "websocket.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014205",
                "name": "Websocket",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "framework",
                    "webhook"
                ]
            },
            "vars": {
                "this.framework": null,
                "this.webhook": null,
                "this.name": null,
                "framework.webhook.name": "framework.webhook.name"
            }
        },
        "description": "<p>A class to register for webex teams messaging events to be delivered\nvia socket using the webex SDK</p>\n<p>This class will register to listen to the events.  When an event\nis received it will call the webhook handler with the event payload</p>\n<p>This approach allows bot developers to deploy bots behind a firewall\nwithout requiring a public IP address in order to receive webhooks</p>",
        "kind": "function",
        "access": "private",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The framework object this function applies to.</p>",
                "name": "framework"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "<p>The webhook handler object for this instance</p>",
                "name": "webhook"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "name": "Websocket",
        "longname": "Websocket",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                776,
                802
            ],
            "filename": "websocket.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014211",
                "name": "this.framework",
                "type": "Identifier",
                "value": "framework",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "framework",
        "longname": "framework",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                806,
                845
            ],
            "filename": "websocket.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014217",
                "name": "this.webhook",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "webhook",
        "longname": "webhook",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                953,
                989
            ],
            "filename": "websocket.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014226",
                "name": "this.name",
                "type": "Literal",
                "value": "webex sdk socket event",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "name",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                993,
                1027
            ],
            "filename": "websocket.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014232",
                "name": "framework.webhook.name",
                "type": "MemberExpression",
                "value": "this.name",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "framework.webhook.name",
        "kind": "member",
        "memberof": "framework.webhook",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1032,
                3051
            ],
            "filename": "websocket.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014242",
                "name": "Websocket.prototype.init",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "init",
        "longname": "Websocket#init",
        "kind": "function",
        "memberof": "Websocket",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1491,
                1512
            ],
            "filename": "websocket.js",
            "lineno": 46,
            "columnno": 10,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014295",
                "name": "listenerPromises",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "listenerPromises",
        "longname": "<anonymous>~listenerPromises",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3054,
                4079
            ],
            "filename": "websocket.js",
            "lineno": 72,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014585",
                "name": "Websocket.prototype.cleanup",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "cleanup",
        "longname": "Websocket#cleanup",
        "kind": "function",
        "memberof": "Websocket",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4082,
                4309
            ],
            "filename": "websocket.js",
            "lineno": 95,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014721",
                "name": "deletePreviousDeviceRegistrationsIfConfigured",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "doDelete",
                    "webex"
                ]
            }
        },
        "undocumented": true,
        "name": "deletePreviousDeviceRegistrationsIfConfigured",
        "longname": "deletePreviousDeviceRegistrationsIfConfigured",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4311,
                4493
            ],
            "filename": "websocket.js",
            "lineno": 104,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014738",
                "name": "deleteAllDevices",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "webex"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "deleteAllDevices",
        "longname": "deleteAllDevices",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4395,
                4406
            ],
            "filename": "websocket.js",
            "lineno": 105,
            "columnno": 49,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014754",
                "name": "name",
                "type": "Literal",
                "value": "wdm"
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "name",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4446,
                4462
            ],
            "filename": "websocket.js",
            "lineno": 106,
            "columnno": 37,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014764",
                "name": "method",
                "type": "Literal",
                "value": "DELETE"
            }
        },
        "undocumented": true,
        "name": "method",
        "longname": "method",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4464,
                4488
            ],
            "filename": "websocket.js",
            "lineno": 106,
            "columnno": 55,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014766",
                "name": "url",
                "type": "TemplateLiteral",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "url",
        "longname": "url",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4495,
                4521
            ],
            "filename": "websocket.js",
            "lineno": 109,
            "columnno": 0,
            "path": "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib",
            "code": {
                "id": "astnode100014772",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Websocket",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/bot.js",
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/framework.js",
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/logs.js",
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/membership-rules.js",
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/process-event.js",
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/utils.js",
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/validator.js",
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/webhook.js",
            "/Users/tstatler/Documents/GitHub/webex-node-bot-framework/lib/websocket.js"
        ]
    }
]
